from CombatCode.Moves import * 

BattleMovedex = {'10000000voltthunderbolt': {'accuracy': True,
                             'basePower': 195,
                             'category': 'Special',
                             'contestType': 'Cool',
                             'critRatio': 3,
                             'desc': 'Has a very high chance for a critical '
                                     'hit.',
                             'flags': {},
                             'id': '10000000voltthunderbolt',
                             'isZ': 'pikashuniumz',
                             'name': '10,000,000 Volt Thunderbolt',
                             'num': 719,
                             'pp': 1,
                             'priority': 0,
                             'secondary': {},
                             'shortDesc': 'Very high critical hit ratio.',
                             'target': 'normal',
                             'type': 'Electric'},
 'absorb': {'accuracy': 100,
            'basePower': 20,
            'category': 'Special',
            'contestType': 'Clever',
            'desc': 'The user recovers 1/2 the HP lost by the target, rounded '
                    'half up. If Big Root is held by the user, the HP '
                    'recovered is 1.3x normal, rounded half down.',
            'drain': {'0': 1, '1': 2},
            'flags': {'heal': 1, 'mirror': 1, 'protect': 1},
            'id': 'absorb',
            'name': 'Absorb',
            'num': 71,
            'pp': 25,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'User recovers 50% of the damage dealt.',
            'target': 'normal',
            'type': 'Grass',
            'zMovePower': 100},
 'accelerock': {'accuracy': 100,
                'basePower': 40,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'No additional effect.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'accelerock',
                'isViable': True,
                'name': 'Accelerock',
                'num': 709,
                'pp': 20,
                'priority': 1,
                'secondary': {},
                'shortDesc': 'Usually goes first.',
                'target': 'normal',
                'type': 'Rock',
                'zMovePower': 100},
 'acid': {'accuracy': 100,
          'basePower': 40,
          'category': 'Special',
          'contestType': 'Clever',
          'desc': "Has a 10% chance to lower the target's Special Defense by 1 "
                  'stage.',
          'flags': {'mirror': 1, 'protect': 1},
          'id': 'acid',
          'name': 'Acid',
          'num': 51,
          'pp': 30,
          'priority': 0,
          'secondary': {'boosts': {'spd': -1}, 'chance': 10},
          'shortDesc': '10% chance to lower the foe(s) Sp. Def by 1.',
          'target': 'allAdjacentFoes',
          'type': 'Poison',
          'zMovePower': 100},
 'acidarmor': {'accuracy': True,
               'basePower': 0,
               'boosts': {'def': 2},
               'category': 'Status',
               'contestType': 'Tough',
               'desc': "Raises the user's Defense by 2 stages.",
               'flags': {'snatch': 1},
               'id': 'acidarmor',
               'name': 'Acid Armor',
               'num': 151,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Raises the user's Defense by 2.",
               'target': 'self',
               'type': 'Poison',
               'zMoveEffect': 'clearnegativeboost'},
 'aciddownpour': {'accuracy': True,
                  'basePower': 1,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'flags': {},
                  'id': 'aciddownpour',
                  'isViable': True,
                  'isZ': 'poisoniumz',
                  'name': 'Acid Downpour',
                  'num': 628,
                  'pp': 1,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Power is equal to the base move's Z-Power.",
                  'target': 'normal',
                  'type': 'Poison'},
 'acidspray': {'accuracy': 100,
               'basePower': 40,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Has a 100% chance to lower the target's Special "
                       'Defense by 2 stages.',
               'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
               'id': 'acidspray',
               'isViable': True,
               'name': 'Acid Spray',
               'num': 491,
               'pp': 20,
               'priority': 0,
               'secondary': {'boosts': {'spd': -2}, 'chance': 100},
               'shortDesc': "100% chance to lower the target's Sp. Def by 2.",
               'target': 'normal',
               'type': 'Poison',
               'zMovePower': 100},
 'acrobatics': {'accuracy': 100,
                'basePower': 55,
                'basePowerCallback': acrobatics.basePowerCallback,
                'category': 'Physical',
                'contestType': 'Cool',
                'flags': {'contact': 1,
                          'distance': 1,
                          'mirror': 1,
                          'protect': 1},
                'id': 'acrobatics',
                'isViable': True,
                'name': 'Acrobatics',
                'num': 512,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Power doubles if the user has no held item.',
                'target': 'any',
                'type': 'Flying',
                'zMovePower': 100},
 'acupressure': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Tough',
                 'desc': 'Raises a random stat by 2 stages as long as the stat '
                         'is not already at stage 6. The user can choose to '
                         'use this move on itself or an adjacent ally. Fails '
                         'if no stat stage can be raised or if used on an ally '
                         'with a substitute.',
                 'flags': {},
                 'id': 'acupressure',
                 'name': 'Acupressure',
                 'num': 367,
                 'onHit': acupressure.onHit,
                 'pp': 30,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Raises a random stat of the user or an ally by '
                              '2.',
                 'target': 'adjacentAllyOrSelf',
                 'type': 'Normal',
                 'zMoveEffect': 'crit2'},
 'aerialace': {'accuracy': True,
               'basePower': 60,
               'category': 'Physical',
               'contestType': 'Cool',
               'flags': {'contact': 1,
                         'distance': 1,
                         'mirror': 1,
                         'protect': 1},
               'id': 'aerialace',
               'isViable': True,
               'name': 'Aerial Ace',
               'num': 332,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'This move does not check accuracy.',
               'target': 'any',
               'type': 'Flying',
               'zMovePower': 120},
 'aeroblast': {'accuracy': 95,
               'basePower': 100,
               'category': 'Special',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'distance': 1, 'mirror': 1, 'protect': 1},
               'id': 'aeroblast',
               'isViable': True,
               'name': 'Aeroblast',
               'num': 177,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio.',
               'target': 'any',
               'type': 'Flying',
               'zMovePower': 180},
 'afteryou': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cute',
              'desc': 'The target makes its move immediately after the user '
                      'this turn, no matter the priority of its selected move. '
                      'Fails if the target would have moved next anyway, or if '
                      'the target already moved this turn.',
              'flags': {'authentic': 1, 'mystery': 1},
              'id': 'afteryou',
              'name': 'After You',
              'num': 495,
              'onHit': afteryou.onHit,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'The target makes its move right after the user.',
              'target': 'normal',
              'type': 'Normal',
              'zMoveBoost': {'spe': 1}},
 'agility': {'accuracy': True,
             'basePower': 0,
             'boosts': {'spe': 2},
             'category': 'Status',
             'contestType': 'Cool',
             'desc': "Raises the user's Speed by 2 stages.",
             'flags': {'snatch': 1},
             'id': 'agility',
             'isViable': True,
             'name': 'Agility',
             'num': 97,
             'pp': 30,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Raises the user's Speed by 2.",
             'target': 'self',
             'type': 'Psychic',
             'zMoveEffect': 'clearnegativeboost'},
 'aircutter': {'accuracy': 95,
               'basePower': 60,
               'category': 'Special',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'aircutter',
               'name': 'Air Cutter',
               'num': 314,
               'pp': 25,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio. Hits adjacent foes.',
               'target': 'allAdjacentFoes',
               'type': 'Flying',
               'zMovePower': 120},
 'airslash': {'accuracy': 95,
              'basePower': 75,
              'category': 'Special',
              'contestType': 'Cool',
              'desc': 'Has a 30% chance to flinch the target.',
              'flags': {'distance': 1, 'mirror': 1, 'protect': 1},
              'id': 'airslash',
              'isViable': True,
              'name': 'Air Slash',
              'num': 403,
              'pp': 15,
              'priority': 0,
              'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
              'shortDesc': '30% chance to flinch the target.',
              'target': 'any',
              'type': 'Flying',
              'zMovePower': 140},
 'alloutpummeling': {'accuracy': True,
                     'basePower': 1,
                     'category': 'Physical',
                     'contestType': 'Cool',
                     'flags': {},
                     'id': 'alloutpummeling',
                     'isViable': True,
                     'isZ': 'fightiniumz',
                     'name': 'All-Out Pummeling',
                     'num': 624,
                     'pp': 1,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "Power is equal to the base move's Z-Power.",
                     'target': 'normal',
                     'type': 'Fighting'},
 'allyswitch': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'The user swaps positions with its ally. Fails if the '
                        'user is the only Pokemon on its side.',
                'flags': {},
                'id': 'allyswitch',
                'name': 'Ally Switch',
                'num': 502,
                'onHit': allyswitch.onHit,
                'onTryHit': allyswitch.onTryHit,
                'pp': 15,
                'priority': 2,
                'secondary': {},
                'shortDesc': 'The user swaps positions with its ally.',
                'target': 'self',
                'type': 'Psychic',
                'zMoveBoost': {'spe': 2}},
 'amnesia': {'accuracy': True,
             'basePower': 0,
             'boosts': {'spd': 2},
             'category': 'Status',
             'contestType': 'Cute',
             'desc': "Raises the user's Special Defense by 2 stages.",
             'flags': {'snatch': 1},
             'id': 'amnesia',
             'name': 'Amnesia',
             'num': 133,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Raises the user's Sp. Def by 2.",
             'target': 'self',
             'type': 'Psychic',
             'zMoveEffect': 'clearnegativeboost'},
 'anchorshot': {'accuracy': 100,
                'basePower': 80,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'Prevents the target from switching out. The target '
                        'can still switch out if it is holding Shed Shell or '
                        'uses Baton Pass, Parting Shot, U-turn, or Volt '
                        'Switch. If the target leaves the field using Baton '
                        'Pass, the replacement will remain trapped. The effect '
                        'ends if the user leaves the field.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'anchorshot',
                'isViable': True,
                'name': 'Anchor Shot',
                'num': 677,
                'pp': 20,
                'priority': 0,
                'secondary': {'chance': 100,
                              'onHit': anchorshot.onHit},
                'shortDesc': 'Prevents the target from switching out.',
                'target': 'normal',
                'type': 'Steel',
                'zMovePower': 160},
 'ancientpower': {'accuracy': 100,
                  'basePower': 60,
                  'category': 'Special',
                  'contestType': 'Tough',
                  'desc': "Has a 10% chance to raise the user's Attack, "
                          'Defense, Special Attack, Special Defense, and Speed '
                          'by 1 stage.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'ancientpower',
                  'name': 'Ancient Power',
                  'num': 246,
                  'pp': 5,
                  'priority': 0,
                  'secondary': {'chance': 10,
                                'self': {'boosts': {'atk': 1,
                                                    'def': 1,
                                                    'spa': 1,
                                                    'spd': 1,
                                                    'spe': 1}}},
                  'shortDesc': '10% chance to raise all stats by 1 (not '
                               'acc/eva).',
                  'target': 'normal',
                  'type': 'Rock',
                  'zMovePower': 120},
 'aquajet': {'accuracy': 100,
             'basePower': 40,
             'category': 'Physical',
             'contestType': 'Cool',
             'desc': 'No additional effect.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'aquajet',
             'isViable': True,
             'name': 'Aqua Jet',
             'num': 453,
             'pp': 20,
             'priority': 1,
             'secondary': {},
             'shortDesc': 'Usually goes first.',
             'target': 'normal',
             'type': 'Water',
             'zMovePower': 100},
 'aquaring': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': 'The user has 1/16 of its maximum HP, rounded down, '
                      'restored at the end of each turn while it remains '
                      'active. If Big Root is held by the user, the HP '
                      'recovered is 1.3x normal, rounded half down. If the '
                      'user uses Baton Pass, the replacement will receive the '
                      'healing effect.',
              'effect': {'onResidual': aquaring.onResidual,
                         'onResidualOrder': 6,
                         'onStart': aquaring.onStart},
              'flags': {'snatch': 1},
              'id': 'aquaring',
              'name': 'Aqua Ring',
              'num': 392,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'User recovers 1/16 max HP per turn.',
              'target': 'self',
              'type': 'Water',
              'volatileStatus': 'aquaring',
              'zMoveBoost': {'def': 1}},
 'aquatail': {'accuracy': 90,
              'basePower': 90,
              'category': 'Physical',
              'contestType': 'Beautiful',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'aquatail',
              'isViable': True,
              'name': 'Aqua Tail',
              'num': 401,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Water',
              'zMovePower': 175},
 'armthrust': {'accuracy': 100,
               'basePower': 15,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Hits two to five times. Has a 1/3 chance to hit two or '
                       'three times, and a 1/6 chance to hit four or five '
                       "times. If one of the hits breaks the target's "
                       'substitute, it will take damage for the remaining '
                       'hits. If the user has the Skill Link Ability, this '
                       'move will always hit five times.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'armthrust',
               'multihit': {'0': 2, '1': 5},
               'name': 'Arm Thrust',
               'num': 292,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Hits 2-5 times in one turn.',
               'target': 'normal',
               'type': 'Fighting',
               'zMovePower': 100},
 'aromatherapy': {'accuracy': True,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Clever',
                  'desc': "Every Pokemon in the user's party is cured of its "
                          'major status condition. Active Pokemon with the Sap '
                          'Sipper Ability are not cured, unless they are the '
                          'user.',
                  'flags': {'distance': 1, 'snatch': 1},
                  'id': 'aromatherapy',
                  'isViable': True,
                  'name': 'Aromatherapy',
                  'num': 312,
                  'onHit': aromatherapy.onHit,
                  'pp': 5,
                  'priority': 0,
                  'shortDesc': "Cures the user's party of all status "
                               'conditions.',
                  'target': 'allyTeam',
                  'type': 'Grass',
                  'zMoveEffect': 'heal'},
 'aromaticmist': {'accuracy': True,
                  'basePower': 0,
                  'boosts': {'spd': 1},
                  'category': 'Status',
                  'contestType': 'Beautiful',
                  'desc': "Raises the target's Special Defense by 1 stage. "
                          'Fails if there is no ally adjacent to the user.',
                  'flags': {'authentic': 1},
                  'id': 'aromaticmist',
                  'name': 'Aromatic Mist',
                  'num': 597,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Raises an ally's Sp. Def by 1.",
                  'target': 'adjacentAlly',
                  'type': 'Fairy',
                  'zMoveBoost': {'spd': 2}},
 'assist': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Cute',
            'desc': "A random move among those known by the user's party "
                    'members is selected for use. Does not select Assist, '
                    'Baneful Bunker, Beak Blast, Belch, Bestow, Bounce, '
                    'Chatter, Circle Throw, Copycat, Counter, Covet, Destiny '
                    'Bond, Detect, Dig, Dive, Dragon Tail, Endure, Feint, Fly, '
                    "Focus Punch, Follow Me, Helping Hand, Hold Hands, King's "
                    'Shield, Mat Block, Me First, Metronome, Mimic, Mirror '
                    'Coat, Mirror Move, Nature Power, Phantom Force, Protect, '
                    'Rage Powder, Roar, Shadow Force, Shell Trap, Sketch, Sky '
                    'Drop, Sleep Talk, Snatch, Spiky Shield, Spotlight, '
                    'Struggle, Switcheroo, Thief, Transform, Trick, Whirlwind, '
                    'or any Z-Move.',
            'flags': {},
            'id': 'assist',
            'name': 'Assist',
            'num': 274,
            'onHit': assist.onHit,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Uses a random move known by a team member.',
            'target': 'self',
            'type': 'Normal'},
 'assurance': {'accuracy': 100,
               'basePower': 60,
               'basePowerCallback': assurance.basePowerCallback,
               'category': 'Physical',
               'contestType': 'Clever',
               'desc': 'Power doubles if the target has already taken damage '
                       'this turn, other than direct damage from Belly Drum, '
                       'confusion, Curse, or Pain Split.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'assurance',
               'name': 'Assurance',
               'num': 372,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Power doubles if target was damaged this turn.',
               'target': 'normal',
               'type': 'Dark',
               'zMovePower': 120},
 'astonish': {'accuracy': 100,
              'basePower': 30,
              'category': 'Physical',
              'contestType': 'Cute',
              'desc': 'Has a 30% chance to flinch the target.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'astonish',
              'name': 'Astonish',
              'num': 310,
              'pp': 15,
              'priority': 0,
              'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
              'shortDesc': '30% chance to flinch the target.',
              'target': 'normal',
              'type': 'Ghost',
              'zMovePower': 100},
 'attackorder': {'accuracy': 100,
                 'basePower': 90,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'critRatio': 2,
                 'desc': 'Has a higher chance for a critical hit.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'attackorder',
                 'isViable': True,
                 'name': 'Attack Order',
                 'num': 454,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'High critical hit ratio.',
                 'target': 'normal',
                 'type': 'Bug',
                 'zMovePower': 175},
 'attract': {'accuracy': 100,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Cute',
             'desc': 'Causes the target to become infatuated, making it unable '
                     'to attack 50% of the time. Fails if both the user and '
                     'the target are the same gender, if either is genderless, '
                     'or if the target is already infatuated. The effect ends '
                     'when either the user or the target is no longer active. '
                     'Pokemon with the Oblivious Ability or protected by the '
                     'Aroma Veil Ability are immune.',
             'effect': {'noCopy': True,
                        'onBeforeMove': attract.onBeforeMove,
                        'onBeforeMovePriority': 2,
                        'onEnd': attract.onEnd,
                        'onStart': attract.onStart,
                        'onUpdate': attract.onUpdate},
             'flags': {'authentic': 1,
                       'mirror': 1,
                       'protect': 1,
                       'reflectable': 1},
             'id': 'attract',
             'name': 'Attract',
             'num': 213,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'A target of the opposite gender gets infatuated.',
             'target': 'normal',
             'type': 'Normal',
             'volatileStatus': 'attract',
             'zMoveEffect': 'clearnegativeboost'},
 'aurasphere': {'accuracy': True,
                'basePower': 80,
                'category': 'Special',
                'contestType': 'Beautiful',
                'flags': {'bullet': 1,
                          'distance': 1,
                          'mirror': 1,
                          'protect': 1,
                          'pulse': 1},
                'id': 'aurasphere',
                'isViable': True,
                'name': 'Aura Sphere',
                'num': 396,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'This move does not check accuracy.',
                'target': 'any',
                'type': 'Fighting',
                'zMovePower': 160},
 'aurorabeam': {'accuracy': 100,
                'basePower': 65,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 10% chance to lower the target's Attack by 1 "
                        'stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'aurorabeam',
                'name': 'Aurora Beam',
                'num': 62,
                'pp': 20,
                'priority': 0,
                'secondary': {'boosts': {'atk': -1}, 'chance': 10},
                'shortDesc': "10% chance to lower the target's Attack by 1.",
                'target': 'normal',
                'type': 'Ice',
                'zMovePower': 120},
 'auroraveil': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Beautiful',
                'desc': 'For 5 turns, the user and its party members take 0.5x '
                        'damage from physical and special attacks, or 0.66x '
                        'damage if in a Double Battle; does not reduce damage '
                        'further with Reflect or Light Screen. Critical hits '
                        "ignore this protection. It is removed from the user's "
                        'side if the user or an ally is successfully hit by '
                        'Brick Break, Psychic Fangs, or Defog. Brick Break and '
                        'Psychic Fangs remove the effect before damage is '
                        'calculated. Lasts for 8 turns if the user is holding '
                        'Light Clay. Fails unless the weather is Hail.',
                'effect': {'duration': 5,
                           'durationCallback': auroraveil.durationCallback,
                           'onAnyModifyDamage': auroraveil.onAnyModifyDamage,
                           'onEnd': auroraveil.onEnd,
                           'onResidualOrder': 21,
                           'onResidualSubOrder': 1,
                           'onStart': auroraveil.onStart},
                'flags': {'snatch': 1},
                'id': 'auroraveil',
                'isViable': True,
                'name': 'Aurora Veil',
                'num': 694,
                'onTryHitSide': auroraveil.onTryHitSide,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'For 5 turns, damage to allies is halved. Hail '
                             'only.',
                'sideCondition': 'auroraveil',
                'target': 'allySide',
                'type': 'Ice',
                'zMoveBoost': {'spe': 1}},
 'autotomize': {'accuracy': True,
                'basePower': 0,
                'boosts': {'spe': 2},
                'category': 'Status',
                'contestType': 'Beautiful',
                'desc': "Raises the user's Speed by 2 stages. If the user's "
                        "Speed was changed, the user's weight is reduced by "
                        '100 kg as long as it remains active. This effect is '
                        "stackable but cannot reduce the user's weight to less "
                        'than 0.1 kg.',
                'effect': {'noCopy': True,
                           'onModifyWeight': autotomize.onModifyWeight,
                           'onModifyWeightPriority': 1,
                           'onRestart': autotomize.onRestart,
                           'onStart': autotomize.onStart},
                'flags': {'snatch': 1},
                'id': 'autotomize',
                'isViable': True,
                'name': 'Autotomize',
                'num': 475,
                'onTryHit': autotomize.onTryHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Raises the user's Speed by 2; user loses 100 kg.",
                'target': 'self',
                'type': 'Steel',
                'volatileStatus': 'autotomize',
                'zMoveEffect': 'clearnegativeboost'},
 'avalanche': {'accuracy': 100,
               'basePower': 60,
               'basePowerCallback': avalanche.basePowerCallback,
               'category': 'Physical',
               'contestType': 'Beautiful',
               'desc': 'Power doubles if the user was hit by the target this '
                       'turn.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'avalanche',
               'isViable': True,
               'name': 'Avalanche',
               'num': 419,
               'pp': 10,
               'priority': -4,
               'secondary': {},
               'shortDesc': 'Power doubles if user is damaged by the target.',
               'target': 'normal',
               'type': 'Ice',
               'zMovePower': 120},
 'babydolleyes': {'accuracy': 100,
                  'basePower': 0,
                  'boosts': {'atk': -1},
                  'category': 'Status',
                  'contestType': 'Cute',
                  'desc': "Lowers the target's Attack by 1 stage.",
                  'flags': {'mirror': 1,
                            'mystery': 1,
                            'protect': 1,
                            'reflectable': 1},
                  'id': 'babydolleyes',
                  'name': 'Baby-Doll Eyes',
                  'num': 608,
                  'pp': 30,
                  'priority': 1,
                  'secondary': {},
                  'shortDesc': "Lowers the target's Attack by 1.",
                  'target': 'normal',
                  'type': 'Fairy',
                  'zMoveBoost': {'def': 1}},
 'baddybad': {'accuracy': 100,
              'basePower': 90,
              'category': 'Special',
              'contestType': 'Clever',
              'desc': 'This move summons Reflect for 5 turns upon use.',
              'flags': {'protect': 1},
              'id': 'baddybad',
              'isNonstandard': True,
              'isUnreleased': True,
              'isViable': True,
              'name': 'Baddy Bad',
              'num': 737,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'self': {'sideCondition': 'reflect'},
              'shortDesc': 'Summons Reflect.',
              'target': 'normal',
              'type': 'Dark'},
 'banefulbunker': {'accuracy': True,
                   'basePower': 0,
                   'category': 'Status',
                   'contestType': 'Tough',
                   'desc': 'The user is protected from most attacks made by '
                           'other Pokemon during this turn, and Pokemon making '
                           'contact with the user become poisoned. This move '
                           'has a 1/X chance of being successful, where X '
                           'starts at 1 and triples each time this move is '
                           'successfully used. X resets to 1 if this move '
                           "fails, if the user's last move used is not Baneful "
                           "Bunker, Detect, Endure, King's Shield, Protect, "
                           'Quick Guard, Spiky Shield, or Wide Guard, or if it '
                           "was one of those moves and the user's protection "
                           'was broken. Fails if the user moves last this '
                           'turn.',
                   'effect': {'duration': 1,
                              'onHit': banefulbunker.onHit,
                              'onStart': banefulbunker.onStart,
                              'onTryHit': banefulbunker.onTryHit,
                              'onTryHitPriority': 3},
                   'flags': {},
                   'id': 'banefulbunker',
                   'isViable': True,
                   'name': 'Baneful Bunker',
                   'num': 661,
                   'onHit': banefulbunker.onHit,
                   'onTryHit': banefulbunker.onTryHit,
                   'pp': 10,
                   'priority': 4,
                   'secondary': {},
                   'shortDesc': 'Protects from moves. Contact: poison.',
                   'stallingMove': True,
                   'target': 'self',
                   'type': 'Poison',
                   'volatileStatus': 'banefulbunker',
                   'zMoveBoost': {'def': 1}},
 'barrage': {'accuracy': 85,
             'basePower': 15,
             'category': 'Physical',
             'contestType': 'Cute',
             'desc': 'Hits two to five times. Has a 1/3 chance to hit two or '
                     'three times, and a 1/6 chance to hit four or five times. '
                     "If one of the hits breaks the target's substitute, it "
                     'will take damage for the remaining hits. If the user has '
                     'the Skill Link Ability, this move will always hit five '
                     'times.',
             'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
             'id': 'barrage',
             'multihit': {'0': 2, '1': 5},
             'name': 'Barrage',
             'num': 140,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Hits 2-5 times in one turn.',
             'target': 'normal',
             'type': 'Normal',
             'zMovePower': 100},
 'barrier': {'accuracy': True,
             'basePower': 0,
             'boosts': {'def': 2},
             'category': 'Status',
             'contestType': 'Cool',
             'desc': "Raises the user's Defense by 2 stages.",
             'flags': {'snatch': 1},
             'id': 'barrier',
             'name': 'Barrier',
             'num': 112,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Raises the user's Defense by 2.",
             'target': 'self',
             'type': 'Psychic',
             'zMoveEffect': 'clearnegativeboost'},
 'batonpass': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': 'The user is replaced with another Pokemon in its '
                       "party. The selected Pokemon has the user's stat stage "
                       'changes, confusion, and certain move effects '
                       'transferred to it.',
               'flags': {},
               'id': 'batonpass',
               'isViable': True,
               'name': 'Baton Pass',
               'num': 226,
               'pp': 40,
               'priority': 0,
               'secondary': {},
               'selfSwitch': 'copyvolatile',
               'shortDesc': 'User switches, passing stat changes and more.',
               'target': 'self',
               'type': 'Normal',
               'zMoveEffect': 'clearnegativeboost'},
 'beakblast': {'accuracy': 100,
               'basePower': 100,
               'beforeTurnCallback': beakblast.beforeTurnCallback,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'If the user is hit by a contact move this turn before '
                       'it can execute this move, the attacker is burned.',
               'effect': {'duration': 1,
                          'onHit': beakblast.onHit,
                          'onStart': beakblast.onStart},
               'flags': {'bullet': 1, 'protect': 1},
               'id': 'beakblast',
               'isViable': True,
               'name': 'Beak Blast',
               'num': 690,
               'onAfterMove': beakblast.onAfterMove,
               'onMoveAborted': beakblast.onMoveAborted,
               'pp': 15,
               'priority': -3,
               'secondary': {},
               'shortDesc': 'Burns on contact with the user before it moves.',
               'target': 'normal',
               'type': 'Flying',
               'zMovePower': 180},
 'beatup': {'accuracy': 100,
            'basePower': 0,
            'basePowerCallback': beatup.basePowerCallback,
            'category': 'Physical',
            'contestType': 'Clever',
            'desc': 'Hits one time for the user and one time for each '
                    'unfainted Pokemon without a major status condition in the '
                    "user's party. The power of each hit is equal to 5+(X/10), "
                    "where X is each participating Pokemon's base Attack; each "
                    'hit is considered to come from the user.',
            'flags': {'mirror': 1, 'mystery': 1, 'protect': 1},
            'id': 'beatup',
            'name': 'Beat Up',
            'num': 251,
            'onModifyMove': beatup.onModifyMove,
            'pp': 10,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'All healthy allies aid in damaging the target.',
            'target': 'normal',
            'type': 'Dark',
            'zMovePower': 100},
 'belch': {'accuracy': 90,
           'basePower': 120,
           'category': 'Special',
           'contestType': 'Tough',
           'desc': 'This move cannot be selected until the user eats a Berry, '
                   'either by eating one that was held, stealing and eating '
                   'one off another Pokemon with Bug Bite or Pluck, or eating '
                   'one that was thrown at it with Fling. Once the condition '
                   'is met, this move can be selected and used for the rest of '
                   'the battle even if the user gains or uses another item or '
                   'switches out. Consuming a Berry with Natural Gift does not '
                   'count for the purposes of eating one.',
           'flags': {'protect': 1},
           'id': 'belch',
           'name': 'Belch',
           'num': 562,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Cannot be selected until the user eats a Berry.',
           'target': 'normal',
           'type': 'Poison',
           'zMovePower': 190},
 'bellydrum': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': "Raises the user's Attack by 12 stages in exchange for "
                       'the user losing 1/2 of its maximum HP, rounded down. '
                       'Fails if the user would faint or if its Attack stat '
                       'stage is 6.',
               'flags': {'snatch': 1},
               'id': 'bellydrum',
               'name': 'Belly Drum',
               'num': 187,
               'onHit': bellydrum.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User loses 50% max HP. Maximizes Attack.',
               'target': 'self',
               'type': 'Normal',
               'zMoveEffect': 'heal'},
 'bestow': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Cute',
            'desc': "The target receives the user's held item. Fails if the "
                    'user has no item or is holding a Mail or Z-Crystal, if '
                    'the target is already holding an item, if the user is a '
                    'Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a '
                    'Giratina holding a Griseous Orb, an Arceus holding a '
                    'Plate, a Genesect holding a Drive, a Silvally holding a '
                    'Memory, a Pokemon that can Mega Evolve holding the Mega '
                    'Stone for its species, or if the target is one of those '
                    'Pokemon and the user is holding the respective item.',
            'flags': {'authentic': 1, 'mirror': 1, 'mystery': 1},
            'id': 'bestow',
            'name': 'Bestow',
            'num': 516,
            'onHit': bestow.onHit,
            'pp': 15,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'User passes its held item to the target.',
            'target': 'normal',
            'type': 'Normal',
            'zMoveBoost': {'spe': 2}},
 'bide': {'accuracy': True,
          'basePower': 0,
          'beforeMoveCallback': bide.beforeMoveCallback,
          'category': 'Physical',
          'contestType': 'Tough',
          'desc': 'The user spends two turns locked into this move and then, '
                  'on the second turn after using this move, the user attacks '
                  'the last Pokemon that hit it, inflicting double the damage '
                  'in HP it lost to attacks during the two turns. If the last '
                  'Pokemon that hit it is no longer active, the user attacks a '
                  'random opposing Pokemon instead. If the user is prevented '
                  "from moving during this move's use, the effect ends. This "
                  'move does not check accuracy and does not ignore type '
                  'immunity.',
          'effect': {'duration': 3,
                     'onBeforeMove': bide.onBeforeMove,
                     'onDamage': bide.onDamage,
                     'onDamagePriority': -101,
                     'onEnd': bide.onEnd,
                     'onLockMove': 'bide',
                     'onMoveAborted': bide.onMoveAborted,
                     'onStart': bide.onStart},
          'flags': {'contact': 1, 'protect': 1},
          'id': 'bide',
          'ignoreImmunity': True,
          'name': 'Bide',
          'num': 117,
          'pp': 10,
          'priority': 1,
          'secondary': {},
          'shortDesc': 'Waits 2 turns; deals double the damage taken.',
          'target': 'self',
          'type': 'Normal',
          'volatileStatus': 'bide',
          'zMovePower': 100},
 'bind': {'accuracy': 85,
          'basePower': 15,
          'category': 'Physical',
          'contestType': 'Tough',
          'desc': 'Prevents the target from switching for four or five turns '
                  '(seven turns if the user is holding Grip Claw). Causes '
                  'damage to the target equal to 1/8 of its maximum HP (1/6 if '
                  'the user is holding Binding Band), rounded down, at the end '
                  'of each turn during effect. The target can still switch out '
                  'if it is holding Shed Shell or uses Baton Pass, Parting '
                  'Shot, U-turn, or Volt Switch. The effect ends if either the '
                  'user or the target leaves the field, or if the target uses '
                  'Rapid Spin or Substitute successfully. This effect is not '
                  'stackable or reset by using this or another binding move.',
          'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
          'id': 'bind',
          'name': 'Bind',
          'num': 20,
          'pp': 20,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Traps and damages the target for 4-5 turns.',
          'target': 'normal',
          'type': 'Normal',
          'volatileStatus': 'partiallytrapped',
          'zMovePower': 100},
 'bite': {'accuracy': 100,
          'basePower': 60,
          'category': 'Physical',
          'contestType': 'Tough',
          'desc': 'Has a 30% chance to flinch the target.',
          'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
          'id': 'bite',
          'name': 'Bite',
          'num': 44,
          'pp': 25,
          'priority': 0,
          'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
          'shortDesc': '30% chance to flinch the target.',
          'target': 'normal',
          'type': 'Dark',
          'zMovePower': 120},
 'blackholeeclipse': {'accuracy': True,
                      'basePower': 1,
                      'category': 'Physical',
                      'contestType': 'Cool',
                      'flags': {},
                      'id': 'blackholeeclipse',
                      'isViable': True,
                      'isZ': 'darkiniumz',
                      'name': 'Black Hole Eclipse',
                      'num': 654,
                      'pp': 1,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': "Power is equal to the base move's Z-Power.",
                      'target': 'normal',
                      'type': 'Dark'},
 'blastburn': {'accuracy': 90,
               'basePower': 150,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'If this move is successful, the user must recharge on '
                       'the following turn and cannot make a move.',
               'flags': {'mirror': 1, 'protect': 1, 'recharge': 1},
               'id': 'blastburn',
               'name': 'Blast Burn',
               'num': 307,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'self': {'volatileStatus': 'mustrecharge'},
               'shortDesc': 'User cannot move next turn.',
               'target': 'normal',
               'type': 'Fire',
               'zMovePower': 200},
 'blazekick': {'accuracy': 90,
               'basePower': 85,
               'category': 'Physical',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a 10% chance to burn the target and a higher '
                       'chance for a critical hit.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'blazekick',
               'isViable': True,
               'name': 'Blaze Kick',
               'num': 299,
               'pp': 10,
               'priority': 0,
               'secondary': {'chance': 10, 'status': 'brn'},
               'shortDesc': 'High critical hit ratio. 10% chance to burn.',
               'target': 'normal',
               'type': 'Fire',
               'zMovePower': 160},
 'blizzard': {'accuracy': 70,
              'basePower': 110,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': 'Has a 10% chance to freeze the target. If the weather '
                      'is Hail, this move does not check accuracy.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'blizzard',
              'isViable': True,
              'name': 'Blizzard',
              'num': 59,
              'onModifyMove': blizzard.onModifyMove,
              'pp': 5,
              'priority': 0,
              'secondary': {'chance': 10, 'status': 'frz'},
              'shortDesc': "10% chance to freeze foe(s). Can't miss in hail.",
              'target': 'allAdjacentFoes',
              'type': 'Ice',
              'zMovePower': 185},
 'block': {'accuracy': True,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Cute',
           'desc': 'Prevents the target from switching out. The target can '
                   'still switch out if it is holding Shed Shell or uses Baton '
                   'Pass, Parting Shot, U-turn, or Volt Switch. If the target '
                   'leaves the field using Baton Pass, the replacement will '
                   'remain trapped. The effect ends if the user leaves the '
                   'field.',
           'flags': {'mirror': 1, 'reflectable': 1},
           'id': 'block',
           'name': 'Block',
           'num': 335,
           'onHit': block.onHit,
           'pp': 5,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Prevents the target from switching out.',
           'target': 'normal',
           'type': 'Normal',
           'zMoveBoost': {'def': 1}},
 'bloomdoom': {'accuracy': True,
               'basePower': 1,
               'category': 'Physical',
               'contestType': 'Cool',
               'flags': {},
               'id': 'bloomdoom',
               'isViable': True,
               'isZ': 'grassiumz',
               'name': 'Bloom Doom',
               'num': 644,
               'pp': 1,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Power is equal to the base move's Z-Power.",
               'target': 'normal',
               'type': 'Grass'},
 'blueflare': {'accuracy': 85,
               'basePower': 130,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Has a 20% chance to burn the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'blueflare',
               'isViable': True,
               'name': 'Blue Flare',
               'num': 551,
               'pp': 5,
               'priority': 0,
               'secondary': {'chance': 20, 'status': 'brn'},
               'shortDesc': '20% chance to burn the target.',
               'target': 'normal',
               'type': 'Fire',
               'zMovePower': 195},
 'bodyslam': {'accuracy': 100,
              'basePower': 85,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Has a 30% chance to paralyze the target. Damage doubles '
                      'and no accuracy check is done if the target has used '
                      'Minimize while active.',
              'flags': {'contact': 1, 'mirror': 1, 'nonsky': 1, 'protect': 1},
              'id': 'bodyslam',
              'isViable': True,
              'name': 'Body Slam',
              'num': 34,
              'pp': 15,
              'priority': 0,
              'secondary': {'chance': 30, 'status': 'par'},
              'shortDesc': '30% chance to paralyze the target.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 160},
 'boltstrike': {'accuracy': 85,
                'basePower': 130,
                'category': 'Physical',
                'contestType': 'Beautiful',
                'desc': 'Has a 20% chance to paralyze the target.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'boltstrike',
                'isViable': True,
                'name': 'Bolt Strike',
                'num': 550,
                'pp': 5,
                'priority': 0,
                'secondary': {'chance': 20, 'status': 'par'},
                'shortDesc': '20% chance to paralyze the target.',
                'target': 'normal',
                'type': 'Electric',
                'zMovePower': 195},
 'boneclub': {'accuracy': 85,
              'basePower': 65,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Has a 10% chance to flinch the target.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'boneclub',
              'name': 'Bone Club',
              'num': 125,
              'pp': 20,
              'priority': 0,
              'secondary': {'chance': 10, 'volatileStatus': 'flinch'},
              'shortDesc': '10% chance to flinch the target.',
              'target': 'normal',
              'type': 'Ground',
              'zMovePower': 120},
 'bonemerang': {'accuracy': 90,
                'basePower': 50,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': "Hits twice. If the first hit breaks the target's "
                        'substitute, it will take damage for the second hit.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'bonemerang',
                'isViable': True,
                'multihit': 2,
                'name': 'Bonemerang',
                'num': 155,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2 times in one turn.',
                'target': 'normal',
                'type': 'Ground',
                'zMovePower': 100},
 'bonerush': {'accuracy': 90,
              'basePower': 25,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Hits two to five times. Has a 1/3 chance to hit two or '
                      'three times, and a 1/6 chance to hit four or five '
                      "times. If one of the hits breaks the target's "
                      'substitute, it will take damage for the remaining hits. '
                      'If the user has the Skill Link Ability, this move will '
                      'always hit five times.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'bonerush',
              'multihit': {'0': 2, '1': 5},
              'name': 'Bone Rush',
              'num': 198,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Hits 2-5 times in one turn.',
              'target': 'normal',
              'type': 'Ground',
              'zMovePower': 140},
 'boomburst': {'accuracy': 100,
               'basePower': 140,
               'category': 'Special',
               'contestType': 'Tough',
               'desc': 'No additional effect.',
               'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
               'id': 'boomburst',
               'isViable': True,
               'name': 'Boomburst',
               'num': 586,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect. Hits adjacent Pokemon.',
               'target': 'allAdjacent',
               'type': 'Normal',
               'zMovePower': 200},
 'bounce': {'accuracy': 85,
            'basePower': 85,
            'category': 'Physical',
            'contestType': 'Cute',
            'desc': 'Has a 30% chance to paralyze the target. This attack '
                    'charges on the first turn and executes on the second. On '
                    'the first turn, the user avoids all attacks other than '
                    'Gust, Hurricane, Sky Uppercut, Smack Down, Thousand '
                    'Arrows, Thunder, and Twister, and Gust and Twister have '
                    'doubled power when used against it. If the user is '
                    'holding a Power Herb, the move completes in one turn.',
            'effect': {'duration': 2,
                       'onSourceBasePower': bounce.onSourceBasePower,
                       'onTryImmunity': bounce.onTryImmunity},
            'flags': {'charge': 1,
                      'contact': 1,
                      'distance': 1,
                      'gravity': 1,
                      'mirror': 1,
                      'protect': 1},
            'id': 'bounce',
            'name': 'Bounce',
            'num': 340,
            'onTryMove': bounce.onTryMove,
            'pp': 5,
            'priority': 0,
            'secondary': {'chance': 30, 'status': 'par'},
            'shortDesc': 'Bounces turn 1. Hits turn 2. 30% paralyze.',
            'target': 'any',
            'type': 'Flying',
            'zMovePower': 160},
 'bouncybubble': {'accuracy': 100,
                  'basePower': 90,
                  'category': 'Special',
                  'contestType': 'Clever',
                  'desc': 'The user recovers 1/2 the HP lost by the target, '
                          'rounded half up. If Big Root is held by the user, '
                          'the HP recovered is 1.3x normal, rounded half down.',
                  'drain': {'0': 1, '1': 2},
                  'flags': {'heal': 1, 'protect': 1},
                  'id': 'bouncybubble',
                  'isNonstandard': True,
                  'isUnreleased': True,
                  'isViable': True,
                  'name': 'Bouncy Bubble',
                  'num': 733,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'User recovers 50% of the damage dealt.',
                  'target': 'normal',
                  'type': 'Water'},
 'bravebird': {'accuracy': 100,
               'basePower': 120,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': 'If the target lost HP, the user takes recoil damage '
                       'equal to 33% the HP lost by the target, rounded half '
                       'up, but not less than 1 HP.',
               'flags': {'contact': 1,
                         'distance': 1,
                         'mirror': 1,
                         'protect': 1},
               'id': 'bravebird',
               'isViable': True,
               'name': 'Brave Bird',
               'num': 413,
               'pp': 15,
               'priority': 0,
               'recoil': {'0': 33, '1': 100},
               'secondary': {},
               'shortDesc': 'Has 33% recoil.',
               'target': 'any',
               'type': 'Flying',
               'zMovePower': 190},
 'breakneckblitz': {'accuracy': True,
                    'basePower': 1,
                    'category': 'Physical',
                    'contestType': 'Cool',
                    'flags': {},
                    'id': 'breakneckblitz',
                    'isViable': True,
                    'isZ': 'normaliumz',
                    'name': 'Breakneck Blitz',
                    'num': 622,
                    'pp': 1,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': "Power is equal to the base move's Z-Power.",
                    'target': 'normal',
                    'type': 'Normal'},
 'brickbreak': {'accuracy': 100,
                'basePower': 75,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'If this attack does not miss, the effects of Reflect, '
                        "Light Screen, and Aurora Veil end for the target's "
                        'side of the field before damage is calculated.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'brickbreak',
                'isViable': True,
                'name': 'Brick Break',
                'num': 280,
                'onTryHit': brickbreak.onTryHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Destroys screens, unless the target is immune.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 140},
 'brine': {'accuracy': 100,
           'basePower': 65,
           'category': 'Special',
           'contestType': 'Tough',
           'desc': 'Power doubles if the target has less than or equal to half '
                   'of its maximum HP remaining.',
           'flags': {'mirror': 1, 'protect': 1},
           'id': 'brine',
           'name': 'Brine',
           'num': 362,
           'onBasePower': brine.onBasePower,
           'onBasePowerPriority': 4,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Power doubles if the target's HP is 50% or less.",
           'target': 'normal',
           'type': 'Water',
           'zMovePower': 120},
 'brutalswing': {'accuracy': 100,
                 'basePower': 60,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': 'No additional effect.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'brutalswing',
                 'name': 'Brutal Swing',
                 'num': 693,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'No additional effect. Hits adjacent Pokemon.',
                 'target': 'allAdjacent',
                 'type': 'Dark',
                 'zMovePower': 120},
 'bubble': {'accuracy': 100,
            'basePower': 40,
            'category': 'Special',
            'contestType': 'Cute',
            'desc': "Has a 10% chance to lower the target's Speed by 1 stage.",
            'flags': {'mirror': 1, 'protect': 1},
            'id': 'bubble',
            'name': 'Bubble',
            'num': 145,
            'pp': 30,
            'priority': 0,
            'secondary': {'boosts': {'spe': -1}, 'chance': 10},
            'shortDesc': '10% chance to lower the foe(s) Speed by 1.',
            'target': 'allAdjacentFoes',
            'type': 'Water',
            'zMovePower': 100},
 'bubblebeam': {'accuracy': 100,
                'basePower': 65,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 10% chance to lower the target's Speed by 1 "
                        'stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'bubblebeam',
                'name': 'Bubble Beam',
                'num': 61,
                'pp': 20,
                'priority': 0,
                'secondary': {'boosts': {'spe': -1}, 'chance': 10},
                'shortDesc': "10% chance to lower the target's Speed by 1.",
                'target': 'normal',
                'type': 'Water',
                'zMovePower': 120},
 'bugbite': {'accuracy': 100,
             'basePower': 60,
             'category': 'Physical',
             'contestType': 'Cute',
             'desc': 'If this move is successful and the user has not fainted, '
                     "it steals the target's held Berry if it is holding one "
                     'and eats it immediately, gaining its effects even if the '
                     "user's item is being ignored. Items lost to this move "
                     'cannot be regained with Recycle or the Harvest Ability.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'bugbite',
             'name': 'Bug Bite',
             'num': 450,
             'onHit': bugbite.onHit,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': "User steals and eats the target's Berry.",
             'target': 'normal',
             'type': 'Bug',
             'zMovePower': 120},
 'bugbuzz': {'accuracy': 100,
             'basePower': 90,
             'category': 'Special',
             'contestType': 'Beautiful',
             'desc': "Has a 10% chance to lower the target's Special Defense "
                     'by 1 stage.',
             'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
             'id': 'bugbuzz',
             'isViable': True,
             'name': 'Bug Buzz',
             'num': 405,
             'pp': 10,
             'priority': 0,
             'secondary': {'boosts': {'spd': -1}, 'chance': 10},
             'shortDesc': "10% chance to lower the target's Sp. Def by 1.",
             'target': 'normal',
             'type': 'Bug',
             'zMovePower': 175},
 'bulkup': {'accuracy': True,
            'basePower': 0,
            'boosts': {'atk': 1, 'def': 1},
            'category': 'Status',
            'contestType': 'Cool',
            'desc': "Raises the user's Attack and Defense by 1 stage.",
            'flags': {'snatch': 1},
            'id': 'bulkup',
            'isViable': True,
            'name': 'Bulk Up',
            'num': 339,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': "Raises the user's Attack and Defense by 1.",
            'target': 'self',
            'type': 'Fighting',
            'zMoveBoost': {'atk': 1}},
 'bulldoze': {'accuracy': 100,
              'basePower': 60,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': "Has a 100% chance to lower the target's Speed by 1 "
                      'stage.',
              'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
              'id': 'bulldoze',
              'name': 'Bulldoze',
              'num': 523,
              'pp': 20,
              'priority': 0,
              'secondary': {'boosts': {'spe': -1}, 'chance': 100},
              'shortDesc': '100% chance lower adjacent Pkmn Speed by 1.',
              'target': 'allAdjacent',
              'type': 'Ground',
              'zMovePower': 120},
 'bulletpunch': {'accuracy': 100,
                 'basePower': 40,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': 'No additional effect.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                 'id': 'bulletpunch',
                 'isViable': True,
                 'name': 'Bullet Punch',
                 'num': 418,
                 'pp': 30,
                 'priority': 1,
                 'secondary': {},
                 'shortDesc': 'Usually goes first.',
                 'target': 'normal',
                 'type': 'Steel',
                 'zMovePower': 100},
 'bulletseed': {'accuracy': 100,
                'basePower': 25,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                        'or three times, and a 1/6 chance to hit four or five '
                        "times. If one of the hits breaks the target's "
                        'substitute, it will take damage for the remaining '
                        'hits. If the user has the Skill Link Ability, this '
                        'move will always hit five times.',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'bulletseed',
                'isViable': True,
                'multihit': {'0': 2, '1': 5},
                'name': 'Bullet Seed',
                'num': 331,
                'pp': 30,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2-5 times in one turn.',
                'target': 'normal',
                'type': 'Grass',
                'zMovePower': 140},
 'burnup': {'accuracy': 100,
            'basePower': 130,
            'category': 'Special',
            'contestType': 'Clever',
            'desc': 'Fails unless the user is a Fire type. If this move is '
                    "successful, the user's Fire type becomes typeless as long "
                    'as it remains active.',
            'flags': {'defrost': 1, 'mirror': 1, 'protect': 1},
            'id': 'burnup',
            'name': 'Burn Up',
            'num': 682,
            'onTryMove': burnup.onTryMove,
            'pp': 5,
            'priority': 0,
            'secondary': {},
            'self': {'onHit': burnup.onHit},
            'shortDesc': "User's Fire type becomes typeless; must be Fire.",
            'target': 'normal',
            'type': 'Fire',
            'zMovePower': 195},
 'buzzybuzz': {'accuracy': 100,
               'basePower': 90,
               'category': 'Special',
               'contestType': 'Clever',
               'desc': 'Has a 100% chance to paralyze the foe.',
               'flags': {'protect': 1},
               'id': 'buzzybuzz',
               'isNonstandard': True,
               'isUnreleased': True,
               'isViable': True,
               'name': 'Buzzy Buzz',
               'num': 734,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 100, 'status': 'par'},
               'shortDesc': '100% chance to paralyze the foe.',
               'target': 'normal',
               'type': 'Electric'},
 'calmmind': {'accuracy': True,
              'basePower': 0,
              'boosts': {'spa': 1, 'spd': 1},
              'category': 'Status',
              'contestType': 'Clever',
              'desc': "Raises the user's Special Attack and Special Defense by "
                      '1 stage.',
              'flags': {'snatch': 1},
              'id': 'calmmind',
              'isViable': True,
              'name': 'Calm Mind',
              'num': 347,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Raises the user's Sp. Atk and Sp. Def by 1.",
              'target': 'self',
              'type': 'Psychic',
              'zMoveEffect': 'clearnegativeboost'},
 'camouflage': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': "The user's type changes based on the battle terrain. "
                        'Normal type on the regular Wi-Fi terrain, Electric '
                        'type during Electric Terrain, Fairy type during Misty '
                        'Terrain, Grass type during Grassy Terrain, and '
                        'Psychic type during Psychic Terrain. Fails if the '
                        "user's type cannot be changed or if the user is "
                        'already purely that type.',
                'flags': {'snatch': 1},
                'id': 'camouflage',
                'name': 'Camouflage',
                'num': 293,
                'onHit': camouflage.onHit,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Changes user's type by terrain (default Normal).",
                'target': 'self',
                'type': 'Normal',
                'zMoveBoost': {'evasion': 1}},
 'captivate': {'accuracy': 100,
               'basePower': 0,
               'boosts': {'spa': -2},
               'category': 'Status',
               'contestType': 'Cute',
               'desc': "Lowers the target's Special Attack by 2 stages. The "
                       'target is unaffected if both the user and the target '
                       'are the same gender, or if either is genderless. '
                       'Pokemon with the Oblivious Ability are immune.',
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'captivate',
               'name': 'Captivate',
               'num': 445,
               'onTryHit': captivate.onTryHit,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Lowers the foe(s) Sp. Atk by 2 if opposite '
                            'gender.',
               'target': 'allAdjacentFoes',
               'type': 'Normal',
               'zMoveBoost': {'spd': 2}},
 'catastropika': {'accuracy': True,
                  'basePower': 210,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'flags': {'contact': 1},
                  'id': 'catastropika',
                  'isZ': 'pikaniumz',
                  'name': 'Catastropika',
                  'num': 658,
                  'pp': 1,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'No additional effect.',
                  'target': 'normal',
                  'type': 'Electric'},
 'celebrate': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'flags': {},
               'id': 'celebrate',
               'name': 'Celebrate',
               'num': 606,
               'onTryHit': celebrate.onTryHit,
               'pp': 40,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No competitive use.',
               'target': 'self',
               'type': 'Normal',
               'zMoveBoost': {'atk': 1,
                              'def': 1,
                              'spa': 1,
                              'spd': 1,
                              'spe': 1}},
 'charge': {'accuracy': True,
            'basePower': 0,
            'boosts': {'spd': 1},
            'category': 'Status',
            'contestType': 'Clever',
            'desc': "Raises the user's Special Defense by 1 stage. If the user "
                    'uses an Electric-type attack on the next turn, its power '
                    'will be doubled.',
            'effect': {'duration': 2,
                       'onBasePower': charge.onBasePower,
                       'onBasePowerPriority': 3,
                       'onRestart': charge.onRestart},
            'flags': {'snatch': 1},
            'id': 'charge',
            'name': 'Charge',
            'num': 268,
            'onHit': charge.onHit,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': "+1 SpD, user's Electric move next turn 2x power.",
            'target': 'self',
            'type': 'Electric',
            'volatileStatus': 'charge',
            'zMoveBoost': {'spd': 1}},
 'chargebeam': {'accuracy': 90,
                'basePower': 50,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 70% chance to raise the user's Special Attack "
                        'by 1 stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'chargebeam',
                'name': 'Charge Beam',
                'num': 451,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 70, 'self': {'boosts': {'spa': 1}}},
                'shortDesc': "70% chance to raise the user's Sp. Atk by 1.",
                'target': 'normal',
                'type': 'Electric',
                'zMovePower': 100},
 'charm': {'accuracy': 100,
           'basePower': 0,
           'boosts': {'atk': -2},
           'category': 'Status',
           'contestType': 'Cute',
           'desc': "Lowers the target's Attack by 2 stages.",
           'flags': {'mirror': 1, 'mystery': 1, 'protect': 1, 'reflectable': 1},
           'id': 'charm',
           'name': 'Charm',
           'num': 204,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Lowers the target's Attack by 2.",
           'target': 'normal',
           'type': 'Fairy',
           'zMoveBoost': {'def': 1}},
 'chatter': {'accuracy': 100,
             'basePower': 65,
             'category': 'Special',
             'contestType': 'Cute',
             'desc': 'Has a 100% chance to confuse the target.',
             'flags': {'authentic': 1,
                       'distance': 1,
                       'mirror': 1,
                       'protect': 1,
                       'sound': 1},
             'id': 'chatter',
             'isViable': True,
             'name': 'Chatter',
             'noSketch': True,
             'num': 448,
             'pp': 20,
             'priority': 0,
             'secondary': {'chance': 100, 'volatileStatus': 'confusion'},
             'shortDesc': '100% chance to confuse the target.',
             'target': 'any',
             'type': 'Flying',
             'zMovePower': 120},
 'chipaway': {'accuracy': 100,
              'basePower': 70,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': "Ignores the target's stat stage changes, including "
                      'evasiveness.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'chipaway',
              'ignoreDefensive': True,
              'ignoreEvasion': True,
              'name': 'Chip Away',
              'num': 498,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Ignores the target's stat stage changes.",
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 140},
 'circlethrow': {'accuracy': 90,
                 'basePower': 60,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'If both the user and the target have not fainted, '
                         'the target is forced to switch out and be replaced '
                         'with a random unfainted ally. This effect fails if '
                         'the target is under the effect of Ingrain, has the '
                         'Suction Cups Ability, or this move hit a substitute.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'forceSwitch': True,
                 'id': 'circlethrow',
                 'isViable': True,
                 'name': 'Circle Throw',
                 'num': 509,
                 'pp': 10,
                 'priority': -6,
                 'shortDesc': 'Forces the target to switch to a random ally.',
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 120},
 'clamp': {'accuracy': 85,
           'basePower': 35,
           'category': 'Physical',
           'contestType': 'Tough',
           'desc': 'Prevents the target from switching for four or five turns '
                   '(seven turns if the user is holding Grip Claw). Causes '
                   'damage to the target equal to 1/8 of its maximum HP (1/6 '
                   'if the user is holding Binding Band), rounded down, at the '
                   'end of each turn during effect. The target can still '
                   'switch out if it is holding Shed Shell or uses Baton Pass, '
                   'Parting Shot, U-turn, or Volt Switch. The effect ends if '
                   'either the user or the target leaves the field, or if the '
                   'target uses Rapid Spin or Substitute successfully. This '
                   'effect is not stackable or reset by using this or another '
                   'binding move.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'clamp',
           'name': 'Clamp',
           'num': 128,
           'pp': 15,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Traps and damages the target for 4-5 turns.',
           'target': 'normal',
           'type': 'Water',
           'volatileStatus': 'partiallytrapped',
           'zMovePower': 100},
 'clangingscales': {'accuracy': 100,
                    'basePower': 110,
                    'category': 'Special',
                    'contestType': 'Tough',
                    'desc': "Lowers the user's Defense by 1 stage.",
                    'flags': {'authentic': 1,
                              'mirror': 1,
                              'protect': 1,
                              'sound': 1},
                    'id': 'clangingscales',
                    'isViable': True,
                    'name': 'Clanging Scales',
                    'num': 691,
                    'pp': 5,
                    'priority': 0,
                    'secondary': {},
                    'selfBoost': {'boosts': {'def': -1}},
                    'shortDesc': "Lowers the user's Defense by 1.",
                    'target': 'allAdjacentFoes',
                    'type': 'Dragon',
                    'zMovePower': 185},
 'clangoroussoulblaze': {'accuracy': True,
                         'basePower': 185,
                         'category': 'Special',
                         'contestType': 'Cool',
                         'desc': "Raises the user's Attack, Defense, Special "
                                 'Attack, Special Defense, and Speed by 1 '
                                 'stage.',
                         'flags': {'authentic': 1, 'sound': 1},
                         'id': 'clangoroussoulblaze',
                         'isZ': 'kommoniumz',
                         'name': 'Clangorous Soulblaze',
                         'num': 728,
                         'pp': 1,
                         'priority': 0,
                         'secondary': {},
                         'selfBoost': {'boosts': {'atk': 1,
                                                  'def': 1,
                                                  'spa': 1,
                                                  'spd': 1,
                                                  'spe': 1}},
                         'shortDesc': "Raises the user's "
                                      'Atk/Def/SpAtk/SpDef/Spe by 1.',
                         'target': 'allAdjacentFoes',
                         'type': 'Dragon'},
 'clearsmog': {'accuracy': True,
               'basePower': 50,
               'category': 'Special',
               'contestType': 'Beautiful',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'clearsmog',
               'isViable': True,
               'name': 'Clear Smog',
               'num': 499,
               'onHit': clearsmog.onHit,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Resets all of the target's stat stages to 0.",
               'target': 'normal',
               'type': 'Poison',
               'zMovePower': 100},
 'closecombat': {'accuracy': 100,
                 'basePower': 120,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': "Lowers the user's Defense and Special Defense by 1 "
                         'stage.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'closecombat',
                 'isViable': True,
                 'name': 'Close Combat',
                 'num': 370,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'boosts': {'def': -1, 'spd': -1}},
                 'shortDesc': "Lowers the user's Defense and Sp. Def by 1.",
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 190},
 'coil': {'accuracy': True,
          'basePower': 0,
          'boosts': {'accuracy': 1, 'atk': 1, 'def': 1},
          'category': 'Status',
          'contestType': 'Tough',
          'desc': "Raises the user's Attack, Defense, and accuracy by 1 stage.",
          'flags': {'snatch': 1},
          'id': 'coil',
          'isViable': True,
          'name': 'Coil',
          'num': 489,
          'pp': 20,
          'priority': 0,
          'secondary': {},
          'shortDesc': "Raises user's Attack, Defense, accuracy by 1.",
          'target': 'self',
          'type': 'Poison',
          'zMoveEffect': 'clearnegativeboost'},
 'cometpunch': {'accuracy': 85,
                'basePower': 18,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                        'or three times, and a 1/6 chance to hit four or five '
                        "times. If one of the hits breaks the target's "
                        'substitute, it will take damage for the remaining '
                        'hits. If the user has the Skill Link Ability, this '
                        'move will always hit five times.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                'id': 'cometpunch',
                'multihit': {'0': 2, '1': 5},
                'name': 'Comet Punch',
                'num': 4,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2-5 times in one turn.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 100},
 'confide': {'accuracy': True,
             'basePower': 0,
             'boosts': {'spa': -1},
             'category': 'Status',
             'contestType': 'Cute',
             'desc': "Lowers the target's Special Attack by 1 stage.",
             'flags': {'authentic': 1,
                       'mirror': 1,
                       'reflectable': 1,
                       'sound': 1},
             'id': 'confide',
             'name': 'Confide',
             'num': 590,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Lowers the target's Sp. Atk by 1.",
             'target': 'normal',
             'type': 'Normal',
             'zMoveBoost': {'spd': 1}},
 'confuseray': {'accuracy': 100,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'Causes the target to become confused.',
                'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                'id': 'confuseray',
                'name': 'Confuse Ray',
                'num': 109,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Confuses the target.',
                'target': 'normal',
                'type': 'Ghost',
                'volatileStatus': 'confusion',
                'zMoveBoost': {'spa': 1}},
 'confusion': {'accuracy': 100,
               'basePower': 50,
               'category': 'Special',
               'contestType': 'Clever',
               'desc': 'Has a 10% chance to confuse the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'confusion',
               'name': 'Confusion',
               'num': 93,
               'pp': 25,
               'priority': 0,
               'secondary': {'chance': 10, 'volatileStatus': 'confusion'},
               'shortDesc': '10% chance to confuse the target.',
               'target': 'normal',
               'type': 'Psychic',
               'zMovePower': 100},
 'constrict': {'accuracy': 100,
               'basePower': 10,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "Has a 10% chance to lower the target's Speed by 1 "
                       'stage.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'constrict',
               'name': 'Constrict',
               'num': 132,
               'pp': 35,
               'priority': 0,
               'secondary': {'boosts': {'spe': -1}, 'chance': 10},
               'shortDesc': "10% chance to lower the target's Speed by 1.",
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 100},
 'continentalcrush': {'accuracy': True,
                      'basePower': 1,
                      'category': 'Physical',
                      'contestType': 'Cool',
                      'flags': {},
                      'id': 'continentalcrush',
                      'isViable': True,
                      'isZ': 'rockiumz',
                      'name': 'Continental Crush',
                      'num': 632,
                      'pp': 1,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': "Power is equal to the base move's Z-Power.",
                      'target': 'normal',
                      'type': 'Rock'},
 'conversion': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Beautiful',
                'desc': "The user's type changes to match the original type of "
                        'the move in its first move slot. Fails if the user '
                        'cannot change its type, or if the type is one of the '
                        "user's current types.",
                'flags': {'snatch': 1},
                'id': 'conversion',
                'name': 'Conversion',
                'num': 160,
                'onHit': conversion.onHit,
                'pp': 30,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Changes user's type to match its first move.",
                'target': 'self',
                'type': 'Normal',
                'zMoveBoost': {'atk': 1,
                               'def': 1,
                               'spa': 1,
                               'spd': 1,
                               'spe': 1}},
 'conversion2': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': "The user's type changes to match a type that resists "
                         'or is immune to the type of the last move used by '
                         'the target, but not either of its current types. The '
                         'determined type of the move is used rather than the '
                         'original type. Fails if the target has not made a '
                         'move, if the user cannot change its type, or if this '
                         "move would only be able to select one of the user's "
                         'current types.',
                 'flags': {'authentic': 1},
                 'id': 'conversion2',
                 'name': 'Conversion 2',
                 'num': 176,
                 'onHit': conversion2.onHit,
                 'pp': 30,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Changes user's type to resist target's last "
                              'move.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMoveEffect': 'heal'},
 'copycat': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Cute',
             'desc': 'The user uses the last move used by any Pokemon, '
                     'including itself. Fails if no move has been used, or if '
                     'the last move used was Assist, Baneful Bunker, Beak '
                     'Blast, Belch, Bestow, Chatter, Circle Throw, Copycat, '
                     'Counter, Covet, Destiny Bond, Detect, Dragon Tail, '
                     'Endure, Feint, Focus Punch, Follow Me, Helping Hand, '
                     "Hold Hands, King's Shield, Mat Block, Me First, "
                     'Metronome, Mimic, Mirror Coat, Mirror Move, Nature '
                     'Power, Protect, Rage Powder, Roar, Shell Trap, Sketch, '
                     'Sleep Talk, Snatch, Spiky Shield, Spotlight, Struggle, '
                     'Switcheroo, Thief, Transform, Trick, Whirlwind, or any '
                     'Z-Move.',
             'flags': {},
             'id': 'copycat',
             'name': 'Copycat',
             'num': 383,
             'onHit': copycat.onHit,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Uses the last move used in the battle.',
             'target': 'self',
             'type': 'Normal',
             'zMoveBoost': {'accuracy': 1}},
 'coreenforcer': {'accuracy': 100,
                  'basePower': 100,
                  'category': 'Special',
                  'contestType': 'Tough',
                  'desc': "If the user moves after the target, the target's "
                          'Ability is rendered ineffective as long as it '
                          'remains active. If the target uses Baton Pass, the '
                          'replacement will remain under this effect. If the '
                          "target's Ability is Battle Bond, Comatose, "
                          'Disguise, Multitype, Power Construct, RKS System, '
                          'Schooling, Shields Down, or Stance Change, this '
                          'effect does not happen, and receiving the effect '
                          'through Baton Pass ends the effect immediately.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'coreenforcer',
                  'isViable': True,
                  'name': 'Core Enforcer',
                  'num': 687,
                  'onAfterSubDamage': coreenforcer.onAfterSubDamage,
                  'onHit': coreenforcer.onHit,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Nullifies the foe(s) Ability if the foe(s) '
                               'move first.',
                  'target': 'allAdjacentFoes',
                  'type': 'Dragon',
                  'zMovePower': 140},
 'corkscrewcrash': {'accuracy': True,
                    'basePower': 1,
                    'category': 'Physical',
                    'contestType': 'Cool',
                    'flags': {},
                    'id': 'corkscrewcrash',
                    'isViable': True,
                    'isZ': 'steeliumz',
                    'name': 'Corkscrew Crash',
                    'num': 638,
                    'pp': 1,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': "Power is equal to the base move's Z-Power.",
                    'target': 'normal',
                    'type': 'Steel'},
 'cosmicpower': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'def': 1, 'spd': 1},
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': "Raises the user's Defense and Special Defense by 1 "
                         'stage.',
                 'flags': {'snatch': 1},
                 'id': 'cosmicpower',
                 'name': 'Cosmic Power',
                 'num': 322,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Defense and Sp. Def by 1.",
                 'target': 'self',
                 'type': 'Psychic',
                 'zMoveBoost': {'spd': 1}},
 'cottonguard': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'def': 3},
                 'category': 'Status',
                 'contestType': 'Cute',
                 'desc': "Raises the user's Defense by 3 stages.",
                 'flags': {'snatch': 1},
                 'id': 'cottonguard',
                 'isViable': True,
                 'name': 'Cotton Guard',
                 'num': 538,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Defense by 3.",
                 'target': 'self',
                 'type': 'Grass',
                 'zMoveEffect': 'clearnegativeboost'},
 'cottonspore': {'accuracy': 100,
                 'basePower': 0,
                 'boosts': {'spe': -2},
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': "Lowers the target's Speed by 2 stages.",
                 'flags': {'mirror': 1,
                           'powder': 1,
                           'protect': 1,
                           'reflectable': 1},
                 'id': 'cottonspore',
                 'name': 'Cotton Spore',
                 'num': 178,
                 'pp': 40,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Lowers the target's Speed by 2.",
                 'target': 'allAdjacentFoes',
                 'type': 'Grass',
                 'zMoveEffect': 'clearnegativeboost'},
 'counter': {'accuracy': 100,
             'basePower': 0,
             'beforeTurnCallback': counter.beforeTurnCallback,
             'category': 'Physical',
             'contestType': 'Tough',
             'damageCallback': counter.damageCallback,
             'desc': 'Deals damage to the last opposing Pokemon to hit the '
                     'user with a physical attack this turn equal to twice the '
                     'HP lost by the user from that attack. If the user did '
                     'not lose HP from the attack, this move deals 1 HP of '
                     "damage instead. If that opposing Pokemon's position is "
                     'no longer in use and there is another opposing Pokemon '
                     'on the field, the damage is done to it instead. Only the '
                     'last hit of a multi-hit attack is counted. Fails if the '
                     "user was not hit by an opposing Pokemon's physical "
                     'attack this turn.',
             'effect': {'duration': 1,
                        'noCopy': True,
                        'onAfterDamage': counter.onAfterDamage,
                        'onRedirectTarget': counter.onRedirectTarget,
                        'onRedirectTargetPriority': -1,
                        'onStart': counter.onStart},
             'flags': {'contact': 1, 'protect': 1},
             'id': 'counter',
             'name': 'Counter',
             'num': 68,
             'onTryHit': counter.onTryHit,
             'pp': 20,
             'priority': -5,
             'secondary': {},
             'shortDesc': 'If hit by physical attack, returns double damage.',
             'target': 'scripted',
             'type': 'Fighting',
             'zMovePower': 100},
 'covet': {'accuracy': 100,
           'basePower': 60,
           'category': 'Physical',
           'contestType': 'Cute',
           'desc': 'If this attack was successful and the user has not '
                   "fainted, it steals the target's held item if the user is "
                   "not holding one. The target's item is not stolen if it is "
                   'a Mail or Z-Crystal, or if the target is a Kyogre holding '
                   'a Blue Orb, a Groudon holding a Red Orb, a Giratina '
                   'holding a Griseous Orb, an Arceus holding a Plate, a '
                   'Genesect holding a Drive, a Silvally holding a Memory, or '
                   'a Pokemon that can Mega Evolve holding the Mega Stone for '
                   'its species. Items lost to this move cannot be regained '
                   'with Recycle or the Harvest Ability.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'covet',
           'name': 'Covet',
           'num': 343,
           'onAfterHit': covet.onAfterHit,
           'pp': 25,
           'priority': 0,
           'secondary': {},
           'shortDesc': "If the user has no item, it steals the target's.",
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 120},
 'crabhammer': {'accuracy': 90,
                'basePower': 100,
                'category': 'Physical',
                'contestType': 'Tough',
                'critRatio': 2,
                'desc': 'Has a higher chance for a critical hit.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'crabhammer',
                'isViable': True,
                'name': 'Crabhammer',
                'num': 152,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'High critical hit ratio.',
                'target': 'normal',
                'type': 'Water',
                'zMovePower': 180},
 'craftyshield': {'accuracy': True,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Clever',
                  'desc': 'The user and its party members are protected from '
                          'non-damaging attacks made by other Pokemon, '
                          'including allies, during this turn. Fails if the '
                          'user moves last this turn or if this move is '
                          "already in effect for the user's side.",
                  'effect': {'duration': 1,
                             'onStart': craftyshield.onStart,
                             'onTryHit': craftyshield.onTryHit,
                             'onTryHitPriority': 3},
                  'flags': {},
                  'id': 'craftyshield',
                  'name': 'Crafty Shield',
                  'num': 578,
                  'onTryHitSide': craftyshield.onTryHitSide,
                  'pp': 10,
                  'priority': 3,
                  'secondary': {},
                  'shortDesc': 'Protects allies from Status moves this turn.',
                  'sideCondition': 'craftyshield',
                  'target': 'allySide',
                  'type': 'Fairy',
                  'zMoveBoost': {'spd': 1}},
 'crosschop': {'accuracy': 80,
               'basePower': 100,
               'category': 'Physical',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'crosschop',
               'isViable': True,
               'name': 'Cross Chop',
               'num': 238,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio.',
               'target': 'normal',
               'type': 'Fighting',
               'zMovePower': 180},
 'crosspoison': {'accuracy': 100,
                 'basePower': 70,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'critRatio': 2,
                 'desc': 'Has a 10% chance to poison the target and a higher '
                         'chance for a critical hit.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'crosspoison',
                 'name': 'Cross Poison',
                 'num': 440,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {'chance': 10, 'status': 'psn'},
                 'shortDesc': 'High critical hit ratio. 10% chance to poison.',
                 'target': 'normal',
                 'type': 'Poison',
                 'zMovePower': 140},
 'crunch': {'accuracy': 100,
            'basePower': 80,
            'category': 'Physical',
            'contestType': 'Tough',
            'desc': "Has a 20% chance to lower the target's Defense by 1 "
                    'stage.',
            'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
            'id': 'crunch',
            'isViable': True,
            'name': 'Crunch',
            'num': 242,
            'pp': 15,
            'priority': 0,
            'secondary': {'boosts': {'def': -1}, 'chance': 20},
            'shortDesc': "20% chance to lower the target's Defense by 1.",
            'target': 'normal',
            'type': 'Dark',
            'zMovePower': 160},
 'crushclaw': {'accuracy': 95,
               'basePower': 75,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': "Has a 50% chance to lower the target's Defense by 1 "
                       'stage.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'crushclaw',
               'name': 'Crush Claw',
               'num': 306,
               'pp': 10,
               'priority': 0,
               'secondary': {'boosts': {'def': -1}, 'chance': 50},
               'shortDesc': "50% chance to lower the target's Defense by 1.",
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 140},
 'crushgrip': {'accuracy': 100,
               'basePower': 0,
               'basePowerCallback': crushgrip.basePowerCallback,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "Power is equal to 120 * (target's current HP / "
                       "target's maximum HP), rounded half down, but not less "
                       'than 1.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'crushgrip',
               'name': 'Crush Grip',
               'num': 462,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'More power the more HP the target has left.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 190},
 'curse': {'accuracy': True,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Tough',
           'desc': "If the user is not a Ghost type, lowers the user's Speed "
                   "by 1 stage and raises the user's Attack and Defense by 1 "
                   'stage. If the user is a Ghost type, the user loses 1/2 of '
                   'its maximum HP, rounded down and even if it would cause '
                   'fainting, in exchange for the target losing 1/4 of its '
                   'maximum HP, rounded down, at the end of each turn while it '
                   'is active. If the target uses Baton Pass, the replacement '
                   'will continue to be affected. Fails if there is no target '
                   'or if the target is already affected.',
           'effect': {'onResidual': curse.onResidual,
                      'onResidualOrder': 10,
                      'onStart': curse.onStart},
           'flags': {'authentic': 1},
           'id': 'curse',
           'name': 'Curse',
           'nonGhostTarget': 'self',
           'num': 174,
           'onHit': curse.onHit,
           'onModifyMove': curse.onModifyMove,
           'onTryHit': curse.onTryHit,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Curses if Ghost, else -1 Spe, +1 Atk, +1 Def.',
           'target': 'normal',
           'type': 'Ghost',
           'volatileStatus': 'curse',
           'zMoveEffect': 'curse'},
 'cut': {'accuracy': 95,
         'basePower': 50,
         'category': 'Physical',
         'contestType': 'Cool',
         'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
         'id': 'cut',
         'name': 'Cut',
         'num': 15,
         'pp': 30,
         'priority': 0,
         'secondary': {},
         'shortDesc': 'No additional effect.',
         'target': 'normal',
         'type': 'Normal',
         'zMovePower': 100},
 'darkestlariat': {'accuracy': 100,
                   'basePower': 85,
                   'category': 'Physical',
                   'contestType': 'Cool',
                   'desc': "Ignores the target's stat stage changes, including "
                           'evasiveness.',
                   'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                   'id': 'darkestlariat',
                   'ignoreDefensive': True,
                   'ignoreEvasion': True,
                   'isViable': True,
                   'name': 'Darkest Lariat',
                   'num': 663,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': "Ignores the target's stat stage changes.",
                   'target': 'normal',
                   'type': 'Dark',
                   'zMovePower': 160},
 'darkpulse': {'accuracy': 100,
               'basePower': 80,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': 'Has a 20% chance to flinch the target.',
               'flags': {'distance': 1, 'mirror': 1, 'protect': 1, 'pulse': 1},
               'id': 'darkpulse',
               'isViable': True,
               'name': 'Dark Pulse',
               'num': 399,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 20, 'volatileStatus': 'flinch'},
               'shortDesc': '20% chance to flinch the target.',
               'target': 'any',
               'type': 'Dark',
               'zMovePower': 160},
 'darkvoid': {'accuracy': 50,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Clever',
              'desc': 'Causes the target to fall asleep. This move cannot be '
                      "used successfully unless the user's current form, while "
                      'considering Transform, is Darkrai.',
              'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
              'id': 'darkvoid',
              'isViable': True,
              'name': 'Dark Void',
              'num': 464,
              'onTryMove': darkvoid.onTryMove,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Darkrai: Causes the foe(s) to fall asleep.',
              'status': 'slp',
              'target': 'allAdjacentFoes',
              'type': 'Dark',
              'zMoveEffect': 'clearnegativeboost'},
 'dazzlinggleam': {'accuracy': 100,
                   'basePower': 80,
                   'category': 'Special',
                   'contestType': 'Beautiful',
                   'desc': 'No additional effect.',
                   'flags': {'mirror': 1, 'protect': 1},
                   'id': 'dazzlinggleam',
                   'isViable': True,
                   'name': 'Dazzling Gleam',
                   'num': 605,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': 'No additional effect. Hits adjacent foes.',
                   'target': 'allAdjacentFoes',
                   'type': 'Fairy',
                   'zMovePower': 160},
 'defendorder': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'def': 1, 'spd': 1},
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "Raises the user's Defense and Special Defense by 1 "
                         'stage.',
                 'flags': {'snatch': 1},
                 'id': 'defendorder',
                 'isViable': True,
                 'name': 'Defend Order',
                 'num': 455,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Defense and Sp. Def by 1.",
                 'target': 'self',
                 'type': 'Bug',
                 'zMoveBoost': {'def': 1}},
 'defensecurl': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'def': 1},
                 'category': 'Status',
                 'contestType': 'Cute',
                 'desc': "Raises the user's Defense by 1 stage. As long as the "
                         "user remains active, the power of the user's Ice "
                         'Ball and Rollout will be doubled (this effect is not '
                         'stackable).',
                 'effect': {'noCopy': True},
                 'flags': {'snatch': 1},
                 'id': 'defensecurl',
                 'name': 'Defense Curl',
                 'num': 111,
                 'pp': 40,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Defense by 1.",
                 'target': 'self',
                 'type': 'Normal',
                 'volatileStatus': 'defensecurl',
                 'zMoveBoost': {'accuracy': 1}},
 'defog': {'accuracy': True,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Cool',
           'desc': "Lowers the target's evasiveness by 1 stage. If this move "
                   "is successful and whether or not the target's evasiveness "
                   'was affected, the effects of Reflect, Light Screen, Aurora '
                   'Veil, Safeguard, Mist, Spikes, Toxic Spikes, Stealth Rock, '
                   "and Sticky Web end for the target's side, and the effects "
                   'of Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end '
                   "for the user's side. Ignores a target's substitute, "
                   'although a substitute will still block the lowering of '
                   'evasiveness.',
           'flags': {'authentic': 1,
                     'mirror': 1,
                     'protect': 1,
                     'reflectable': 1},
           'id': 'defog',
           'isViable': True,
           'name': 'Defog',
           'num': 432,
           'onHit': defog.onHit,
           'pp': 15,
           'priority': 0,
           'secondary': {},
           'shortDesc': "-1 evasion; clears user and target side's hazards.",
           'target': 'normal',
           'type': 'Flying',
           'zMoveBoost': {'accuracy': 1}},
 'destinybond': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "Until the user's next move, if an opposing Pokemon's "
                         'attack knocks the user out, that Pokemon faints as '
                         'well, unless the attack was Doom Desire or Future '
                         'Sight. Fails if the user used this move successfully '
                         'as its last move, disregarding moves used through '
                         'the Dancer Ability.',
                 'effect': {'onBeforeMove': destinybond.onBeforeMove,
                            'onBeforeMovePriority': -1,
                            'onBeforeSwitchOut': destinybond.onBeforeSwitchOut,
                            'onBeforeSwitchOutPriority': 1,
                            'onFaint': destinybond.onFaint,
                            'onMoveAborted': destinybond.onMoveAborted,
                            'onStart': destinybond.onStart},
                 'flags': {'authentic': 1},
                 'id': 'destinybond',
                 'isViable': True,
                 'name': 'Destiny Bond',
                 'num': 194,
                 'onPrepareHit': destinybond.onPrepareHit,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'If an opponent knocks out the user, it also '
                              'faints.',
                 'target': 'self',
                 'type': 'Ghost',
                 'volatileStatus': 'destinybond',
                 'zMoveEffect': 'redirect'},
 'detect': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Cool',
            'desc': 'The user is protected from most attacks made by other '
                    'Pokemon during this turn. This move has a 1/X chance of '
                    'being successful, where X starts at 1 and triples each '
                    'time this move is successfully used. X resets to 1 if '
                    "this move fails, if the user's last move used is not "
                    "Baneful Bunker, Detect, Endure, King's Shield, Protect, "
                    'Quick Guard, Spiky Shield, or Wide Guard, or if it was '
                    "one of those moves and the user's protection was broken. "
                    'Fails if the user moves last this turn.',
            'flags': {},
            'id': 'detect',
            'isViable': True,
            'name': 'Detect',
            'num': 197,
            'onHit': detect.onHit,
            'onPrepareHit': detect.onPrepareHit,
            'pp': 5,
            'priority': 4,
            'secondary': {},
            'shortDesc': 'Prevents moves from affecting the user this turn.',
            'stallingMove': True,
            'target': 'self',
            'type': 'Fighting',
            'volatileStatus': 'protect',
            'zMoveBoost': {'evasion': 1}},
 'devastatingdrake': {'accuracy': True,
                      'basePower': 1,
                      'category': 'Physical',
                      'contestType': 'Cool',
                      'flags': {},
                      'id': 'devastatingdrake',
                      'isZ': 'dragoniumz',
                      'name': 'Devastating Drake',
                      'num': 652,
                      'pp': 1,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': "Power is equal to the base move's Z-Power.",
                      'target': 'normal',
                      'type': 'Dragon'},
 'diamondstorm': {'accuracy': 95,
                  'basePower': 100,
                  'category': 'Physical',
                  'contestType': 'Beautiful',
                  'desc': "Has a 50% chance to raise the user's Defense by 2 "
                          'stages.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'diamondstorm',
                  'isViable': True,
                  'name': 'Diamond Storm',
                  'num': 591,
                  'pp': 5,
                  'priority': 0,
                  'secondary': {'chance': 50, 'self': {'boosts': {'def': 2}}},
                  'shortDesc': "50% chance to raise user's Def by 2 for each "
                               'hit.',
                  'target': 'allAdjacentFoes',
                  'type': 'Rock',
                  'zMovePower': 180},
 'dig': {'accuracy': 100,
         'basePower': 80,
         'category': 'Physical',
         'contestType': 'Tough',
         'desc': 'This attack charges on the first turn and executes on the '
                 'second. On the first turn, the user avoids all attacks other '
                 'than Earthquake and Magnitude but takes double damage from '
                 'them, and is also unaffected by weather. If the user is '
                 'holding a Power Herb, the move completes in one turn.',
         'effect': {'duration': 2,
                    'onImmunity': dig.onImmunity,
                    'onSourceModifyDamage': dig.onSourceModifyDamage,
                    'onTryImmunity': dig.onTryImmunity},
         'flags': {'charge': 1,
                   'contact': 1,
                   'mirror': 1,
                   'nonsky': 1,
                   'protect': 1},
         'id': 'dig',
         'name': 'Dig',
         'num': 91,
         'onTryMove': dig.onTryMove,
         'pp': 10,
         'priority': 0,
         'secondary': {},
         'shortDesc': 'Digs underground turn 1, strikes turn 2.',
         'target': 'normal',
         'type': 'Ground',
         'zMovePower': 160},
 'disable': {'accuracy': 100,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': "For 4 turns, the target's last move used becomes "
                     "disabled. Fails if one of the target's moves is already "
                     'disabled, if the target has not made a move, or if the '
                     'target no longer knows the move.',
             'effect': {'duration': 4,
                        'noCopy': True,
                        'onBeforeMove': disable.onBeforeMove,
                        'onBeforeMovePriority': 7,
                        'onDisableMove': disable.onDisableMove,
                        'onEnd': disable.onEnd,
                        'onResidualOrder': 14,
                        'onStart': disable.onStart},
             'flags': {'authentic': 1,
                       'mirror': 1,
                       'protect': 1,
                       'reflectable': 1},
             'id': 'disable',
             'isViable': True,
             'name': 'Disable',
             'num': 50,
             'onTryHit': disable.onTryHit,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': "For 4 turns, disables the target's last move used.",
             'target': 'normal',
             'type': 'Normal',
             'volatileStatus': 'disable',
             'zMoveEffect': 'clearnegativeboost'},
 'disarmingvoice': {'accuracy': True,
                    'basePower': 40,
                    'category': 'Special',
                    'contestType': 'Cute',
                    'desc': 'This move does not check accuracy.',
                    'flags': {'authentic': 1,
                              'mirror': 1,
                              'protect': 1,
                              'sound': 1},
                    'id': 'disarmingvoice',
                    'name': 'Disarming Voice',
                    'num': 574,
                    'pp': 15,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': 'This move does not check accuracy. Hits '
                                 'foes.',
                    'target': 'allAdjacentFoes',
                    'type': 'Fairy',
                    'zMovePower': 100},
 'discharge': {'accuracy': 100,
               'basePower': 80,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Has a 30% chance to paralyze the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'discharge',
               'isViable': True,
               'name': 'Discharge',
               'num': 435,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 30, 'status': 'par'},
               'shortDesc': '30% chance to paralyze adjacent Pokemon.',
               'target': 'allAdjacent',
               'type': 'Electric',
               'zMovePower': 160},
 'dive': {'accuracy': 100,
          'basePower': 80,
          'category': 'Physical',
          'contestType': 'Beautiful',
          'desc': 'This attack charges on the first turn and executes on the '
                  'second. On the first turn, the user avoids all attacks '
                  'other than Surf and Whirlpool but takes double damage from '
                  'them, and is also unaffected by weather. If the user is '
                  'holding a Power Herb, the move completes in one turn.',
          'effect': {'duration': 2,
                     'onImmunity': dive.onImmunity,
                     'onSourceModifyDamage': dive.onSourceModifyDamage,
                     'onTryImmunity': dive.onTryImmunity},
          'flags': {'charge': 1,
                    'contact': 1,
                    'mirror': 1,
                    'nonsky': 1,
                    'protect': 1},
          'id': 'dive',
          'name': 'Dive',
          'num': 291,
          'onTryMove': dive.onTryMove,
          'pp': 10,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Dives underwater turn 1, strikes turn 2.',
          'target': 'normal',
          'type': 'Water',
          'zMovePower': 160},
 'dizzypunch': {'accuracy': 100,
                'basePower': 70,
                'category': 'Physical',
                'contestType': 'Cute',
                'desc': 'Has a 20% chance to confuse the target.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                'id': 'dizzypunch',
                'name': 'Dizzy Punch',
                'num': 146,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 20, 'volatileStatus': 'confusion'},
                'shortDesc': '20% chance to confuse the target.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 140},
 'doomdesire': {'accuracy': 100,
                'basePower': 140,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': 'Deals damage two turns after this move is used. At '
                        'the end of that turn, the damage is calculated at '
                        'that time and dealt to the Pokemon at the position '
                        'the target had when the move was used. If the user is '
                        'no longer active at the time, damage is calculated '
                        "based on the user's natural Special Attack stat, "
                        'types, and level, with no boosts from its held item '
                        'or Ability. Fails if this move or Future Sight is '
                        "already in effect for the target's position.",
                'flags': {},
                'id': 'doomdesire',
                'isFutureMove': True,
                'name': 'Doom Desire',
                'num': 353,
                'onTry': doomdesire.onTry,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits two turns after being used.',
                'target': 'normal',
                'type': 'Steel',
                'zMovePower': 200},
 'doubleedge': {'accuracy': 100,
                'basePower': 120,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'If the target lost HP, the user takes recoil damage '
                        'equal to 33% the HP lost by the target, rounded half '
                        'up, but not less than 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'doubleedge',
                'isViable': True,
                'name': 'Double-Edge',
                'num': 38,
                'pp': 15,
                'priority': 0,
                'recoil': {'0': 33, '1': 100},
                'secondary': {},
                'shortDesc': 'Has 33% recoil.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 190},
 'doublehit': {'accuracy': 90,
               'basePower': 35,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': "Hits twice. If the first hit breaks the target's "
                       'substitute, it will take damage for the second hit.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'doublehit',
               'multihit': 2,
               'name': 'Double Hit',
               'num': 458,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Hits 2 times in one turn.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 140},
 'doubleironbash': {'accuracy': 100,
                    'basePower': 60,
                    'category': 'Physical',
                    'contestType': 'Clever',
                    'desc': "Hits twice. If the first hit breaks the target's "
                            'substitute, it will take damage for the second '
                            'hit. Has a 30% chance to flinch the target.',
                    'flags': {'contact': 1,
                              'mirror': 1,
                              'protect': 1,
                              'punch': 1},
                    'id': 'doubleironbash',
                    'isNonstandard': True,
                    'isUnreleased': True,
                    'isViable': True,
                    'multihit': 2,
                    'name': 'Double Iron Bash',
                    'num': 742,
                    'pp': 5,
                    'priority': 0,
                    'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
                    'shortDesc': 'Hits twice. 30% chance to flinch.',
                    'target': 'normal',
                    'type': 'Steel',
                    'zMovePower': 180},
 'doublekick': {'accuracy': 100,
                'basePower': 30,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': "Hits twice. If the first hit breaks the target's "
                        'substitute, it will take damage for the second hit.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'doublekick',
                'multihit': 2,
                'name': 'Double Kick',
                'num': 24,
                'pp': 30,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2 times in one turn.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 100},
 'doubleslap': {'accuracy': 85,
                'basePower': 15,
                'category': 'Physical',
                'contestType': 'Cute',
                'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                        'or three times, and a 1/6 chance to hit four or five '
                        "times. If one of the hits breaks the target's "
                        'substitute, it will take damage for the remaining '
                        'hits. If the user has the Skill Link Ability, this '
                        'move will always hit five times.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'doubleslap',
                'multihit': {'0': 2, '1': 5},
                'name': 'Double Slap',
                'num': 3,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2-5 times in one turn.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 100},
 'doubleteam': {'accuracy': True,
                'basePower': 0,
                'boosts': {'evasion': 1},
                'category': 'Status',
                'contestType': 'Cool',
                'desc': "Raises the user's evasiveness by 1 stage.",
                'flags': {'snatch': 1},
                'id': 'doubleteam',
                'name': 'Double Team',
                'num': 104,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Raises the user's evasiveness by 1.",
                'target': 'self',
                'type': 'Normal',
                'zMoveEffect': 'clearnegativeboost'},
 'dracometeor': {'accuracy': 90,
                 'basePower': 130,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': "Lowers the user's Special Attack by 2 stages.",
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'dracometeor',
                 'isViable': True,
                 'name': 'Draco Meteor',
                 'num': 434,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'boosts': {'spa': -2}},
                 'shortDesc': "Lowers the user's Sp. Atk by 2.",
                 'target': 'normal',
                 'type': 'Dragon',
                 'zMovePower': 195},
 'dragonascent': {'accuracy': 100,
                  'basePower': 120,
                  'category': 'Physical',
                  'contestType': 'Beautiful',
                  'desc': "Lowers the user's Defense and Special Defense by 1 "
                          'stage.',
                  'flags': {'contact': 1,
                            'distance': 1,
                            'mirror': 1,
                            'protect': 1},
                  'id': 'dragonascent',
                  'isViable': True,
                  'name': 'Dragon Ascent',
                  'num': 620,
                  'pp': 5,
                  'priority': 0,
                  'self': {'boosts': {'def': -1, 'spd': -1}},
                  'shortDesc': "Lowers the user's Defense and Sp. Def by 1.",
                  'target': 'any',
                  'type': 'Flying',
                  'zMovePower': 190},
 'dragonbreath': {'accuracy': 100,
                  'basePower': 60,
                  'category': 'Special',
                  'contestType': 'Cool',
                  'desc': 'Has a 30% chance to paralyze the target.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'dragonbreath',
                  'name': 'Dragon Breath',
                  'num': 225,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {'chance': 30, 'status': 'par'},
                  'shortDesc': '30% chance to paralyze the target.',
                  'target': 'normal',
                  'type': 'Dragon',
                  'zMovePower': 120},
 'dragonclaw': {'accuracy': 100,
                'basePower': 80,
                'category': 'Physical',
                'contestType': 'Cool',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'dragonclaw',
                'isViable': True,
                'name': 'Dragon Claw',
                'num': 337,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'No additional effect.',
                'target': 'normal',
                'type': 'Dragon',
                'zMovePower': 160},
 'dragondance': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'atk': 1, 'spe': 1},
                 'category': 'Status',
                 'contestType': 'Cool',
                 'desc': "Raises the user's Attack and Speed by 1 stage.",
                 'flags': {'dance': 1, 'snatch': 1},
                 'id': 'dragondance',
                 'isViable': True,
                 'name': 'Dragon Dance',
                 'num': 349,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Attack and Speed by 1.",
                 'target': 'self',
                 'type': 'Dragon',
                 'zMoveEffect': 'clearnegativeboost'},
 'dragonhammer': {'accuracy': 100,
                  'basePower': 90,
                  'category': 'Physical',
                  'contestType': 'Tough',
                  'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                  'id': 'dragonhammer',
                  'isViable': True,
                  'name': 'Dragon Hammer',
                  'num': 692,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'No additional effect.',
                  'target': 'normal',
                  'type': 'Dragon',
                  'zMovePower': 175},
 'dragonpulse': {'accuracy': 100,
                 'basePower': 85,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'flags': {'distance': 1,
                           'mirror': 1,
                           'protect': 1,
                           'pulse': 1},
                 'id': 'dragonpulse',
                 'isViable': True,
                 'name': 'Dragon Pulse',
                 'num': 406,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'No additional effect.',
                 'target': 'any',
                 'type': 'Dragon',
                 'zMovePower': 160},
 'dragonrage': {'accuracy': 100,
                'basePower': 0,
                'category': 'Special',
                'contestType': 'Cool',
                'damage': 40,
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'dragonrage',
                'name': 'Dragon Rage',
                'num': 82,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Deals 40 HP of damage to the target.',
                'target': 'normal',
                'type': 'Dragon',
                'zMovePower': 100},
 'dragonrush': {'accuracy': 75,
                'basePower': 100,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'Has a 20% chance to flinch the target. Damage doubles '
                        'and no accuracy check is done if the target has used '
                        'Minimize while active.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'dragonrush',
                'name': 'Dragon Rush',
                'num': 407,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 20, 'volatileStatus': 'flinch'},
                'shortDesc': '20% chance to flinch the target.',
                'target': 'normal',
                'type': 'Dragon',
                'zMovePower': 180},
 'dragontail': {'accuracy': 90,
                'basePower': 60,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'If both the user and the target have not fainted, the '
                        'target is forced to switch out and be replaced with a '
                        'random unfainted ally. This effect fails if the '
                        'target used Ingrain previously, has the Suction Cups '
                        'Ability, or this move hit a substitute.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'forceSwitch': True,
                'id': 'dragontail',
                'isViable': True,
                'name': 'Dragon Tail',
                'num': 525,
                'pp': 10,
                'priority': -6,
                'shortDesc': 'Forces the target to switch to a random ally.',
                'target': 'normal',
                'type': 'Dragon',
                'zMovePower': 120},
 'drainingkiss': {'accuracy': 100,
                  'basePower': 50,
                  'category': 'Special',
                  'contestType': 'Cute',
                  'desc': 'The user recovers 3/4 the HP lost by the target, '
                          'rounded half up. If Big Root is held by the user, '
                          'the HP recovered is 1.3x normal, rounded half down.',
                  'drain': {'0': 3, '1': 4},
                  'flags': {'contact': 1, 'heal': 1, 'mirror': 1, 'protect': 1},
                  'id': 'drainingkiss',
                  'name': 'Draining Kiss',
                  'num': 577,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'User recovers 75% of the damage dealt.',
                  'target': 'normal',
                  'type': 'Fairy',
                  'zMovePower': 100},
 'drainpunch': {'accuracy': 100,
                'basePower': 75,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'The user recovers 1/2 the HP lost by the target, '
                        'rounded half up. If Big Root is held by the user, the '
                        'HP recovered is 1.3x normal, rounded half down.',
                'drain': {'0': 1, '1': 2},
                'flags': {'contact': 1,
                          'heal': 1,
                          'mirror': 1,
                          'protect': 1,
                          'punch': 1},
                'id': 'drainpunch',
                'isViable': True,
                'name': 'Drain Punch',
                'num': 409,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'User recovers 50% of the damage dealt.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 140},
 'dreameater': {'accuracy': 100,
                'basePower': 100,
                'category': 'Special',
                'contestType': 'Clever',
                'desc': 'The target is unaffected by this move unless it is '
                        'asleep. The user recovers 1/2 the HP lost by the '
                        'target, rounded half up. If Big Root is held by the '
                        'user, the HP recovered is 1.3x normal, rounded half '
                        'down.',
                'drain': {'0': 1, '1': 2},
                'flags': {'heal': 1, 'mirror': 1, 'protect': 1},
                'id': 'dreameater',
                'name': 'Dream Eater',
                'num': 138,
                'onTryHit': dreameater.onTryHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'User gains 1/2 HP inflicted. Sleeping target '
                             'only.',
                'target': 'normal',
                'type': 'Psychic',
                'zMovePower': 180},
 'drillpeck': {'accuracy': 100,
               'basePower': 80,
               'category': 'Physical',
               'contestType': 'Cool',
               'flags': {'contact': 1,
                         'distance': 1,
                         'mirror': 1,
                         'protect': 1},
               'id': 'drillpeck',
               'isViable': True,
               'name': 'Drill Peck',
               'num': 65,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect.',
               'target': 'any',
               'type': 'Flying',
               'zMovePower': 160},
 'drillrun': {'accuracy': 95,
              'basePower': 80,
              'category': 'Physical',
              'contestType': 'Tough',
              'critRatio': 2,
              'desc': 'Has a higher chance for a critical hit.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'drillrun',
              'isViable': True,
              'name': 'Drill Run',
              'num': 529,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'High critical hit ratio.',
              'target': 'normal',
              'type': 'Ground',
              'zMovePower': 160},
 'dualchop': {'accuracy': 90,
              'basePower': 40,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': "Hits twice. If the first hit breaks the target's "
                      'substitute, it will take damage for the second hit.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'dualchop',
              'multihit': 2,
              'name': 'Dual Chop',
              'num': 530,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Hits 2 times in one turn.',
              'target': 'normal',
              'type': 'Dragon',
              'zMovePower': 100},
 'dynamicpunch': {'accuracy': 50,
                  'basePower': 100,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'desc': 'Has a 100% chance to confuse the target.',
                  'flags': {'contact': 1,
                            'mirror': 1,
                            'protect': 1,
                            'punch': 1},
                  'id': 'dynamicpunch',
                  'name': 'Dynamic Punch',
                  'num': 223,
                  'pp': 5,
                  'priority': 0,
                  'secondary': {'chance': 100, 'volatileStatus': 'confusion'},
                  'shortDesc': '100% chance to confuse the target.',
                  'target': 'normal',
                  'type': 'Fighting',
                  'zMovePower': 180},
 'earthpower': {'accuracy': 100,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 10% chance to lower the target's Special "
                        'Defense by 1 stage.',
                'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                'id': 'earthpower',
                'isViable': True,
                'name': 'Earth Power',
                'num': 414,
                'pp': 10,
                'priority': 0,
                'secondary': {'boosts': {'spd': -1}, 'chance': 10},
                'shortDesc': "10% chance to lower the target's Sp. Def by 1.",
                'target': 'normal',
                'type': 'Ground',
                'zMovePower': 175},
 'earthquake': {'accuracy': 100,
                'basePower': 100,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'Damage doubles if the target is using Dig.',
                'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                'id': 'earthquake',
                'isViable': True,
                'name': 'Earthquake',
                'num': 89,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits adjacent Pokemon. Double damage on Dig.',
                'target': 'allAdjacent',
                'type': 'Ground',
                'zMovePower': 180},
 'echoedvoice': {'accuracy': 100,
                 'basePower': 40,
                 'basePowerCallback': echoedvoice.basePowerCallback,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'For every consecutive turn that this move is used by '
                         "at least one Pokemon, this move's power is "
                         'multiplied by the number of turns to pass, but not '
                         'more than 5.',
                 'effect': {'duration': 2,
                            'onRestart': echoedvoice.onRestart,
                            'onStart': echoedvoice.onStart},
                 'flags': {'authentic': 1,
                           'mirror': 1,
                           'protect': 1,
                           'sound': 1},
                 'id': 'echoedvoice',
                 'name': 'Echoed Voice',
                 'num': 497,
                 'onTry': echoedvoice.onTry,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Power increases when used on consecutive turns.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 100},
 'eerieimpulse': {'accuracy': 100,
                  'basePower': 0,
                  'boosts': {'spa': -2},
                  'category': 'Status',
                  'contestType': 'Clever',
                  'desc': "Lowers the target's Special Attack by 2 stages.",
                  'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                  'id': 'eerieimpulse',
                  'name': 'Eerie Impulse',
                  'num': 598,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Lowers the target's Sp. Atk by 2.",
                  'target': 'normal',
                  'type': 'Electric',
                  'zMoveBoost': {'spd': 1}},
 'eggbomb': {'accuracy': 75,
             'basePower': 100,
             'category': 'Physical',
             'contestType': 'Cute',
             'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
             'id': 'eggbomb',
             'name': 'Egg Bomb',
             'num': 121,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'No additional effect.',
             'target': 'normal',
             'type': 'Normal',
             'zMovePower': 180},
 'electricterrain': {'accuracy': True,
                     'basePower': 0,
                     'category': 'Status',
                     'contestType': 'Clever',
                     'desc': 'For 5 turns, the terrain becomes Electric '
                             'Terrain. During the effect, the power of '
                             'Electric-type attacks made by grounded Pokemon '
                             'is multiplied by 1.5 and grounded Pokemon cannot '
                             'fall asleep; Pokemon already asleep do not wake '
                             'up. Camouflage transforms the user into an '
                             'Electric type, Nature Power becomes Thunderbolt, '
                             'and Secret Power has a 30% chance to cause '
                             'paralysis. Fails if the current terrain is '
                             'Electric Terrain.',
                     'effect': {'duration': 5,
                                'durationCallback': electricterrain.durationCallback,
                                'onBasePower': electricterrain.onBasePower,
                                'onEnd': electricterrain.onEnd,
                                'onResidualOrder': 21,
                                'onResidualSubOrder': 2,
                                'onSetStatus': electricterrain.onSetStatus,
                                'onStart': electricterrain.onStart,
                                'onTryAddVolatile': electricterrain.onTryAddVolatile},
                     'flags': {'nonsky': 1},
                     'id': 'electricterrain',
                     'name': 'Electric Terrain',
                     'num': 604,
                     'pp': 10,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "5 turns. Grounded: +Electric power, can't "
                                  'sleep.',
                     'target': 'all',
                     'terrain': 'electricterrain',
                     'type': 'Electric',
                     'zMoveBoost': {'spe': 1}},
 'electrify': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "Causes the target's move to become Electric type this "
                       "turn. Among effects that can change a move's type, "
                       'this effect happens last. Fails if the target already '
                       'moved this turn.',
               'effect': {'duration': 1,
                          'onModifyMove': electrify.onModifyMove,
                          'onModifyMovePriority': -2,
                          'onStart': electrify.onStart},
               'flags': {'mirror': 1, 'mystery': 1, 'protect': 1},
               'id': 'electrify',
               'name': 'Electrify',
               'num': 582,
               'onTryHit': electrify.onTryHit,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Changes the target's move to Electric this turn.",
               'target': 'normal',
               'type': 'Electric',
               'volatileStatus': 'electrify',
               'zMoveBoost': {'spa': 1}},
 'electroball': {'accuracy': 100,
                 'basePower': 0,
                 'basePowerCallback': electroball.basePowerCallback,
                 'category': 'Special',
                 'contestType': 'Cool',
                 'desc': "The power of this move depends on (user's current "
                         "Speed / target's current Speed), rounded down. Power "
                         'is equal to 150 if the result is 4 or more, 120 if '
                         '3, 80 if 2, 60 if 1, 40 if less than 1. If the '
                         "target's current Speed is 0, this move's power is "
                         '40.',
                 'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                 'id': 'electroball',
                 'name': 'Electro Ball',
                 'num': 486,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'More power the faster the user is than the '
                              'target.',
                 'target': 'normal',
                 'type': 'Electric',
                 'zMovePower': 160},
 'electroweb': {'accuracy': 95,
                'basePower': 55,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 100% chance to lower the target's Speed by 1 "
                        'stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'electroweb',
                'name': 'Electroweb',
                'num': 527,
                'pp': 15,
                'priority': 0,
                'secondary': {'boosts': {'spe': -1}, 'chance': 100},
                'shortDesc': '100% chance to lower the foe(s) Speed by 1.',
                'target': 'allAdjacentFoes',
                'type': 'Electric',
                'zMovePower': 100},
 'embargo': {'accuracy': 100,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': "For 5 turns, the target's held item has no effect. An "
                     "item's effect of causing forme changes is unaffected, "
                     'but any other effects from such items are negated. '
                     'During the effect, Fling and Natural Gift are prevented '
                     'from being used by the target. Items thrown at the '
                     'target with Fling will still activate for it. If the '
                     'target uses Baton Pass, the replacement will remain '
                     'unable to use items.',
             'effect': {'duration': 5,
                        'onEnd': embargo.onEnd,
                        'onResidualOrder': 18,
                        'onStart': embargo.onStart},
             'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
             'id': 'embargo',
             'name': 'Embargo',
             'num': 373,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': "For 5 turns, the target's item has no effect.",
             'target': 'normal',
             'type': 'Dark',
             'volatileStatus': 'embargo',
             'zMoveBoost': {'spa': 1}},
 'ember': {'accuracy': 100,
           'basePower': 40,
           'category': 'Special',
           'contestType': 'Cute',
           'desc': 'Has a 10% chance to burn the target.',
           'flags': {'mirror': 1, 'protect': 1},
           'id': 'ember',
           'name': 'Ember',
           'num': 52,
           'pp': 25,
           'priority': 0,
           'secondary': {'chance': 10, 'status': 'brn'},
           'shortDesc': '10% chance to burn the target.',
           'target': 'normal',
           'type': 'Fire',
           'zMovePower': 100},
 'encore': {'accuracy': 100,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Cute',
            'desc': 'For its next 3 turns, the target is forced to repeat its '
                    'last move used. If the affected move runs out of PP, the '
                    'effect ends. Fails if the target is already under this '
                    'effect, if it has not made a move, if the move has 0 PP, '
                    'or if the move is Assist, Copycat, Encore, Me First, '
                    'Metronome, Mimic, Mirror Move, Nature Power, Sketch, '
                    'Sleep Talk, Struggle, Transform, or any Z-Move.',
            'effect': {'duration': 3,
                       'noCopy': True,
                       'onDisableMove': encore.onDisableMove,
                       'onEnd': encore.onEnd,
                       'onOverrideAction': encore.onOverrideAction,
                       'onResidual': encore.onResidual,
                       'onResidualOrder': 13,
                       'onStart': encore.onStart},
            'flags': {'authentic': 1,
                      'mirror': 1,
                      'protect': 1,
                      'reflectable': 1},
            'id': 'encore',
            'isViable': True,
            'name': 'Encore',
            'num': 227,
            'pp': 5,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Target repeats its last move for its next 3 turns.',
            'target': 'normal',
            'type': 'Normal',
            'volatileStatus': 'encore',
            'zMoveBoost': {'spe': 1}},
 'endeavor': {'accuracy': 100,
              'basePower': 0,
              'category': 'Physical',
              'contestType': 'Tough',
              'damageCallback': endeavor.damageCallback,
              'desc': "Deals damage to the target equal to (target's current "
                      "HP - user's current HP). The target is unaffected if "
                      "its current HP is less than or equal to the user's "
                      'current HP.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'endeavor',
              'isViable': True,
              'name': 'Endeavor',
              'num': 283,
              'onTry': endeavor.onTry,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Lowers the target's HP to the user's HP.",
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 160},
 'endure': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Tough',
            'desc': 'The user will survive attacks made by other Pokemon '
                    'during this turn with at least 1 HP. This move has a 1/X '
                    'chance of being successful, where X starts at 1 and '
                    'triples each time this move is successfully used. X '
                    "resets to 1 if this move fails, if the user's last move "
                    "used is not Baneful Bunker, Detect, Endure, King's "
                    'Shield, Protect, Quick Guard, Spiky Shield, or Wide '
                    "Guard, or if it was one of those moves and the user's "
                    'protection was broken. Fails if the user moves last this '
                    'turn.',
            'effect': {'duration': 1,
                       'onDamage': endure.onDamage,
                       'onDamagePriority': -10,
                       'onStart': endure.onStart},
            'flags': {},
            'id': 'endure',
            'name': 'Endure',
            'num': 203,
            'onHit': endure.onHit,
            'onTryHit': endure.onTryHit,
            'pp': 10,
            'priority': 4,
            'secondary': {},
            'shortDesc': 'User survives attacks this turn with at least 1 HP.',
            'stallingMove': True,
            'target': 'self',
            'type': 'Normal',
            'volatileStatus': 'endure',
            'zMoveEffect': 'clearnegativeboost'},
 'energyball': {'accuracy': 100,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 10% chance to lower the target's Special "
                        'Defense by 1 stage.',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'energyball',
                'isViable': True,
                'name': 'Energy Ball',
                'num': 412,
                'pp': 10,
                'priority': 0,
                'secondary': {'boosts': {'spd': -1}, 'chance': 10},
                'shortDesc': "10% chance to lower the target's Sp. Def by 1.",
                'target': 'normal',
                'type': 'Grass',
                'zMovePower': 175},
 'entrainment': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cute',
                 'desc': "Causes the target's Ability to become the same as "
                         "the user's. Fails if the target's Ability is Battle "
                         'Bond, Comatose, Disguise, Multitype, Power '
                         'Construct, RKS System, Schooling, Shields Down, '
                         'Stance Change, Truant, or the same Ability as the '
                         "user, or if the user's Ability is Battle Bond, "
                         'Comatose, Disguise, Flower Gift, Forecast, Illusion, '
                         'Imposter, Multitype, Power Construct, Power of '
                         'Alchemy, Receiver, RKS System, Schooling, Shields '
                         'Down, Stance Change, Trace, or Zen Mode.',
                 'flags': {'mirror': 1,
                           'mystery': 1,
                           'protect': 1,
                           'reflectable': 1},
                 'id': 'entrainment',
                 'name': 'Entrainment',
                 'num': 494,
                 'onHit': entrainment.onHit,
                 'onTryHit': entrainment.onTryHit,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "The target's Ability changes to match the "
                              "user's.",
                 'target': 'normal',
                 'type': 'Normal',
                 'zMoveBoost': {'spd': 1}},
 'eruption': {'accuracy': 100,
              'basePower': 150,
              'basePowerCallback': eruption.basePowerCallback,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': "Power is equal to (user's current HP * 150 / user's "
                      'maximum HP), rounded down, but not less than 1.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'eruption',
              'isViable': True,
              'name': 'Eruption',
              'num': 284,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Less power as user's HP decreases. Hits foe(s).",
              'target': 'allAdjacentFoes',
              'type': 'Fire',
              'zMovePower': 200},
 'explosion': {'accuracy': 100,
               'basePower': 250,
               'category': 'Physical',
               'contestType': 'Beautiful',
               'desc': 'The user faints after using this move, even if this '
                       'move fails for having no target. This move is '
                       'prevented from executing if any active Pokemon has the '
                       'Damp Ability.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'explosion',
               'isViable': True,
               'name': 'Explosion',
               'num': 153,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'selfdestruct': 'always',
               'shortDesc': 'Hits adjacent Pokemon. The user faints.',
               'target': 'allAdjacent',
               'type': 'Normal',
               'zMovePower': 200},
 'extrasensory': {'accuracy': 100,
                  'basePower': 80,
                  'category': 'Special',
                  'contestType': 'Cool',
                  'desc': 'Has a 10% chance to flinch the target.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'extrasensory',
                  'isViable': True,
                  'name': 'Extrasensory',
                  'num': 326,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {'chance': 10, 'volatileStatus': 'flinch'},
                  'shortDesc': '10% chance to flinch the target.',
                  'target': 'normal',
                  'type': 'Psychic',
                  'zMovePower': 160},
 'extremeevoboost': {'accuracy': True,
                     'basePower': 0,
                     'boosts': {'atk': 2,
                                'def': 2,
                                'spa': 2,
                                'spd': 2,
                                'spe': 2},
                     'category': 'Status',
                     'contestType': 'Beautiful',
                     'desc': "Raises the user's Attack, Defense, Special "
                             'Attack, Special Defense, and Speed by 2 stages.',
                     'flags': {},
                     'id': 'extremeevoboost',
                     'isViable': True,
                     'isZ': 'eeviumz',
                     'name': 'Extreme Evoboost',
                     'num': 702,
                     'pp': 1,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "Raises user's Atk, Def, SpA, SpD, and Spe "
                                  'by 2.',
                     'target': 'self',
                     'type': 'Normal'},
 'extremespeed': {'accuracy': 100,
                  'basePower': 80,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'desc': 'No additional effect.',
                  'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                  'id': 'extremespeed',
                  'isViable': True,
                  'name': 'Extreme Speed',
                  'num': 245,
                  'pp': 5,
                  'priority': 2,
                  'secondary': {},
                  'shortDesc': 'Nearly always goes first.',
                  'target': 'normal',
                  'type': 'Normal',
                  'zMovePower': 160},
 'facade': {'accuracy': 100,
            'basePower': 70,
            'category': 'Physical',
            'contestType': 'Cute',
            'desc': 'Power doubles if the user is burned, paralyzed, or '
                    'poisoned. The physical damage halving effect from the '
                    "user's burn is ignored.",
            'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
            'id': 'facade',
            'isViable': True,
            'name': 'Facade',
            'num': 263,
            'onBasePower': facade.onBasePower,
            'onBasePowerPriority': 4,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Power doubles if user is burn/poison/paralyzed.',
            'target': 'normal',
            'type': 'Normal',
            'zMovePower': 140},
 'fairylock': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'Prevents all active Pokemon from switching next turn. '
                       'A Pokemon can still switch out if it is holding Shed '
                       'Shell or uses Baton Pass, Parting Shot, U-turn, or '
                       'Volt Switch. Fails if the effect is already active.',
               'effect': {'duration': 2,
                          'onStart': fairylock.onStart,
                          'onTrapPokemon': fairylock.onTrapPokemon},
               'flags': {'authentic': 1, 'mirror': 1},
               'id': 'fairylock',
               'name': 'Fairy Lock',
               'num': 587,
               'pp': 10,
               'priority': 0,
               'pseudoWeather': 'fairylock',
               'secondary': {},
               'shortDesc': 'Prevents all Pokemon from switching next turn.',
               'target': 'all',
               'type': 'Fairy',
               'zMoveBoost': {'def': 1}},
 'fairywind': {'accuracy': 100,
               'basePower': 40,
               'category': 'Special',
               'contestType': 'Beautiful',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'fairywind',
               'name': 'Fairy Wind',
               'num': 584,
               'pp': 30,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect.',
               'target': 'normal',
               'type': 'Fairy',
               'zMovePower': 100},
 'fakeout': {'accuracy': 100,
             'basePower': 40,
             'category': 'Physical',
             'contestType': 'Cute',
             'desc': 'Has a 100% chance to flinch the target. Fails unless it '
                     "is the user's first turn on the field.",
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'fakeout',
             'isViable': True,
             'name': 'Fake Out',
             'num': 252,
             'onTry': fakeout.onTry,
             'pp': 10,
             'priority': 3,
             'secondary': {'chance': 100, 'volatileStatus': 'flinch'},
             'shortDesc': 'Hits first. First turn out only. 100% flinch '
                          'chance.',
             'target': 'normal',
             'type': 'Normal',
             'zMovePower': 100},
 'faketears': {'accuracy': 100,
               'basePower': 0,
               'boosts': {'spd': -2},
               'category': 'Status',
               'contestType': 'Cute',
               'desc': "Lowers the target's Special Defense by 2 stages.",
               'flags': {'mirror': 1,
                         'mystery': 1,
                         'protect': 1,
                         'reflectable': 1},
               'id': 'faketears',
               'name': 'Fake Tears',
               'num': 313,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Lowers the target's Sp. Def by 2.",
               'target': 'normal',
               'type': 'Dark',
               'zMoveBoost': {'spa': 1}},
 'falseswipe': {'accuracy': 100,
                'basePower': 40,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Leaves the target with at least 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'falseswipe',
                'name': 'False Swipe',
                'noFaint': True,
                'num': 206,
                'pp': 40,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Always leaves the target with at least 1 HP.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 100},
 'featherdance': {'accuracy': 100,
                  'basePower': 0,
                  'boosts': {'atk': -2},
                  'category': 'Status',
                  'contestType': 'Beautiful',
                  'desc': "Lowers the target's Attack by 2 stages.",
                  'flags': {'dance': 1,
                            'mirror': 1,
                            'mystery': 1,
                            'protect': 1,
                            'reflectable': 1},
                  'id': 'featherdance',
                  'name': 'Feather Dance',
                  'num': 297,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Lowers the target's Attack by 2.",
                  'target': 'normal',
                  'type': 'Flying',
                  'zMoveBoost': {'def': 1}},
 'feint': {'accuracy': 100,
           'basePower': 30,
           'breaksProtect': True,
           'category': 'Physical',
           'contestType': 'Clever',
           'desc': "If this move is successful, it breaks through the target's "
                   "Baneful Bunker, Detect, King's Shield, Protect, or Spiky "
                   'Shield for this turn, allowing other Pokemon to attack the '
                   "target normally. If the target's side is protected by "
                   'Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that '
                   'protection is also broken for this turn and other Pokemon '
                   "may attack the target's side normally.",
           'flags': {'mirror': 1},
           'id': 'feint',
           'name': 'Feint',
           'num': 364,
           'pp': 10,
           'priority': 2,
           'secondary': {},
           'shortDesc': 'Nullifies Detect, Protect, and Quick/Wide Guard.',
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 100},
 'feintattack': {'accuracy': True,
                 'basePower': 60,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'feintattack',
                 'name': 'Feint Attack',
                 'num': 185,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'This move does not check accuracy.',
                 'target': 'normal',
                 'type': 'Dark',
                 'zMovePower': 120},
 'fellstinger': {'accuracy': 100,
                 'basePower': 50,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': "Raises the user's Attack by 3 stages if this move "
                         'knocks out the target.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'fellstinger',
                 'name': 'Fell Stinger',
                 'num': 565,
                 'onAfterMoveSecondarySelf': fellstinger.onAfterMoveSecondarySelf,
                 'pp': 25,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises user's Attack by 3 if this KOes the "
                              'target.',
                 'target': 'normal',
                 'type': 'Bug',
                 'zMovePower': 100},
 'fierydance': {'accuracy': 100,
                'basePower': 80,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 50% chance to raise the user's Special Attack "
                        'by 1 stage.',
                'flags': {'dance': 1, 'mirror': 1, 'protect': 1},
                'id': 'fierydance',
                'isViable': True,
                'name': 'Fiery Dance',
                'num': 552,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 50, 'self': {'boosts': {'spa': 1}}},
                'shortDesc': "50% chance to raise the user's Sp. Atk by 1.",
                'target': 'normal',
                'type': 'Fire',
                'zMovePower': 160},
 'finalgambit': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Special',
                 'contestType': 'Tough',
                 'damageCallback': finalgambit.damageCallback,
                 'desc': "Deals damage to the target equal to the user's "
                         'current HP. If this move is successful, the user '
                         'faints.',
                 'flags': {'protect': 1},
                 'id': 'finalgambit',
                 'isViable': True,
                 'name': 'Final Gambit',
                 'num': 515,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'selfdestruct': 'ifHit',
                 'shortDesc': "Does damage equal to the user's HP. User "
                              'faints.',
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 180},
 'fireblast': {'accuracy': 85,
               'basePower': 110,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Has a 10% chance to burn the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'fireblast',
               'isViable': True,
               'name': 'Fire Blast',
               'num': 126,
               'pp': 5,
               'priority': 0,
               'secondary': {'chance': 10, 'status': 'brn'},
               'shortDesc': '10% chance to burn the target.',
               'target': 'normal',
               'type': 'Fire',
               'zMovePower': 185},
 'firefang': {'accuracy': 95,
              'basePower': 65,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': 'Has a 10% chance to burn the target and a 10% chance to '
                      'flinch it.',
              'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'firefang',
              'isViable': True,
              'name': 'Fire Fang',
              'num': 424,
              'pp': 15,
              'priority': 0,
              'secondaries': {'0': {'chance': 10, 'status': 'brn'},
                              '1': {'chance': 10, 'volatileStatus': 'flinch'}},
              'shortDesc': '10% chance to burn. 10% chance to flinch.',
              'target': 'normal',
              'type': 'Fire',
              'zMovePower': 120},
 'firelash': {'accuracy': 100,
              'basePower': 80,
              'category': 'Physical',
              'contestType': 'Cute',
              'desc': "Has a 100% chance to lower the target's Defense by 1 "
                      'stage.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'firelash',
              'isViable': True,
              'name': 'Fire Lash',
              'num': 680,
              'pp': 15,
              'priority': 0,
              'secondary': {'boosts': {'def': -1}, 'chance': 100},
              'shortDesc': "100% chance to lower the target's Defense by 1.",
              'target': 'normal',
              'type': 'Fire',
              'zMovePower': 160},
 'firepledge': {'accuracy': 100,
                'basePower': 80,
                'basePowerCallback': firepledge.basePowerCallback,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "If one of the user's allies chose to use Grass Pledge "
                        'or Water Pledge this turn and has not moved yet, it '
                        'takes its turn immediately after the user and the '
                        "user's move does nothing. If combined with Grass "
                        'Pledge, the ally uses Fire Pledge with 150 power and '
                        "a sea of fire appears on the target's side for 4 "
                        'turns, which causes damage to non-Fire types equal to '
                        '1/8 of their maximum HP, rounded down, at the end of '
                        'each turn during effect, including the last turn. If '
                        'combined with Water Pledge, the ally uses Water '
                        'Pledge with 150 power and a rainbow appears on the '
                        "user's side for 4 turns, which doubles secondary "
                        'effect chances but does not stack with the Serene '
                        'Grace Ability. When used as a combined move, this '
                        "move gains STAB no matter what the user's type is. "
                        "This move does not consume the user's Fire Gem.",
                'effect': {'duration': 4,
                           'onEnd': firepledge.onEnd,
                           'onResidual': firepledge.onResidual,
                           'onStart': firepledge.onStart},
                'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                'id': 'firepledge',
                'name': 'Fire Pledge',
                'num': 519,
                'onHit': firepledge.onHit,
                'onModifyMove': firepledge.onModifyMove,
                'onPrepareHit': firepledge.onPrepareHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Use with Grass or Water Pledge for added effect.',
                'target': 'normal',
                'type': 'Fire',
                'zMovePower': 160},
 'firepunch': {'accuracy': 100,
               'basePower': 75,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Has a 10% chance to burn the target.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
               'id': 'firepunch',
               'isViable': True,
               'name': 'Fire Punch',
               'num': 7,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 10, 'status': 'brn'},
               'shortDesc': '10% chance to burn the target.',
               'target': 'normal',
               'type': 'Fire',
               'zMovePower': 140},
 'firespin': {'accuracy': 85,
              'basePower': 35,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': 'Prevents the target from switching for four or five '
                      'turns (seven turns if the user is holding Grip Claw). '
                      'Causes damage to the target equal to 1/8 of its maximum '
                      'HP (1/6 if the user is holding Binding Band), rounded '
                      'down, at the end of each turn during effect. The target '
                      'can still switch out if it is holding Shed Shell or '
                      'uses Baton Pass, Parting Shot, U-turn, or Volt Switch. '
                      'The effect ends if either the user or the target leaves '
                      'the field, or if the target uses Rapid Spin or '
                      'Substitute successfully. This effect is not stackable '
                      'or reset by using this or another binding move.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'firespin',
              'name': 'Fire Spin',
              'num': 83,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Traps and damages the target for 4-5 turns.',
              'target': 'normal',
              'type': 'Fire',
              'volatileStatus': 'partiallytrapped',
              'zMovePower': 100},
 'firstimpression': {'accuracy': 100,
                     'basePower': 90,
                     'category': 'Physical',
                     'contestType': 'Cute',
                     'desc': "Fails unless it is the user's first turn on the "
                             'field.',
                     'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                     'id': 'firstimpression',
                     'isViable': True,
                     'name': 'First Impression',
                     'num': 660,
                     'onTry': firstimpression.onTry,
                     'pp': 10,
                     'priority': 2,
                     'secondary': {},
                     'shortDesc': 'Hits first. First turn out only.',
                     'target': 'normal',
                     'type': 'Bug',
                     'zMovePower': 175},
 'fissure': {'accuracy': 30,
             'basePower': 0,
             'category': 'Physical',
             'contestType': 'Tough',
             'desc': "Deals damage to the target equal to the target's maximum "
                     'HP. Ignores accuracy and evasiveness modifiers. This '
                     "attack's accuracy is equal to (user's level - target's "
                     'level + 30)%, and fails if the target is at a higher '
                     'level. Pokemon with the Sturdy Ability are immune.',
             'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
             'id': 'fissure',
             'name': 'Fissure',
             'num': 90,
             'ohko': True,
             'pp': 5,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'OHKOs the target. Fails if user is a lower level.',
             'target': 'normal',
             'type': 'Ground',
             'zMovePower': 180},
 'flail': {'accuracy': 100,
           'basePower': 0,
           'basePowerCallback': flail.basePowerCallback,
           'category': 'Physical',
           'contestType': 'Cute',
           'desc': 'The power of this move is 20 if X is 33 to 48, 40 if X is '
                   '17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if '
                   'X is 2 to 4, and 200 if X is 0 or 1, where X is equal to '
                   "(user's current HP * 48 / user's maximum HP), rounded "
                   'down.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'flail',
           'name': 'Flail',
           'num': 175,
           'pp': 15,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'More power the less HP the user has left.',
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 160},
 'flameburst': {'accuracy': 100,
                'basePower': 70,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "If this move is successful, the target's ally loses "
                        '1/16 of its maximum HP, rounded down, unless it has '
                        'the Magic Guard Ability.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'flameburst',
                'name': 'Flame Burst',
                'num': 481,
                'onAfterSubDamage': flameburst.onAfterSubDamage,
                'onHit': flameburst.onHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Damages Pokemon next to the target as well.',
                'target': 'normal',
                'type': 'Fire',
                'zMovePower': 140},
 'flamecharge': {'accuracy': 100,
                 'basePower': 50,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': "Has a 100% chance to raise the user's Speed by 1 "
                         'stage.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'flamecharge',
                 'isViable': True,
                 'name': 'Flame Charge',
                 'num': 488,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {'chance': 100, 'self': {'boosts': {'spe': 1}}},
                 'shortDesc': "100% chance to raise the user's Speed by 1.",
                 'target': 'normal',
                 'type': 'Fire',
                 'zMovePower': 100},
 'flamethrower': {'accuracy': 100,
                  'basePower': 90,
                  'category': 'Special',
                  'contestType': 'Beautiful',
                  'desc': 'Has a 10% chance to burn the target.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'flamethrower',
                  'isViable': True,
                  'name': 'Flamethrower',
                  'num': 53,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {'chance': 10, 'status': 'brn'},
                  'shortDesc': '10% chance to burn the target.',
                  'target': 'normal',
                  'type': 'Fire',
                  'zMovePower': 175},
 'flamewheel': {'accuracy': 100,
                'basePower': 60,
                'category': 'Physical',
                'contestType': 'Beautiful',
                'desc': 'Has a 10% chance to burn the target.',
                'flags': {'contact': 1,
                          'defrost': 1,
                          'mirror': 1,
                          'protect': 1},
                'id': 'flamewheel',
                'name': 'Flame Wheel',
                'num': 172,
                'pp': 25,
                'priority': 0,
                'secondary': {'chance': 10, 'status': 'brn'},
                'shortDesc': '10% chance to burn the target. Thaws user.',
                'target': 'normal',
                'type': 'Fire',
                'zMovePower': 120},
 'flareblitz': {'accuracy': 100,
                'basePower': 120,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Has a 10% chance to burn the target. If the target '
                        'lost HP, the user takes recoil damage equal to 33% '
                        'the HP lost by the target, rounded half up, but not '
                        'less than 1 HP.',
                'flags': {'contact': 1,
                          'defrost': 1,
                          'mirror': 1,
                          'protect': 1},
                'id': 'flareblitz',
                'isViable': True,
                'name': 'Flare Blitz',
                'num': 394,
                'pp': 15,
                'priority': 0,
                'recoil': {'0': 33, '1': 100},
                'secondary': {'chance': 10, 'status': 'brn'},
                'shortDesc': 'Has 33% recoil. 10% chance to burn. Thaws user.',
                'target': 'normal',
                'type': 'Fire',
                'zMovePower': 190},
 'flash': {'accuracy': 100,
           'basePower': 0,
           'boosts': {'accuracy': -1},
           'category': 'Status',
           'contestType': 'Beautiful',
           'desc': "Lowers the target's accuracy by 1 stage.",
           'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
           'id': 'flash',
           'name': 'Flash',
           'num': 148,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Lowers the target's accuracy by 1.",
           'target': 'normal',
           'type': 'Normal',
           'zMoveBoost': {'evasion': 1}},
 'flashcannon': {'accuracy': 100,
                 'basePower': 80,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': "Has a 10% chance to lower the target's Special "
                         'Defense by 1 stage.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'flashcannon',
                 'isViable': True,
                 'name': 'Flash Cannon',
                 'num': 430,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {'boosts': {'spd': -1}, 'chance': 10},
                 'shortDesc': "10% chance to lower the target's Sp. Def by 1.",
                 'target': 'normal',
                 'type': 'Steel',
                 'zMovePower': 160},
 'flatter': {'accuracy': 100,
             'basePower': 0,
             'boosts': {'spa': 1},
             'category': 'Status',
             'contestType': 'Clever',
             'desc': "Raises the target's Special Attack by 1 stage and "
                     'confuses it.',
             'flags': {'mirror': 1,
                       'mystery': 1,
                       'protect': 1,
                       'reflectable': 1},
             'id': 'flatter',
             'name': 'Flatter',
             'num': 260,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Raises the target's Sp. Atk by 1 and confuses it.",
             'target': 'normal',
             'type': 'Dark',
             'volatileStatus': 'confusion',
             'zMoveBoost': {'spd': 1}},
 'fleurcannon': {'accuracy': 90,
                 'basePower': 130,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': "Lowers the user's Special Attack by 2 stages.",
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'fleurcannon',
                 'isViable': True,
                 'name': 'Fleur Cannon',
                 'num': 705,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'boosts': {'spa': -2}},
                 'shortDesc': "Lowers the user's Sp. Atk by 2.",
                 'target': 'normal',
                 'type': 'Fairy',
                 'zMovePower': 195},
 'fling': {'accuracy': 100,
           'basePower': 0,
           'category': 'Physical',
           'contestType': 'Cute',
           'desc': "The power of this move is based on the user's held item. "
                   'The held item is lost and it activates for the target if '
                   'applicable. If there is no target or the target avoids '
                   "this move by protecting itself, the user's held item is "
                   'still lost. The user can regain a thrown item with Recycle '
                   'or the Harvest Ability. Fails if the user has no held '
                   'item, if the held item cannot be thrown, if the user is '
                   'under the effect of Embargo or Magic Room, or if the user '
                   'has the Klutz Ability.',
           'flags': {'mirror': 1, 'mystery': 1, 'protect': 1},
           'id': 'fling',
           'name': 'Fling',
           'num': 374,
           'onPrepareHit': fling.onPrepareHit,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Flings the user's item at the target. Power varies.",
           'target': 'normal',
           'type': 'Dark',
           'zMovePower': 100},
 'floatyfall': {'accuracy': 95,
                'basePower': 90,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Has a 30% chance to flinch the target.',
                'flags': {'contact': 1, 'gravity': 1, 'protect': 1},
                'id': 'floatyfall',
                'isNonstandard': True,
                'isUnreleased': True,
                'isViable': True,
                'name': 'Floaty Fall',
                'num': 731,
                'pp': 15,
                'priority': 0,
                'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
                'shortDesc': '30% chance to flinch the target.',
                'target': 'normal',
                'type': 'Flying'},
 'floralhealing': {'accuracy': True,
                   'basePower': 0,
                   'category': 'Status',
                   'contestType': 'Beautiful',
                   'desc': 'The target restores 1/2 of its maximum HP, rounded '
                           'half up. If the terrain is Grassy Terrain, the '
                           'target instead restores 2/3 of its maximum HP, '
                           'rounded half down.',
                   'flags': {'heal': 1,
                             'mystery': 1,
                             'protect': 1,
                             'reflectable': 1},
                   'id': 'floralhealing',
                   'name': 'Floral Healing',
                   'num': 666,
                   'onHit': floralhealing.onHit,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': 'Heals the target by 50% of its max HP.',
                   'target': 'normal',
                   'type': 'Fairy',
                   'zMoveEffect': 'clearnegativeboost'},
 'flowershield': {'accuracy': True,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Beautiful',
                  'desc': 'Raises the Defense of all active Grass-type Pokemon '
                          'by 1 stage. Fails if there are no active Grass-type '
                          'Pokemon.',
                  'flags': {'distance': 1},
                  'id': 'flowershield',
                  'name': 'Flower Shield',
                  'num': 579,
                  'onHitField': flowershield.onHitField,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Raises Defense by 1 of all active Grass types.',
                  'target': 'all',
                  'type': 'Fairy',
                  'zMoveBoost': {'def': 1}},
 'fly': {'accuracy': 95,
         'basePower': 90,
         'category': 'Physical',
         'contestType': 'Clever',
         'desc': 'This attack charges on the first turn and executes on the '
                 'second. On the first turn, the user avoids all attacks other '
                 'than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand '
                 'Arrows, Thunder, and Twister, and Gust and Twister have '
                 'doubled power when used against it. If the user is holding a '
                 'Power Herb, the move completes in one turn.',
         'effect': {'duration': 2,
                    'onSourceModifyDamage': fly.onSourceModifyDamage,
                    'onTryImmunity': fly.onTryImmunity},
         'flags': {'charge': 1,
                   'contact': 1,
                   'distance': 1,
                   'gravity': 1,
                   'mirror': 1,
                   'protect': 1},
         'id': 'fly',
         'name': 'Fly',
         'num': 19,
         'onTryMove': fly.onTryMove,
         'pp': 15,
         'priority': 0,
         'secondary': {},
         'shortDesc': 'Flies up on first turn, then strikes the next turn.',
         'target': 'any',
         'type': 'Flying',
         'zMovePower': 175},
 'flyingpress': {'accuracy': 95,
                 'basePower': 100,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': 'This move combines Flying in its type effectiveness '
                         'against the target. Damage doubles and no accuracy '
                         'check is done if the target has used Minimize while '
                         'active.',
                 'flags': {'contact': 1,
                           'distance': 1,
                           'gravity': 1,
                           'mirror': 1,
                           'nonsky': 1,
                           'protect': 1},
                 'id': 'flyingpress',
                 'name': 'Flying Press',
                 'num': 560,
                 'onEffectiveness': flyingpress.onEffectiveness,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Combines Flying in its type effectiveness.',
                 'target': 'any',
                 'type': 'Fighting',
                 'zMovePower': 170},
 'focusblast': {'accuracy': 70,
                'basePower': 120,
                'category': 'Special',
                'contestType': 'Cool',
                'desc': "Has a 10% chance to lower the target's Special "
                        'Defense by 1 stage.',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'focusblast',
                'isViable': True,
                'name': 'Focus Blast',
                'num': 411,
                'pp': 5,
                'priority': 0,
                'secondary': {'boosts': {'spd': -1}, 'chance': 10},
                'shortDesc': "10% chance to lower the target's Sp. Def by 1.",
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 190},
 'focusenergy': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cool',
                 'desc': "Raises the user's chance for a critical hit by 2 "
                         'stages. Fails if the user already has the effect. '
                         'Baton Pass can be used to transfer this effect to an '
                         'ally.',
                 'effect': {'onModifyCritRatio': focusenergy.onModifyCritRatio,
                            'onStart': focusenergy.onStart},
                 'flags': {'snatch': 1},
                 'id': 'focusenergy',
                 'name': 'Focus Energy',
                 'num': 116,
                 'pp': 30,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's critical hit ratio by 2.",
                 'target': 'self',
                 'type': 'Normal',
                 'volatileStatus': 'focusenergy',
                 'zMoveBoost': {'accuracy': 1}},
 'focuspunch': {'accuracy': 100,
                'basePower': 150,
                'beforeMoveCallback': focuspunch.beforeMoveCallback,
                'beforeTurnCallback': focuspunch.beforeTurnCallback,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'The user loses its focus and does nothing if it is '
                        'hit by a damaging attack this turn before it can '
                        'execute the move.',
                'effect': {'duration': 1,
                           'onHit': focuspunch.onHit,
                           'onStart': focuspunch.onStart},
                'flags': {'contact': 1, 'protect': 1, 'punch': 1},
                'id': 'focuspunch',
                'isViable': True,
                'name': 'Focus Punch',
                'num': 264,
                'pp': 20,
                'priority': -3,
                'secondary': {},
                'shortDesc': 'Fails if the user takes damage before it hits.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 200},
 'followme': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cute',
              'desc': 'Until the end of the turn, all single-target attacks '
                      'from the opposing side are redirected to the user. Such '
                      'attacks are redirected to the user before they can be '
                      'reflected by Magic Coat or the Magic Bounce Ability, or '
                      'drawn in by the Lightning Rod or Storm Drain Abilities. '
                      'Fails if it is not a Double Battle or Battle Royal. '
                      'This effect is ignored while the user is under the '
                      'effect of Sky Drop.',
              'effect': {'duration': 1,
                         'onFoeRedirectTarget': followme.onFoeRedirectTarget,
                         'onFoeRedirectTargetPriority': 1,
                         'onStart': followme.onStart},
              'flags': {},
              'id': 'followme',
              'name': 'Follow Me',
              'num': 266,
              'onTryHit': followme.onTryHit,
              'pp': 20,
              'priority': 2,
              'secondary': {},
              'shortDesc': "The foes' moves target the user on the turn used.",
              'target': 'self',
              'type': 'Normal',
              'volatileStatus': 'followme',
              'zMoveEffect': 'clearnegativeboost'},
 'forcepalm': {'accuracy': 100,
               'basePower': 60,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': 'Has a 30% chance to paralyze the target.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'forcepalm',
               'name': 'Force Palm',
               'num': 395,
               'pp': 10,
               'priority': 0,
               'secondary': {'chance': 30, 'status': 'par'},
               'shortDesc': '30% chance to paralyze the target.',
               'target': 'normal',
               'type': 'Fighting',
               'zMovePower': 120},
 'foresight': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'As long as the target remains active, its evasiveness '
                       'stat stage is ignored during accuracy checks against '
                       'it if it is greater than 0, and Normal- and '
                       'Fighting-type attacks can hit the target if it is a '
                       'Ghost type. Fails if the target is already affected, '
                       'or affected by Miracle Eye or Odor Sleuth.',
               'effect': {'noCopy': True,
                          'onModifyBoost': foresight.onModifyBoost,
                          'onNegateImmunity': foresight.onNegateImmunity,
                          'onStart': foresight.onStart},
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'protect': 1,
                         'reflectable': 1},
               'id': 'foresight',
               'name': 'Foresight',
               'num': 193,
               'onTryHit': foresight.onTryHit,
               'pp': 40,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Fighting, Normal hit Ghost. Evasiveness ignored.',
               'target': 'normal',
               'type': 'Normal',
               'volatileStatus': 'foresight',
               'zMoveEffect': 'crit2'},
 'forestscurse': {'accuracy': 100,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Clever',
                  'desc': 'Causes the Grass type to be added to the target, '
                          'effectively making it have two or three types. '
                          'Fails if the target is already a Grass type. If '
                          'Trick-or-Treat adds a type to the target, it '
                          'replaces the type added by this move and vice '
                          'versa.',
                  'flags': {'mirror': 1,
                            'mystery': 1,
                            'protect': 1,
                            'reflectable': 1},
                  'id': 'forestscurse',
                  'name': "Forest's Curse",
                  'num': 571,
                  'onHit': forestscurse.onHit,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Adds Grass to the target's type(s).",
                  'target': 'normal',
                  'type': 'Grass',
                  'zMoveBoost': {'atk': 1,
                                 'def': 1,
                                 'spa': 1,
                                 'spd': 1,
                                 'spe': 1}},
 'foulplay': {'accuracy': 100,
              'basePower': 95,
              'category': 'Physical',
              'contestType': 'Clever',
              'desc': "Damage is calculated using the target's Attack stat, "
                      "including stat stage changes. The user's Ability, item, "
                      'and burn are used as normal.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'foulplay',
              'isViable': True,
              'name': 'Foul Play',
              'num': 492,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Uses target's Attack stat in damage calculation.",
              'target': 'normal',
              'type': 'Dark',
              'useTargetOffensive': True,
              'zMovePower': 175},
 'freezedry': {'accuracy': 100,
               'basePower': 70,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Has a 10% chance to freeze the target. This move's "
                       'type effectiveness against Water is changed to be '
                       "super effective no matter what this move's type is.",
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'freezedry',
               'isViable': True,
               'name': 'Freeze-Dry',
               'num': 573,
               'onEffectiveness': freezedry.onEffectiveness,
               'pp': 20,
               'priority': 0,
               'secondary': {'chance': 10, 'status': 'frz'},
               'shortDesc': '10% chance to freeze. Super effective on Water.',
               'target': 'normal',
               'type': 'Ice',
               'zMovePower': 140},
 'freezeshock': {'accuracy': 90,
                 'basePower': 140,
                 'category': 'Physical',
                 'contestType': 'Beautiful',
                 'desc': 'Has a 30% chance to paralyze the target. This attack '
                         'charges on the first turn and executes on the '
                         'second. If the user is holding a Power Herb, the '
                         'move completes in one turn.',
                 'flags': {'charge': 1, 'mirror': 1, 'protect': 1},
                 'id': 'freezeshock',
                 'name': 'Freeze Shock',
                 'num': 553,
                 'onTryMove': freezeshock.onTryMove,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {'chance': 30, 'status': 'par'},
                 'shortDesc': 'Charges turn 1. Hits turn 2. 30% paralyze.',
                 'target': 'normal',
                 'type': 'Ice',
                 'zMovePower': 200},
 'freezyfrost': {'accuracy': 100,
                 'basePower': 90,
                 'category': 'Special',
                 'contestType': 'Clever',
                 'desc': 'Resets the stat stages of all active Pokemon to 0.',
                 'flags': {'protect': 1},
                 'id': 'freezyfrost',
                 'isNonstandard': True,
                 'isUnreleased': True,
                 'isViable': True,
                 'name': 'Freezy Frost',
                 'num': 739,
                 'onHit': freezyfrost.onHit,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Eliminates all stat changes.',
                 'target': 'normal',
                 'type': 'Ice'},
 'frenzyplant': {'accuracy': 90,
                 'basePower': 150,
                 'category': 'Special',
                 'contestType': 'Cool',
                 'desc': 'If this move is successful, the user must recharge '
                         'on the following turn and cannot select a move.',
                 'flags': {'mirror': 1,
                           'nonsky': 1,
                           'protect': 1,
                           'recharge': 1},
                 'id': 'frenzyplant',
                 'name': 'Frenzy Plant',
                 'num': 338,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'volatileStatus': 'mustrecharge'},
                 'shortDesc': 'User cannot move next turn.',
                 'target': 'normal',
                 'type': 'Grass',
                 'zMovePower': 200},
 'frostbreath': {'accuracy': 90,
                 'basePower': 60,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'This move is always a critical hit unless the target '
                         'is under the effect of Lucky Chant or has the Battle '
                         'Armor or Shell Armor Abilities.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'frostbreath',
                 'name': 'Frost Breath',
                 'num': 524,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Always results in a critical hit.',
                 'target': 'normal',
                 'type': 'Ice',
                 'willCrit': True,
                 'zMovePower': 120},
 'frustration': {'accuracy': 100,
                 'basePower': 0,
                 'basePowerCallback': frustration.basePowerCallback,
                 'category': 'Physical',
                 'contestType': 'Cute',
                 'desc': "Power is equal to the greater of ((255 - user's "
                         'Happiness) * 2/5), rounded down, or 1.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'frustration',
                 'isViable': True,
                 'name': 'Frustration',
                 'num': 218,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Max 102 power at minimum Happiness.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 160},
 'furyattack': {'accuracy': 85,
                'basePower': 15,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                        'or three times, and a 1/6 chance to hit four or five '
                        "times. If one of the hits breaks the target's "
                        'substitute, it will take damage for the remaining '
                        'hits. If the user has the Skill Link Ability, this '
                        'move will always hit five times.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'furyattack',
                'multihit': {'0': 2, '1': 5},
                'name': 'Fury Attack',
                'num': 31,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2-5 times in one turn.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 100},
 'furycutter': {'accuracy': 95,
                'basePower': 40,
                'basePowerCallback': furycutter.basePowerCallback,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Power doubles with each successful hit, up to a '
                        'maximum of 160 power. The power is reset if this move '
                        'misses or another move is used.',
                'effect': {'duration': 2,
                           'onRestart': furycutter.onRestart,
                           'onStart': furycutter.onStart},
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'furycutter',
                'name': 'Fury Cutter',
                'num': 210,
                'onHit': furycutter.onHit,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Power doubles with each hit, up to 160.',
                'target': 'normal',
                'type': 'Bug',
                'zMovePower': 100},
 'furyswipes': {'accuracy': 80,
                'basePower': 18,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                        'or three times, and a 1/6 chance to hit four or five '
                        "times. If one of the hits breaks the target's "
                        'substitute, it will take damage for the remaining '
                        'hits. If the user has the Skill Link Ability, this '
                        'move will always hit five times.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'furyswipes',
                'multihit': {'0': 2, '1': 5},
                'name': 'Fury Swipes',
                'num': 154,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2-5 times in one turn.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 100},
 'fusionbolt': {'accuracy': 100,
                'basePower': 100,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Power doubles if the last move used by any Pokemon '
                        'this turn was Fusion Flare.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'fusionbolt',
                'isViable': True,
                'name': 'Fusion Bolt',
                'num': 559,
                'onBasePower': fusionbolt.onBasePower,
                'onBasePowerPriority': 4,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Power doubles if used after Fusion Flare.',
                'target': 'normal',
                'type': 'Electric',
                'zMovePower': 180},
 'fusionflare': {'accuracy': 100,
                 'basePower': 100,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'Power doubles if the last move used by any Pokemon '
                         'this turn was Fusion Bolt.',
                 'flags': {'defrost': 1, 'mirror': 1, 'protect': 1},
                 'id': 'fusionflare',
                 'isViable': True,
                 'name': 'Fusion Flare',
                 'num': 558,
                 'onBasePower': fusionflare.onBasePower,
                 'onBasePowerPriority': 4,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Power doubles if used after Fusion Bolt.',
                 'target': 'normal',
                 'type': 'Fire',
                 'zMovePower': 180},
 'futuresight': {'accuracy': 100,
                 'basePower': 120,
                 'category': 'Special',
                 'contestType': 'Clever',
                 'desc': 'Deals damage two turns after this move is used. At '
                         'the end of that turn, the damage is calculated at '
                         'that time and dealt to the Pokemon at the position '
                         'the target had when the move was used. If the user '
                         'is no longer active at the time, damage is '
                         "calculated based on the user's natural Special "
                         'Attack stat, types, and level, with no boosts from '
                         'its held item or Ability. Fails if this move or Doom '
                         "Desire is already in effect for the target's "
                         'position.',
                 'flags': {},
                 'id': 'futuresight',
                 'ignoreImmunity': True,
                 'isFutureMove': True,
                 'name': 'Future Sight',
                 'num': 248,
                 'onTry': futuresight.onTry,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Hits two turns after being used.',
                 'target': 'normal',
                 'type': 'Psychic',
                 'zMovePower': 190},
 'gastroacid': {'accuracy': 100,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Tough',
                'desc': "Causes the target's Ability to be rendered "
                        'ineffective as long as it remains active. If the '
                        'target uses Baton Pass, the replacement will remain '
                        "under this effect. If the target's Ability is Battle "
                        'Bond, Comatose, Disguise, Multitype, Power Construct, '
                        'RKS System, Schooling, Shields Down, or Stance '
                        'Change, this move fails, and receiving the effect '
                        'through Baton Pass ends the effect immediately.',
                'effect': {'onStart': gastroacid.onStart},
                'flags': {'mirror': 1,
                          'mystery': 1,
                          'protect': 1,
                          'reflectable': 1},
                'id': 'gastroacid',
                'name': 'Gastro Acid',
                'num': 380,
                'onTryHit': gastroacid.onTryHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Nullifies the target's Ability.",
                'target': 'normal',
                'type': 'Poison',
                'volatileStatus': 'gastroacid',
                'zMoveBoost': {'spe': 1}},
 'geargrind': {'accuracy': 85,
               'basePower': 50,
               'category': 'Physical',
               'contestType': 'Clever',
               'desc': "Hits twice. If the first hit breaks the target's "
                       'substitute, it will take damage for the second hit.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'geargrind',
               'isViable': True,
               'multihit': 2,
               'name': 'Gear Grind',
               'num': 544,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Hits 2 times in one turn.',
               'target': 'normal',
               'type': 'Steel',
               'zMovePower': 180},
 'gearup': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Clever',
            'desc': 'Raises the Attack and Special Attack of Pokemon on the '
                    "user's side with the Plus or Minus Abilities by 1 stage.",
            'flags': {'authentic': 1, 'snatch': 1},
            'id': 'gearup',
            'name': 'Gear Up',
            'num': 674,
            'onHitSide': gearup.onHitSide,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Raises Atk, Sp. Atk of allies with Plus/Minus by 1.',
            'target': 'allySide',
            'type': 'Steel',
            'zMoveBoost': {'spa': 1}},
 'genesissupernova': {'accuracy': True,
                      'basePower': 185,
                      'category': 'Special',
                      'contestType': 'Cool',
                      'desc': 'If this move is successful, the terrain becomes '
                              'Psychic Terrain.',
                      'flags': {},
                      'id': 'genesissupernova',
                      'isZ': 'mewniumz',
                      'name': 'Genesis Supernova',
                      'num': 703,
                      'pp': 1,
                      'priority': 0,
                      'secondary': {'chance': 100,
                                    'self': {'onHit': genesissupernova.onHit}},
                      'shortDesc': 'Summons Psychic Terrain.',
                      'target': 'normal',
                      'type': 'Psychic'},
 'geomancy': {'accuracy': True,
              'basePower': 0,
              'boosts': {'spa': 2, 'spd': 2, 'spe': 2},
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': "Raises the user's Special Attack, Special Defense, and "
                      'Speed by 2 stages. This attack charges on the first '
                      'turn and executes on the second. If the user is holding '
                      'a Power Herb, the move completes in one turn.',
              'flags': {'charge': 1, 'nonsky': 1},
              'id': 'geomancy',
              'isViable': True,
              'name': 'Geomancy',
              'num': 601,
              'onTryMove': geomancy.onTryMove,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Charges, then raises SpA, SpD, Spe by 2 turn 2.',
              'target': 'self',
              'type': 'Fairy',
              'zMoveBoost': {'atk': 1, 'def': 1, 'spa': 1, 'spd': 1, 'spe': 1}},
 'gigadrain': {'accuracy': 100,
               'basePower': 75,
               'category': 'Special',
               'contestType': 'Clever',
               'desc': 'The user recovers 1/2 the HP lost by the target, '
                       'rounded half up. If Big Root is held by the user, the '
                       'HP recovered is 1.3x normal, rounded half down.',
               'drain': {'0': 1, '1': 2},
               'flags': {'heal': 1, 'mirror': 1, 'protect': 1},
               'id': 'gigadrain',
               'isViable': True,
               'name': 'Giga Drain',
               'num': 202,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User recovers 50% of the damage dealt.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 140},
 'gigaimpact': {'accuracy': 90,
                'basePower': 150,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'If this move is successful, the user must recharge on '
                        'the following turn and cannot select a move.',
                'flags': {'contact': 1,
                          'mirror': 1,
                          'protect': 1,
                          'recharge': 1},
                'id': 'gigaimpact',
                'name': 'Giga Impact',
                'num': 416,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'self': {'volatileStatus': 'mustrecharge'},
                'shortDesc': 'User cannot move next turn.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 200},
 'gigavolthavoc': {'accuracy': True,
                   'basePower': 1,
                   'category': 'Physical',
                   'contestType': 'Cool',
                   'flags': {},
                   'id': 'gigavolthavoc',
                   'isViable': True,
                   'isZ': 'electriumz',
                   'name': 'Gigavolt Havoc',
                   'num': 646,
                   'pp': 1,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': "Power is equal to the base move's Z-Power.",
                   'target': 'normal',
                   'type': 'Electric'},
 'glaciate': {'accuracy': 95,
              'basePower': 65,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': "Has a 100% chance to lower the target's Speed by 1 "
                      'stage.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'glaciate',
              'name': 'Glaciate',
              'num': 549,
              'pp': 10,
              'priority': 0,
              'secondary': {'boosts': {'spe': -1}, 'chance': 100},
              'shortDesc': '100% chance to lower the foe(s) Speed by 1.',
              'target': 'allAdjacentFoes',
              'type': 'Ice',
              'zMovePower': 120},
 'glare': {'accuracy': 100,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Tough',
           'desc': 'Paralyzes the target.',
           'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
           'id': 'glare',
           'isViable': True,
           'name': 'Glare',
           'num': 137,
           'pp': 30,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Paralyzes the target.',
           'status': 'par',
           'target': 'normal',
           'type': 'Normal',
           'zMoveBoost': {'spd': 1}},
 'glitzyglow': {'accuracy': 100,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Clever',
                'desc': 'This move summons Light Screen for 5 turns upon use.',
                'flags': {'protect': 1},
                'id': 'glitzyglow',
                'isNonstandard': True,
                'isUnreleased': True,
                'isViable': True,
                'name': 'Glitzy Glow',
                'num': 736,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'self': {'sideCondition': 'lightscreen'},
                'shortDesc': 'Summons Light Screen.',
                'target': 'normal',
                'type': 'Psychic'},
 'grassknot': {'accuracy': 100,
               'basePower': 0,
               'basePowerCallback': grassknot.basePowerCallback,
               'category': 'Special',
               'contestType': 'Cute',
               'desc': "This move's power is 20 if the target weighs less than "
                       '10 kg, 40 if less than 25 kg, 60 if less than 50 kg, '
                       '80 if less than 100 kg, 100 if less than 200 kg, and '
                       '120 if greater than or equal to 200 kg.',
               'flags': {'contact': 1, 'mirror': 1, 'nonsky': 1, 'protect': 1},
               'id': 'grassknot',
               'isViable': True,
               'name': 'Grass Knot',
               'num': 447,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'More power the heavier the target.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 160},
 'grasspledge': {'accuracy': 100,
                 'basePower': 80,
                 'basePowerCallback': grasspledge.basePowerCallback,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': "If one of the user's allies chose to use Fire Pledge "
                         'or Water Pledge this turn and has not moved yet, it '
                         'takes its turn immediately after the user and the '
                         "user's move does nothing. If combined with Fire "
                         'Pledge, the ally uses Fire Pledge with 150 power and '
                         "a sea of fire appears on the target's side for 4 "
                         'turns, which causes damage to non-Fire types equal '
                         'to 1/8 of their maximum HP, rounded down, at the end '
                         'of each turn during effect, including the last turn. '
                         'If combined with Water Pledge, the ally uses Grass '
                         'Pledge with 150 power and a swamp appears on the '
                         "target's side for 4 turns, which quarters the Speed "
                         'of each Pokemon on that side. When used as a '
                         'combined move, this move gains STAB no matter what '
                         "the user's type is. This move does not consume the "
                         "user's Grass Gem.",
                 'effect': {'duration': 4,
                            'onEnd': grasspledge.onEnd,
                            'onModifySpe': grasspledge.onModifySpe,
                            'onStart': grasspledge.onStart},
                 'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                 'id': 'grasspledge',
                 'name': 'Grass Pledge',
                 'num': 520,
                 'onHit': grasspledge.onHit,
                 'onModifyMove': grasspledge.onModifyMove,
                 'onPrepareHit': grasspledge.onPrepareHit,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Use with Fire or Water Pledge for added effect.',
                 'target': 'normal',
                 'type': 'Grass',
                 'zMovePower': 160},
 'grasswhistle': {'accuracy': 55,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Clever',
                  'flags': {'authentic': 1,
                            'mirror': 1,
                            'protect': 1,
                            'reflectable': 1,
                            'sound': 1},
                  'id': 'grasswhistle',
                  'name': 'Grass Whistle',
                  'num': 320,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Causes the target to fall asleep.',
                  'status': 'slp',
                  'target': 'normal',
                  'type': 'Grass',
                  'zMoveBoost': {'spe': 1}},
 'grassyterrain': {'accuracy': True,
                   'basePower': 0,
                   'category': 'Status',
                   'contestType': 'Beautiful',
                   'desc': 'For 5 turns, the terrain becomes Grassy Terrain. '
                           'During the effect, the power of Grass-type attacks '
                           'used by grounded Pokemon is multiplied by 1.5, the '
                           'power of Bulldoze, Earthquake, and Magnitude used '
                           'against grounded Pokemon is multiplied by 0.5, and '
                           'grounded Pokemon have 1/16 of their maximum HP, '
                           'rounded down, restored at the end of each turn, '
                           'including the last turn. Camouflage transforms the '
                           'user into a Grass type, Nature Power becomes '
                           'Energy Ball, and Secret Power has a 30% chance to '
                           'cause sleep. Fails if the current terrain is '
                           'Grassy Terrain.',
                   'effect': {'duration': 5,
                              'durationCallback': grassyterrain.durationCallback,
                              'onBasePower': grassyterrain.onBasePower,
                              'onEnd': grassyterrain.onEnd,
                              'onResidual': grassyterrain.onResidual,
                              'onResidualOrder': 5,
                              'onResidualSubOrder': 3,
                              'onStart': grassyterrain.onStart,
                              'onTerrain': grassyterrain.onTerrain},
                   'flags': {'nonsky': 1},
                   'id': 'grassyterrain',
                   'name': 'Grassy Terrain',
                   'num': 580,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': '5 turns. Grounded: +Grass power,+1/16 max HP.',
                   'target': 'all',
                   'terrain': 'grassyterrain',
                   'type': 'Grass',
                   'zMoveBoost': {'def': 1}},
 'gravity': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': 'For 5 turns, the evasiveness of all active Pokemon is '
                     'multiplied by 0.6. At the time of use, Bounce, Fly, '
                     'Magnet Rise, Sky Drop, and Telekinesis end immediately '
                     'for all active Pokemon. During the effect, Bounce, Fly, '
                     'Flying Press, High Jump Kick, Jump Kick, Magnet Rise, '
                     'Sky Drop, Splash, and Telekinesis are prevented from '
                     'being used by all active Pokemon. Ground-type attacks, '
                     'Spikes, Toxic Spikes, Sticky Web, and the Arena Trap '
                     'Ability can affect Flying types or Pokemon with the '
                     'Levitate Ability. Fails if this move is already in '
                     'effect.',
             'effect': {'duration': 5,
                        'durationCallback': gravity.durationCallback,
                        'onBeforeMove': gravity.onBeforeMove,
                        'onBeforeMovePriority': 6,
                        'onDisableMove': gravity.onDisableMove,
                        'onEnd': gravity.onEnd,
                        'onModifyAccuracy': gravity.onModifyAccuracy,
                        'onResidualOrder': 22,
                        'onStart': gravity.onStart},
             'flags': {'nonsky': 1},
             'id': 'gravity',
             'name': 'Gravity',
             'num': 356,
             'pp': 5,
             'priority': 0,
             'pseudoWeather': 'gravity',
             'secondary': {},
             'shortDesc': 'For 5 turns, negates all Ground immunities.',
             'target': 'all',
             'type': 'Psychic',
             'zMoveBoost': {'spa': 1}},
 'growl': {'accuracy': 100,
           'basePower': 0,
           'boosts': {'atk': -1},
           'category': 'Status',
           'contestType': 'Cute',
           'desc': "Lowers the target's Attack by 1 stage.",
           'flags': {'authentic': 1,
                     'mirror': 1,
                     'protect': 1,
                     'reflectable': 1,
                     'sound': 1},
           'id': 'growl',
           'name': 'Growl',
           'num': 45,
           'pp': 40,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Lowers the foe(s) Attack by 1.',
           'target': 'allAdjacentFoes',
           'type': 'Normal',
           'zMoveBoost': {'def': 1}},
 'growth': {'accuracy': True,
            'basePower': 0,
            'boosts': {'atk': 1, 'spa': 1},
            'category': 'Status',
            'contestType': 'Beautiful',
            'desc': "Raises the user's Attack and Special Attack by 1 stage. "
                    "If the weather is Sunny Day, raises the user's Attack and "
                    'Special Attack by 2 stages.',
            'flags': {'snatch': 1},
            'id': 'growth',
            'name': 'Growth',
            'num': 74,
            'onModifyMove': growth.onModifyMove,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': "Raises user's Attack and Sp. Atk by 1; 2 in Sun.",
            'target': 'self',
            'type': 'Normal',
            'zMoveBoost': {'spa': 1}},
 'grudge': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Tough',
            'desc': "Until the user's next turn, if an opposing Pokemon's "
                    'attack knocks the user out, that move loses all its '
                    'remaining PP.',
            'effect': {'onBeforeMove': grudge.onBeforeMove,
                       'onBeforeMovePriority': 100,
                       'onFaint': grudge.onFaint,
                       'onStart': grudge.onStart},
            'flags': {'authentic': 1},
            'id': 'grudge',
            'name': 'Grudge',
            'num': 288,
            'pp': 5,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'If the user faints, the attack used loses all its '
                         'PP.',
            'target': 'self',
            'type': 'Ghost',
            'volatileStatus': 'grudge',
            'zMoveEffect': 'redirect'},
 'guardianofalola': {'accuracy': True,
                     'basePower': 0,
                     'category': 'Special',
                     'contestType': 'Tough',
                     'damageCallback': guardianofalola.damageCallback,
                     'desc': 'Deals damage to the target equal to 3/4 of its '
                             'current HP, rounded down, but not less than 1 '
                             'HP.',
                     'flags': {},
                     'id': 'guardianofalola',
                     'isZ': 'tapuniumz',
                     'name': 'Guardian of Alola',
                     'num': 698,
                     'pp': 1,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "Does damage equal to 3/4 target's current "
                                  'HP.',
                     'target': 'normal',
                     'type': 'Fairy'},
 'guardsplit': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'The user and the target have their Defense and '
                        'Special Defense stats set to be equal to the average '
                        "of the user and the target's Defense and Special "
                        'Defense stats, respectively, rounded down. Stat stage '
                        'changes are unaffected.',
                'flags': {'mystery': 1, 'protect': 1},
                'id': 'guardsplit',
                'name': 'Guard Split',
                'num': 470,
                'onHit': guardsplit.onHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Averages Defense and Sp. Def stats with target.',
                'target': 'normal',
                'type': 'Psychic',
                'zMoveBoost': {'spe': 1}},
 'guardswap': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The user swaps its Defense and Special Defense stat '
                       'stage changes with the target.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'mystery': 1,
                         'protect': 1},
               'id': 'guardswap',
               'name': 'Guard Swap',
               'num': 385,
               'onHit': guardswap.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Swaps Defense and Sp. Def changes with target.',
               'target': 'normal',
               'type': 'Psychic',
               'zMoveBoost': {'spe': 1}},
 'guillotine': {'accuracy': 30,
                'basePower': 0,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': "Deals damage to the target equal to the target's "
                        'maximum HP. Ignores accuracy and evasiveness '
                        "modifiers. This attack's accuracy is equal to (user's "
                        "level - target's level + 30)%, and fails if the "
                        'target is at a higher level. Pokemon with the Sturdy '
                        'Ability are immune.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'guillotine',
                'name': 'Guillotine',
                'num': 12,
                'ohko': True,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'OHKOs the target. Fails if user is a lower '
                             'level.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 180},
 'gunkshot': {'accuracy': 80,
              'basePower': 120,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Has a 30% chance to poison the target.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'gunkshot',
              'isViable': True,
              'name': 'Gunk Shot',
              'num': 441,
              'pp': 5,
              'priority': 0,
              'secondary': {'chance': 30, 'status': 'psn'},
              'shortDesc': '30% chance to poison the target.',
              'target': 'normal',
              'type': 'Poison',
              'zMovePower': 190},
 'gust': {'accuracy': 100,
          'basePower': 40,
          'category': 'Special',
          'contestType': 'Clever',
          'desc': 'Power doubles if the target is using Bounce, Fly, or Sky '
                  'Drop, or is under the effect of Sky Drop.',
          'flags': {'distance': 1, 'mirror': 1, 'protect': 1},
          'id': 'gust',
          'name': 'Gust',
          'num': 16,
          'pp': 35,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Power doubles during Bounce, Fly, and Sky Drop.',
          'target': 'any',
          'type': 'Flying',
          'zMovePower': 100},
 'gyroball': {'accuracy': 100,
              'basePower': 0,
              'basePowerCallback': gyroball.basePowerCallback,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': "Power is equal to (25 * target's current Speed / user's "
                      'current Speed) + 1, rounded down, but not more than '
                      "150. If the user's current Speed is 0, this move's "
                      'power is 1.',
              'flags': {'bullet': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'gyroball',
              'isViable': True,
              'name': 'Gyro Ball',
              'num': 360,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'More power the slower the user than the target.',
              'target': 'normal',
              'type': 'Steel',
              'zMovePower': 160},
 'hail': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Beautiful',
          'desc': 'For 5 turns, the weather becomes Hail. At the end of each '
                  'turn except the last, all active Pokemon lose 1/16 of their '
                  'maximum HP, rounded down, unless they are an Ice type or '
                  'have the Ice Body, Magic Guard, Overcoat, or Snow Cloak '
                  'Abilities. Lasts for 8 turns if the user is holding Icy '
                  'Rock. Fails if the current weather is Hail.',
          'flags': {},
          'id': 'hail',
          'name': 'Hail',
          'num': 258,
          'pp': 10,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'For 5 turns, hail crashes down.',
          'target': 'all',
          'type': 'Ice',
          'weather': 'hail',
          'zMoveBoost': {'spe': 1}},
 'hammerarm': {'accuracy': 90,
               'basePower': 100,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "Lowers the user's Speed by 1 stage.",
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
               'id': 'hammerarm',
               'isViable': True,
               'name': 'Hammer Arm',
               'num': 359,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'self': {'boosts': {'spe': -1}},
               'shortDesc': "Lowers the user's Speed by 1.",
               'target': 'normal',
               'type': 'Fighting',
               'zMovePower': 180},
 'happyhour': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'flags': {},
               'id': 'happyhour',
               'name': 'Happy Hour',
               'num': 603,
               'onTryHit': happyhour.onTryHit,
               'pp': 30,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No competitive use.',
               'target': 'allySide',
               'type': 'Normal',
               'zMoveBoost': {'atk': 1,
                              'def': 1,
                              'spa': 1,
                              'spd': 1,
                              'spe': 1}},
 'harden': {'accuracy': True,
            'basePower': 0,
            'boosts': {'def': 1},
            'category': 'Status',
            'contestType': 'Tough',
            'desc': "Raises the user's Defense by 1 stage.",
            'flags': {'snatch': 1},
            'id': 'harden',
            'name': 'Harden',
            'num': 106,
            'pp': 30,
            'priority': 0,
            'secondary': {},
            'shortDesc': "Raises the user's Defense by 1.",
            'target': 'self',
            'type': 'Normal',
            'zMoveBoost': {'def': 1}},
 'haze': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Beautiful',
          'desc': 'Resets the stat stages of all active Pokemon to 0.',
          'flags': {'authentic': 1},
          'id': 'haze',
          'isViable': True,
          'name': 'Haze',
          'num': 114,
          'onHitField': haze.onHitField,
          'pp': 30,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Eliminates all stat changes.',
          'target': 'all',
          'type': 'Ice',
          'zMoveEffect': 'heal'},
 'headbutt': {'accuracy': 100,
              'basePower': 70,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Has a 30% chance to flinch the target.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'headbutt',
              'name': 'Headbutt',
              'num': 29,
              'pp': 15,
              'priority': 0,
              'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
              'shortDesc': '30% chance to flinch the target.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 140},
 'headcharge': {'accuracy': 100,
                'basePower': 120,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'If the target lost HP, the user takes recoil damage '
                        'equal to 1/4 the HP lost by the target, rounded half '
                        'up, but not less than 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'headcharge',
                'isViable': True,
                'name': 'Head Charge',
                'num': 543,
                'pp': 15,
                'priority': 0,
                'recoil': {'0': 1, '1': 4},
                'secondary': {},
                'shortDesc': 'Has 1/4 recoil.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 190},
 'headsmash': {'accuracy': 80,
               'basePower': 150,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'If the target lost HP, the user takes recoil damage '
                       'equal to 1/2 the HP lost by the target, rounded half '
                       'up, but not less than 1 HP.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'headsmash',
               'isViable': True,
               'name': 'Head Smash',
               'num': 457,
               'pp': 5,
               'priority': 0,
               'recoil': {'0': 1, '1': 2},
               'secondary': {},
               'shortDesc': 'Has 1/2 recoil.',
               'target': 'normal',
               'type': 'Rock',
               'zMovePower': 200},
 'healbell': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': "Every Pokemon in the user's party is cured of its major "
                      'status condition. Active Pokemon with the Soundproof '
                      'Ability are not cured.',
              'flags': {'authentic': 1, 'distance': 1, 'snatch': 1, 'sound': 1},
              'id': 'healbell',
              'isViable': True,
              'name': 'Heal Bell',
              'num': 215,
              'onHit': healbell.onHit,
              'pp': 5,
              'priority': 0,
              'shortDesc': "Cures the user's party of all status conditions.",
              'target': 'allyTeam',
              'type': 'Normal',
              'zMoveEffect': 'heal'},
 'healblock': {'accuracy': 100,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'For 5 turns, the target is prevented from restoring '
                       'any HP as long as it remains active. During the '
                       'effect, healing and draining moves are unusable, and '
                       'Abilities and items that grant healing will not heal '
                       'the user. If an affected Pokemon uses Baton Pass, the '
                       'replacement will remain unable to restore its HP. Pain '
                       'Split and the Regenerator Ability are unaffected.',
               'effect': {'duration': 5,
                          'durationCallback': healblock.durationCallback,
                          'onBeforeMove': healblock.onBeforeMove,
                          'onBeforeMovePriority': 6,
                          'onDisableMove': healblock.onDisableMove,
                          'onEnd': healblock.onEnd,
                          'onResidualOrder': 17,
                          'onStart': healblock.onStart,
                          'onTryHeal': healblock.onTryHeal},
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'healblock',
               'name': 'Heal Block',
               'num': 377,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'For 5 turns, the foe(s) is prevented from '
                            'healing.',
               'target': 'allAdjacentFoes',
               'type': 'Psychic',
               'volatileStatus': 'healblock',
               'zMoveBoost': {'spa': 2}},
 'healingwish': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': 'The user faints and the Pokemon brought out to '
                         'replace it has its HP fully restored along with '
                         'having any major status condition cured. The new '
                         'Pokemon is sent out at the end of the turn, and the '
                         'healing happens before hazards take effect. Fails if '
                         'the user is the last unfainted Pokemon in its party.',
                 'effect': {'duration': 2,
                            'onRestart': healingwish.onRestart,
                            'onStart': healingwish.onStart,
                            'onSwitchIn': healingwish.onSwitchIn,
                            'onSwitchInPriority': 1},
                 'flags': {'heal': 1, 'snatch': 1},
                 'id': 'healingwish',
                 'isViable': True,
                 'name': 'Healing Wish',
                 'num': 361,
                 'onTryHit': healingwish.onTryHit,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'selfdestruct': 'ifHit',
                 'shortDesc': 'User faints. Replacement is fully healed.',
                 'sideCondition': 'healingwish',
                 'target': 'self',
                 'type': 'Psychic'},
 'healorder': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The user restores 1/2 of its maximum HP, rounded half '
                       'up.',
               'flags': {'heal': 1, 'snatch': 1},
               'heal': {'0': 1, '1': 2},
               'id': 'healorder',
               'isViable': True,
               'name': 'Heal Order',
               'num': 456,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Heals the user by 50% of its max HP.',
               'target': 'self',
               'type': 'Bug',
               'zMoveEffect': 'clearnegativeboost'},
 'healpulse': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'The target restores 1/2 of its maximum HP, rounded '
                       'half up. If the user has the Mega Launcher Ability, '
                       'the target instead restores 3/4 of its maximum HP, '
                       'rounded half down.',
               'flags': {'distance': 1,
                         'heal': 1,
                         'mystery': 1,
                         'protect': 1,
                         'pulse': 1,
                         'reflectable': 1},
               'id': 'healpulse',
               'name': 'Heal Pulse',
               'num': 505,
               'onHit': healpulse.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Heals the target by 50% of its max HP.',
               'target': 'any',
               'type': 'Psychic',
               'zMoveEffect': 'clearnegativeboost'},
 'heartstamp': {'accuracy': 100,
                'basePower': 60,
                'category': 'Physical',
                'contestType': 'Cute',
                'desc': 'Has a 30% chance to flinch the target.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'heartstamp',
                'name': 'Heart Stamp',
                'num': 531,
                'pp': 25,
                'priority': 0,
                'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
                'shortDesc': '30% chance to flinch the target.',
                'target': 'normal',
                'type': 'Psychic',
                'zMovePower': 120},
 'heartswap': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The user swaps all its stat stage changes with the '
                       'target.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'mystery': 1,
                         'protect': 1},
               'id': 'heartswap',
               'name': 'Heart Swap',
               'num': 391,
               'onHit': heartswap.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Swaps all stat changes with target.',
               'target': 'normal',
               'type': 'Psychic',
               'zMoveEffect': 'crit2'},
 'heatcrash': {'accuracy': 100,
               'basePower': 0,
               'basePowerCallback': heatcrash.basePowerCallback,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "The power of this move depends on (user's weight / "
                       "target's weight), rounded down. Power is equal to 120 "
                       'if the result is 5 or more, 100 if 4, 80 if 3, 60 if '
                       '2, and 40 if 1 or less. Damage doubles and no accuracy '
                       'check is done if the target has used Minimize while '
                       'active.',
               'flags': {'contact': 1, 'mirror': 1, 'nonsky': 1, 'protect': 1},
               'id': 'heatcrash',
               'name': 'Heat Crash',
               'num': 535,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'More power the heavier the user than the target.',
               'target': 'normal',
               'type': 'Fire',
               'zMovePower': 160},
 'heatwave': {'accuracy': 90,
              'basePower': 95,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': 'Has a 10% chance to burn the target.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'heatwave',
              'isViable': True,
              'name': 'Heat Wave',
              'num': 257,
              'pp': 10,
              'priority': 0,
              'secondary': {'chance': 10, 'status': 'brn'},
              'shortDesc': '10% chance to burn the foe(s).',
              'target': 'allAdjacentFoes',
              'type': 'Fire',
              'zMovePower': 175},
 'heavyslam': {'accuracy': 100,
               'basePower': 0,
               'basePowerCallback': heavyslam.basePowerCallback,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "The power of this move depends on (user's weight / "
                       "target's weight), rounded down. Power is equal to 120 "
                       'if the result is 5 or more, 100 if 4, 80 if 3, 60 if '
                       '2, and 40 if 1 or less. Damage doubles and no accuracy '
                       'check is done if the target has used Minimize while '
                       'active.',
               'flags': {'contact': 1, 'mirror': 1, 'nonsky': 1, 'protect': 1},
               'id': 'heavyslam',
               'isViable': True,
               'name': 'Heavy Slam',
               'num': 484,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'More power the heavier the user than the target.',
               'target': 'normal',
               'type': 'Steel',
               'zMovePower': 160},
 'helpinghand': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "The power of the target's attack this turn is "
                         'multiplied by 1.5 (this effect is stackable). Fails '
                         'if there is no ally adjacent to the user or if the '
                         'ally already moved this turn, but does not fail if '
                         'the ally is using a two-turn move.',
                 'effect': {'duration': 1,
                            'onBasePower': helpinghand.onBasePower,
                            'onBasePowerPriority': 3,
                            'onRestart': helpinghand.onRestart,
                            'onStart': helpinghand.onStart},
                 'flags': {'authentic': 1},
                 'id': 'helpinghand',
                 'name': 'Helping Hand',
                 'num': 270,
                 'onTryHit': helpinghand.onTryHit,
                 'pp': 20,
                 'priority': 5,
                 'secondary': {},
                 'shortDesc': "One adjacent ally's move power is 1.5x this "
                              'turn.',
                 'target': 'adjacentAlly',
                 'type': 'Normal',
                 'volatileStatus': 'helpinghand',
                 'zMoveEffect': 'clearnegativeboost'},
 'hex': {'accuracy': 100,
         'basePower': 65,
         'basePowerCallback': hex.basePowerCallback,
         'category': 'Special',
         'contestType': 'Clever',
         'desc': 'Power doubles if the target has a major status condition.',
         'flags': {'mirror': 1, 'protect': 1},
         'id': 'hex',
         'isViable': True,
         'name': 'Hex',
         'num': 506,
         'pp': 10,
         'priority': 0,
         'secondary': {},
         'shortDesc': 'Power doubles if the target has a status ailment.',
         'target': 'normal',
         'type': 'Ghost',
         'zMovePower': 160},
 'hiddenpower': {'accuracy': 100,
                 'basePower': 60,
                 'category': 'Special',
                 'contestType': 'Clever',
                 'desc': "This move's type depends on the user's individual "
                         'values (IVs), and can be any type but Fairy and '
                         'Normal.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'hiddenpower',
                 'name': 'Hidden Power',
                 'num': 237,
                 'onModifyMove': hiddenpower.onModifyMove,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Varies in type based on the user's IVs.",
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 120},
 'hiddenpowerbug': {'accuracy': 100,
                    'basePower': 60,
                    'category': 'Special',
                    'contestType': 'Clever',
                    'desc': '',
                    'flags': {'mirror': 1, 'protect': 1},
                    'id': 'hiddenpower',
                    'name': 'Hidden Power Bug',
                    'num': 237,
                    'pp': 15,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': '',
                    'target': 'normal',
                    'type': 'Bug'},
 'hiddenpowerdark': {'accuracy': 100,
                     'basePower': 60,
                     'category': 'Special',
                     'contestType': 'Clever',
                     'desc': '',
                     'flags': {'mirror': 1, 'protect': 1},
                     'id': 'hiddenpower',
                     'name': 'Hidden Power Dark',
                     'num': 237,
                     'pp': 15,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': '',
                     'target': 'normal',
                     'type': 'Dark'},
 'hiddenpowerdragon': {'accuracy': 100,
                       'basePower': 60,
                       'category': 'Special',
                       'contestType': 'Clever',
                       'desc': '',
                       'flags': {'mirror': 1, 'protect': 1},
                       'id': 'hiddenpower',
                       'name': 'Hidden Power Dragon',
                       'num': 237,
                       'pp': 15,
                       'priority': 0,
                       'secondary': {},
                       'shortDesc': '',
                       'target': 'normal',
                       'type': 'Dragon'},
 'hiddenpowerelectric': {'accuracy': 100,
                         'basePower': 60,
                         'category': 'Special',
                         'contestType': 'Clever',
                         'desc': '',
                         'flags': {'mirror': 1, 'protect': 1},
                         'id': 'hiddenpower',
                         'isViable': True,
                         'name': 'Hidden Power Electric',
                         'num': 237,
                         'pp': 15,
                         'priority': 0,
                         'secondary': {},
                         'shortDesc': '',
                         'target': 'normal',
                         'type': 'Electric'},
 'hiddenpowerfighting': {'accuracy': 100,
                         'basePower': 60,
                         'category': 'Special',
                         'contestType': 'Clever',
                         'desc': '',
                         'flags': {'mirror': 1, 'protect': 1},
                         'id': 'hiddenpower',
                         'isViable': True,
                         'name': 'Hidden Power Fighting',
                         'num': 237,
                         'pp': 15,
                         'priority': 0,
                         'secondary': {},
                         'shortDesc': '',
                         'target': 'normal',
                         'type': 'Fighting'},
 'hiddenpowerfire': {'accuracy': 100,
                     'basePower': 60,
                     'category': 'Special',
                     'contestType': 'Clever',
                     'desc': '',
                     'flags': {'mirror': 1, 'protect': 1},
                     'id': 'hiddenpower',
                     'isViable': True,
                     'name': 'Hidden Power Fire',
                     'num': 237,
                     'pp': 15,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': '',
                     'target': 'normal',
                     'type': 'Fire'},
 'hiddenpowerflying': {'accuracy': 100,
                       'basePower': 60,
                       'category': 'Special',
                       'contestType': 'Clever',
                       'desc': '',
                       'flags': {'mirror': 1, 'protect': 1},
                       'id': 'hiddenpower',
                       'name': 'Hidden Power Flying',
                       'num': 237,
                       'pp': 15,
                       'priority': 0,
                       'secondary': {},
                       'shortDesc': '',
                       'target': 'normal',
                       'type': 'Flying'},
 'hiddenpowerghost': {'accuracy': 100,
                      'basePower': 60,
                      'category': 'Special',
                      'contestType': 'Clever',
                      'desc': '',
                      'flags': {'mirror': 1, 'protect': 1},
                      'id': 'hiddenpower',
                      'name': 'Hidden Power Ghost',
                      'num': 237,
                      'pp': 15,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': '',
                      'target': 'normal',
                      'type': 'Ghost'},
 'hiddenpowergrass': {'accuracy': 100,
                      'basePower': 60,
                      'category': 'Special',
                      'contestType': 'Clever',
                      'desc': '',
                      'flags': {'mirror': 1, 'protect': 1},
                      'id': 'hiddenpower',
                      'isViable': True,
                      'name': 'Hidden Power Grass',
                      'num': 237,
                      'pp': 15,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': '',
                      'target': 'normal',
                      'type': 'Grass'},
 'hiddenpowerground': {'accuracy': 100,
                       'basePower': 60,
                       'category': 'Special',
                       'contestType': 'Clever',
                       'desc': '',
                       'flags': {'mirror': 1, 'protect': 1},
                       'id': 'hiddenpower',
                       'name': 'Hidden Power Ground',
                       'num': 237,
                       'pp': 15,
                       'priority': 0,
                       'secondary': {},
                       'shortDesc': '',
                       'target': 'normal',
                       'type': 'Ground'},
 'hiddenpowerice': {'accuracy': 100,
                    'basePower': 60,
                    'category': 'Special',
                    'contestType': 'Clever',
                    'desc': '',
                    'flags': {'mirror': 1, 'protect': 1},
                    'id': 'hiddenpower',
                    'isViable': True,
                    'name': 'Hidden Power Ice',
                    'num': 237,
                    'pp': 15,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': '',
                    'target': 'normal',
                    'type': 'Ice'},
 'hiddenpowerpoison': {'accuracy': 100,
                       'basePower': 60,
                       'category': 'Special',
                       'contestType': 'Clever',
                       'desc': '',
                       'flags': {'mirror': 1, 'protect': 1},
                       'id': 'hiddenpower',
                       'name': 'Hidden Power Poison',
                       'num': 237,
                       'pp': 15,
                       'priority': 0,
                       'secondary': {},
                       'shortDesc': '',
                       'target': 'normal',
                       'type': 'Poison'},
 'hiddenpowerpsychic': {'accuracy': 100,
                        'basePower': 60,
                        'category': 'Special',
                        'contestType': 'Clever',
                        'desc': '',
                        'flags': {'mirror': 1, 'protect': 1},
                        'id': 'hiddenpower',
                        'name': 'Hidden Power Psychic',
                        'num': 237,
                        'pp': 15,
                        'priority': 0,
                        'secondary': {},
                        'shortDesc': '',
                        'target': 'normal',
                        'type': 'Psychic'},
 'hiddenpowerrock': {'accuracy': 100,
                     'basePower': 60,
                     'category': 'Special',
                     'contestType': 'Clever',
                     'desc': '',
                     'flags': {'mirror': 1, 'protect': 1},
                     'id': 'hiddenpower',
                     'name': 'Hidden Power Rock',
                     'num': 237,
                     'pp': 15,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': '',
                     'target': 'normal',
                     'type': 'Rock'},
 'hiddenpowersteel': {'accuracy': 100,
                      'basePower': 60,
                      'category': 'Special',
                      'contestType': 'Clever',
                      'desc': '',
                      'flags': {'mirror': 1, 'protect': 1},
                      'id': 'hiddenpower',
                      'name': 'Hidden Power Steel',
                      'num': 237,
                      'pp': 15,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': '',
                      'target': 'normal',
                      'type': 'Steel'},
 'hiddenpowerwater': {'accuracy': 100,
                      'basePower': 60,
                      'category': 'Special',
                      'contestType': 'Clever',
                      'desc': '',
                      'flags': {'mirror': 1, 'protect': 1},
                      'id': 'hiddenpower',
                      'name': 'Hidden Power Water',
                      'num': 237,
                      'pp': 15,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': '',
                      'target': 'normal',
                      'type': 'Water'},
 'highhorsepower': {'accuracy': 95,
                    'basePower': 95,
                    'category': 'Physical',
                    'contestType': 'Tough',
                    'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                    'id': 'highhorsepower',
                    'name': 'High Horsepower',
                    'num': 667,
                    'pp': 10,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': 'No additional effect.',
                    'target': 'normal',
                    'type': 'Ground',
                    'zMovePower': 175},
 'highjumpkick': {'accuracy': 90,
                  'basePower': 130,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'desc': 'If this attack is not successful, the user loses '
                          'half of its maximum HP, rounded down, as crash '
                          'damage. Pokemon with the Magic Guard Ability are '
                          'unaffected by crash damage.',
                  'flags': {'contact': 1,
                            'gravity': 1,
                            'mirror': 1,
                            'protect': 1},
                  'hasCustomRecoil': True,
                  'id': 'highjumpkick',
                  'isViable': True,
                  'name': 'High Jump Kick',
                  'num': 136,
                  'onMoveFail': highjumpkick.onMoveFail,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'User is hurt by 50% of its max HP if it '
                               'misses.',
                  'target': 'normal',
                  'type': 'Fighting',
                  'zMovePower': 195},
 'holdback': {'accuracy': 100,
              'basePower': 40,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': 'Leaves the target with at least 1 HP.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'holdback',
              'name': 'Hold Back',
              'noFaint': True,
              'num': 610,
              'pp': 40,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Always leaves the target with at least 1 HP.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 100},
 'holdhands': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': 'No competitive use. Fails if there is no ally adjacent '
                       'to the user.',
               'flags': {'authentic': 1},
               'id': 'holdhands',
               'name': 'Hold Hands',
               'num': 615,
               'pp': 40,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No competitive use.',
               'target': 'adjacentAlly',
               'type': 'Normal',
               'zMoveBoost': {'atk': 1,
                              'def': 1,
                              'spa': 1,
                              'spd': 1,
                              'spe': 1}},
 'honeclaws': {'accuracy': True,
               'basePower': 0,
               'boosts': {'accuracy': 1, 'atk': 1},
               'category': 'Status',
               'contestType': 'Cute',
               'desc': "Raises the user's Attack and accuracy by 1 stage.",
               'flags': {'snatch': 1},
               'id': 'honeclaws',
               'isViable': True,
               'name': 'Hone Claws',
               'num': 468,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Raises the user's Attack and accuracy by 1.",
               'target': 'self',
               'type': 'Dark',
               'zMoveBoost': {'atk': 1}},
 'hornattack': {'accuracy': 100,
                'basePower': 65,
                'category': 'Physical',
                'contestType': 'Cool',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'hornattack',
                'name': 'Horn Attack',
                'num': 30,
                'pp': 25,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'No additional effect.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 120},
 'horndrill': {'accuracy': 30,
               'basePower': 0,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': "Deals damage to the target equal to the target's "
                       'maximum HP. Ignores accuracy and evasiveness '
                       "modifiers. This attack's accuracy is equal to (user's "
                       "level - target's level + 30)%, and fails if the target "
                       'is at a higher level. Pokemon with the Sturdy Ability '
                       'are immune.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'horndrill',
               'name': 'Horn Drill',
               'num': 32,
               'ohko': True,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'OHKOs the target. Fails if user is a lower level.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 180},
 'hornleech': {'accuracy': 100,
               'basePower': 75,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'The user recovers 1/2 the HP lost by the target, '
                       'rounded half up. If Big Root is held by the user, the '
                       'HP recovered is 1.3x normal, rounded half down.',
               'drain': {'0': 1, '1': 2},
               'flags': {'contact': 1, 'heal': 1, 'mirror': 1, 'protect': 1},
               'id': 'hornleech',
               'isViable': True,
               'name': 'Horn Leech',
               'num': 532,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User recovers 50% of the damage dealt.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 140},
 'howl': {'accuracy': True,
          'basePower': 0,
          'boosts': {'atk': 1},
          'category': 'Status',
          'contestType': 'Cool',
          'desc': "Raises the user's Attack by 1 stage.",
          'flags': {'snatch': 1},
          'id': 'howl',
          'name': 'Howl',
          'num': 336,
          'pp': 40,
          'priority': 0,
          'secondary': {},
          'shortDesc': "Raises the user's Attack by 1.",
          'target': 'self',
          'type': 'Normal',
          'zMoveBoost': {'atk': 1}},
 'hurricane': {'accuracy': 70,
               'basePower': 110,
               'category': 'Special',
               'contestType': 'Tough',
               'desc': 'Has a 30% chance to confuse the target. This move can '
                       'hit a target using Bounce, Fly, or Sky Drop, or is '
                       'under the effect of Sky Drop. If the weather is '
                       'Primordial Sea or Rain Dance, this move does not check '
                       'accuracy. If the weather is Desolate Land or Sunny '
                       "Day, this move's accuracy is 50%.",
               'flags': {'distance': 1, 'mirror': 1, 'protect': 1},
               'id': 'hurricane',
               'isViable': True,
               'name': 'Hurricane',
               'num': 542,
               'onModifyMove': hurricane.onModifyMove,
               'pp': 10,
               'priority': 0,
               'secondary': {'chance': 30, 'volatileStatus': 'confusion'},
               'shortDesc': "30% chance to confuse target. Can't miss in rain.",
               'target': 'any',
               'type': 'Flying',
               'zMovePower': 185},
 'hydrocannon': {'accuracy': 90,
                 'basePower': 150,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'If this move is successful, the user must recharge '
                         'on the following turn and cannot select a move.',
                 'flags': {'mirror': 1, 'protect': 1, 'recharge': 1},
                 'id': 'hydrocannon',
                 'name': 'Hydro Cannon',
                 'num': 308,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'volatileStatus': 'mustrecharge'},
                 'shortDesc': 'User cannot move next turn.',
                 'target': 'normal',
                 'type': 'Water',
                 'zMovePower': 200},
 'hydropump': {'accuracy': 80,
               'basePower': 110,
               'category': 'Special',
               'contestType': 'Beautiful',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'hydropump',
               'isViable': True,
               'name': 'Hydro Pump',
               'num': 56,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect.',
               'target': 'normal',
               'type': 'Water',
               'zMovePower': 185},
 'hydrovortex': {'accuracy': True,
                 'basePower': 1,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'flags': {},
                 'id': 'hydrovortex',
                 'isViable': True,
                 'isZ': 'wateriumz',
                 'name': 'Hydro Vortex',
                 'num': 642,
                 'pp': 1,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Power is equal to the base move's Z-Power.",
                 'target': 'normal',
                 'type': 'Water'},
 'hyperbeam': {'accuracy': 90,
               'basePower': 150,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': 'If this move is successful, the user must recharge on '
                       'the following turn and cannot select a move.',
               'flags': {'mirror': 1, 'protect': 1, 'recharge': 1},
               'id': 'hyperbeam',
               'name': 'Hyper Beam',
               'num': 63,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'self': {'volatileStatus': 'mustrecharge'},
               'shortDesc': 'User cannot move next turn.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 200},
 'hyperfang': {'accuracy': 90,
               'basePower': 80,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': 'Has a 10% chance to flinch the target.',
               'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'hyperfang',
               'name': 'Hyper Fang',
               'num': 158,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 10, 'volatileStatus': 'flinch'},
               'shortDesc': '10% chance to flinch the target.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 160},
 'hyperspacefury': {'accuracy': True,
                    'basePower': 100,
                    'breaksProtect': True,
                    'category': 'Physical',
                    'contestType': 'Tough',
                    'desc': "Lowers the user's Defense by 1 stage. This move "
                            "cannot be used successfully unless the user's "
                            'current form, while considering Transform, is '
                            'Hoopa Unbound. If this move is successful, it '
                            "breaks through the target's Baneful Bunker, "
                            "Detect, King's Shield, Protect, or Spiky Shield "
                            'for this turn, allowing other Pokemon to attack '
                            "the target normally. If the target's side is "
                            'protected by Crafty Shield, Mat Block, Quick '
                            'Guard, or Wide Guard, that protection is also '
                            'broken for this turn and other Pokemon may attack '
                            "the target's side normally.",
                    'flags': {'authentic': 1, 'mirror': 1},
                    'id': 'hyperspacefury',
                    'isViable': True,
                    'name': 'Hyperspace Fury',
                    'num': 621,
                    'onTry': hyperspacefury.onTry,
                    'pp': 5,
                    'priority': 0,
                    'secondary': {},
                    'self': {'boosts': {'def': -1}},
                    'shortDesc': "Hoopa-U: Lowers user's Def by 1; breaks "
                                 'protect.',
                    'target': 'normal',
                    'type': 'Dark',
                    'zMovePower': 180},
 'hyperspacehole': {'accuracy': True,
                    'basePower': 80,
                    'breaksProtect': True,
                    'category': 'Special',
                    'contestType': 'Clever',
                    'desc': 'If this move is successful, it breaks through the '
                            "target's Baneful Bunker, Detect, King's Shield, "
                            'Protect, or Spiky Shield for this turn, allowing '
                            'other Pokemon to attack the target normally. If '
                            "the target's side is protected by Crafty Shield, "
                            'Mat Block, Quick Guard, or Wide Guard, that '
                            'protection is also broken for this turn and other '
                            "Pokemon may attack the target's side normally.",
                    'flags': {'authentic': 1, 'mirror': 1},
                    'id': 'hyperspacehole',
                    'name': 'Hyperspace Hole',
                    'num': 593,
                    'pp': 5,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': "Breaks the target's protection for this "
                                 'turn.',
                    'target': 'normal',
                    'type': 'Psychic',
                    'zMovePower': 160},
 'hypervoice': {'accuracy': 100,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Cool',
                'desc': 'No additional effect.',
                'flags': {'authentic': 1,
                          'mirror': 1,
                          'protect': 1,
                          'sound': 1},
                'id': 'hypervoice',
                'isViable': True,
                'name': 'Hyper Voice',
                'num': 304,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'No additional effect. Hits adjacent foes.',
                'target': 'allAdjacentFoes',
                'type': 'Normal',
                'zMovePower': 175},
 'hypnosis': {'accuracy': 60,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Clever',
              'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
              'id': 'hypnosis',
              'name': 'Hypnosis',
              'num': 95,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Causes the target to fall asleep.',
              'status': 'slp',
              'target': 'normal',
              'type': 'Psychic',
              'zMoveBoost': {'spe': 1}},
 'iceball': {'accuracy': 90,
             'basePower': 30,
             'basePowerCallback': iceball.basePowerCallback,
             'category': 'Physical',
             'contestType': 'Beautiful',
             'desc': 'If this move is successful, the user is locked into this '
                     'move and cannot make another move until it misses, 5 '
                     'turns have passed, or the attack cannot be used. Power '
                     'doubles with each successful hit of this move and '
                     'doubles again if Defense Curl was used previously by the '
                     'user. If this move is called by Sleep Talk, the move is '
                     'used for one turn. If this move hits an active Disguise '
                     'during the effect, the power multiplier is paused but '
                     'the turn counter is not, potentially allowing the '
                     "multiplier to be used on the user's next move after this "
                     'effect ends.',
             'effect': {'duration': 2,
                        'onLockMove': 'iceball',
                        'onResidual': iceball.onResidual,
                        'onRestart': iceball.onRestart,
                        'onStart': iceball.onStart},
             'flags': {'bullet': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'iceball',
             'name': 'Ice Ball',
             'num': 301,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Power doubles with each hit. Repeats for 5 turns.',
             'target': 'normal',
             'type': 'Ice',
             'zMovePower': 100},
 'icebeam': {'accuracy': 100,
             'basePower': 90,
             'category': 'Special',
             'contestType': 'Beautiful',
             'desc': 'Has a 10% chance to freeze the target.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'icebeam',
             'isViable': True,
             'name': 'Ice Beam',
             'num': 58,
             'pp': 10,
             'priority': 0,
             'secondary': {'chance': 10, 'status': 'frz'},
             'shortDesc': '10% chance to freeze the target.',
             'target': 'normal',
             'type': 'Ice',
             'zMovePower': 175},
 'iceburn': {'accuracy': 90,
             'basePower': 140,
             'category': 'Special',
             'contestType': 'Beautiful',
             'desc': 'Has a 30% chance to burn the target. This attack charges '
                     'on the first turn and executes on the second. If the '
                     'user is holding a Power Herb, the move completes in one '
                     'turn.',
             'flags': {'charge': 1, 'mirror': 1, 'protect': 1},
             'id': 'iceburn',
             'name': 'Ice Burn',
             'num': 554,
             'onTryMove': iceburn.onTryMove,
             'pp': 5,
             'priority': 0,
             'secondary': {'chance': 30, 'status': 'brn'},
             'shortDesc': 'Charges turn 1. Hits turn 2. 30% burn.',
             'target': 'normal',
             'type': 'Ice',
             'zMovePower': 200},
 'icefang': {'accuracy': 95,
             'basePower': 65,
             'category': 'Physical',
             'contestType': 'Cool',
             'desc': 'Has a 10% chance to freeze the target and a 10% chance '
                     'to flinch it.',
             'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'icefang',
             'isViable': True,
             'name': 'Ice Fang',
             'num': 423,
             'pp': 15,
             'priority': 0,
             'secondaries': {'0': {'chance': 10, 'status': 'frz'},
                             '1': {'chance': 10, 'volatileStatus': 'flinch'}},
             'shortDesc': '10% chance to freeze. 10% chance to flinch.',
             'target': 'normal',
             'type': 'Ice',
             'zMovePower': 120},
 'icehammer': {'accuracy': 90,
               'basePower': 100,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "Lowers the user's Speed by 1 stage.",
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
               'id': 'icehammer',
               'isViable': True,
               'name': 'Ice Hammer',
               'num': 665,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'self': {'boosts': {'spe': -1}},
               'shortDesc': "Lowers the user's Speed by 1.",
               'target': 'normal',
               'type': 'Ice',
               'zMovePower': 180},
 'icepunch': {'accuracy': 100,
              'basePower': 75,
              'category': 'Physical',
              'contestType': 'Beautiful',
              'desc': 'Has a 10% chance to freeze the target.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
              'id': 'icepunch',
              'isViable': True,
              'name': 'Ice Punch',
              'num': 8,
              'pp': 15,
              'priority': 0,
              'secondary': {'chance': 10, 'status': 'frz'},
              'shortDesc': '10% chance to freeze the target.',
              'target': 'normal',
              'type': 'Ice',
              'zMovePower': 140},
 'iceshard': {'accuracy': 100,
              'basePower': 40,
              'category': 'Physical',
              'contestType': 'Beautiful',
              'desc': 'No additional effect.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'iceshard',
              'isViable': True,
              'name': 'Ice Shard',
              'num': 420,
              'pp': 30,
              'priority': 1,
              'secondary': {},
              'shortDesc': 'Usually goes first.',
              'target': 'normal',
              'type': 'Ice',
              'zMovePower': 100},
 'iciclecrash': {'accuracy': 90,
                 'basePower': 85,
                 'category': 'Physical',
                 'contestType': 'Beautiful',
                 'desc': 'Has a 30% chance to flinch the target.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'iciclecrash',
                 'isViable': True,
                 'name': 'Icicle Crash',
                 'num': 556,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
                 'shortDesc': '30% chance to flinch the target.',
                 'target': 'normal',
                 'type': 'Ice',
                 'zMovePower': 160},
 'iciclespear': {'accuracy': 100,
                 'basePower': 25,
                 'category': 'Physical',
                 'contestType': 'Beautiful',
                 'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                         'or three times, and a 1/6 chance to hit four or five '
                         "times. If one of the hits breaks the target's "
                         'substitute, it will take damage for the remaining '
                         'hits. If the user has the Skill Link Ability, this '
                         'move will always hit five times.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'iciclespear',
                 'isViable': True,
                 'multihit': {'0': 2, '1': 5},
                 'name': 'Icicle Spear',
                 'num': 333,
                 'pp': 30,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Hits 2-5 times in one turn.',
                 'target': 'normal',
                 'type': 'Ice',
                 'zMovePower': 140},
 'icywind': {'accuracy': 95,
             'basePower': 55,
             'category': 'Special',
             'contestType': 'Beautiful',
             'desc': "Has a 100% chance to lower the target's Speed by 1 "
                     'stage.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'icywind',
             'name': 'Icy Wind',
             'num': 196,
             'pp': 15,
             'priority': 0,
             'secondary': {'boosts': {'spe': -1}, 'chance': 100},
             'shortDesc': '100% chance to lower the foe(s) Speed by 1.',
             'target': 'allAdjacentFoes',
             'type': 'Ice',
             'zMovePower': 100},
 'imprison': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Clever',
              'desc': 'The user prevents all opposing Pokemon from using any '
                      'moves that the user also knows as long as the user '
                      'remains active.',
              'effect': {'noCopy': True,
                         'onFoeBeforeMove': imprison.onFoeBeforeMove,
                         'onFoeBeforeMovePriority': 4,
                         'onFoeDisableMove': imprison.onFoeDisableMove,
                         'onStart': imprison.onStart},
              'flags': {'authentic': 1, 'snatch': 1},
              'id': 'imprison',
              'name': 'Imprison',
              'num': 286,
              'pp': 10,
              'pressureTarget': 'foeSide',
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No foe can use any move known by the user.',
              'target': 'self',
              'type': 'Psychic',
              'volatileStatus': 'imprison',
              'zMoveBoost': {'spd': 2}},
 'incinerate': {'accuracy': 100,
                'basePower': 60,
                'category': 'Special',
                'contestType': 'Tough',
                'desc': 'The target loses its held item if it is a Berry or a '
                        'Gem. This move cannot cause Pokemon with the Sticky '
                        'Hold Ability to lose their held item. Items lost to '
                        'this move cannot be regained with Recycle or the '
                        'Harvest Ability.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'incinerate',
                'name': 'Incinerate',
                'num': 510,
                'onHit': incinerate.onHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Destroys the foe(s) Berry/Gem.',
                'target': 'allAdjacentFoes',
                'type': 'Fire',
                'zMovePower': 120},
 'inferno': {'accuracy': 50,
             'basePower': 100,
             'category': 'Special',
             'contestType': 'Beautiful',
             'desc': 'Has a 100% chance to burn the target.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'inferno',
             'name': 'Inferno',
             'num': 517,
             'pp': 5,
             'priority': 0,
             'secondary': {'chance': 100, 'status': 'brn'},
             'shortDesc': '100% chance to burn the target.',
             'target': 'normal',
             'type': 'Fire',
             'zMovePower': 180},
 'infernooverdrive': {'accuracy': True,
                      'basePower': 1,
                      'category': 'Physical',
                      'contestType': 'Cool',
                      'flags': {},
                      'id': 'infernooverdrive',
                      'isViable': True,
                      'isZ': 'firiumz',
                      'name': 'Inferno Overdrive',
                      'num': 640,
                      'pp': 1,
                      'priority': 0,
                      'secondary': {},
                      'shortDesc': "Power is equal to the base move's Z-Power.",
                      'target': 'normal',
                      'type': 'Fire'},
 'infestation': {'accuracy': 100,
                 'basePower': 20,
                 'category': 'Special',
                 'contestType': 'Cute',
                 'desc': 'Prevents the target from switching for four or five '
                         'turns (seven turns if the user is holding Grip '
                         'Claw). Causes damage to the target equal to 1/8 of '
                         'its maximum HP (1/6 if the user is holding Binding '
                         'Band), rounded down, at the end of each turn during '
                         'effect. The target can still switch out if it is '
                         'holding Shed Shell or uses Baton Pass, Parting Shot, '
                         'U-turn, or Volt Switch. The effect ends if either '
                         'the user or the target leaves the field, or if the '
                         'target uses Rapid Spin or Substitute successfully. '
                         'This effect is not stackable or reset by using this '
                         'or another binding move.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'infestation',
                 'name': 'Infestation',
                 'num': 611,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Traps and damages the target for 4-5 turns.',
                 'target': 'normal',
                 'type': 'Bug',
                 'volatileStatus': 'partiallytrapped',
                 'zMovePower': 100},
 'ingrain': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': 'The user has 1/16 of its maximum HP restored at the end '
                     'of each turn, but it is prevented from switching out and '
                     'other Pokemon cannot force the user to switch out. The '
                     'user can still switch out if it uses Baton Pass, Parting '
                     'Shot, U-turn, or Volt Switch. If the user leaves the '
                     'field using Baton Pass, the replacement will remain '
                     'trapped and still receive the healing effect. During the '
                     'effect, the user can be hit normally by Ground-type '
                     'attacks and be affected by Spikes, Toxic Spikes, and '
                     'Sticky Web, even if the user is a Flying type or has the '
                     'Levitate Ability.',
             'effect': {'onDragOut': ingrain.onDragOut,
                        'onResidual': ingrain.onResidual,
                        'onResidualOrder': 7,
                        'onStart': ingrain.onStart,
                        'onTrapPokemon': ingrain.onTrapPokemon},
             'flags': {'nonsky': 1, 'snatch': 1},
             'id': 'ingrain',
             'name': 'Ingrain',
             'num': 275,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Traps/grounds user; heals 1/16 max HP per turn.',
             'target': 'self',
             'type': 'Grass',
             'volatileStatus': 'ingrain',
             'zMoveBoost': {'spd': 1}},
 'instruct': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Clever',
              'desc': 'The target immediately uses its last used move. Fails '
                      'if the target has not made a move, if the move has 0 '
                      'PP, if the target is preparing to use Beak Blast, Focus '
                      'Punch, or Shell Trap, or if the move is Assist, Beak '
                      'Blast, Belch, Bide, Copycat, Focus Punch, Ice Ball, '
                      "Instruct, King's Shield, Me First, Metronome, Mimic, "
                      'Mirror Move, Nature Power, Outrage, Petal Dance, '
                      'Rollout, Shell Trap, Sketch, Sleep Talk, Struggle, '
                      'Thrash, Transform, Uproar, any two-turn move, any '
                      'recharge move, or any Z-Move.',
              'flags': {'authentic': 1, 'mystery': 1, 'protect': 1},
              'id': 'instruct',
              'name': 'Instruct',
              'num': 689,
              'onHit': instruct.onHit,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'The target immediately uses its last used move.',
              'target': 'normal',
              'type': 'Psychic',
              'zMoveBoost': {'spa': 1}},
 'iondeluge': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'Causes Normal-type moves to become Electric type this '
                       'turn. The effect happens after other effects that '
                       "change a move's type.",
               'effect': {'duration': 1,
                          'onModifyMove': iondeluge.onModifyMove,
                          'onModifyMovePriority': -2,
                          'onStart': iondeluge.onStart},
               'flags': {},
               'id': 'iondeluge',
               'name': 'Ion Deluge',
               'num': 569,
               'pp': 25,
               'priority': 1,
               'pseudoWeather': 'iondeluge',
               'secondary': {},
               'shortDesc': 'Normal moves become Electric type this turn.',
               'target': 'all',
               'type': 'Electric',
               'zMoveBoost': {'spa': 1}},
 'irondefense': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'def': 2},
                 'category': 'Status',
                 'contestType': 'Tough',
                 'desc': "Raises the user's Defense by 2 stages.",
                 'flags': {'snatch': 1},
                 'id': 'irondefense',
                 'name': 'Iron Defense',
                 'num': 334,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Defense by 2.",
                 'target': 'self',
                 'type': 'Steel',
                 'zMoveEffect': 'clearnegativeboost'},
 'ironhead': {'accuracy': 100,
              'basePower': 80,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Has a 30% chance to flinch the target.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'ironhead',
              'isViable': True,
              'name': 'Iron Head',
              'num': 442,
              'pp': 15,
              'priority': 0,
              'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
              'shortDesc': '30% chance to flinch the target.',
              'target': 'normal',
              'type': 'Steel',
              'zMovePower': 160},
 'irontail': {'accuracy': 75,
              'basePower': 100,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': "Has a 30% chance to lower the target's Defense by 1 "
                      'stage.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'irontail',
              'name': 'Iron Tail',
              'num': 231,
              'pp': 15,
              'priority': 0,
              'secondary': {'boosts': {'def': -1}, 'chance': 30},
              'shortDesc': "30% chance to lower the target's Defense by 1.",
              'target': 'normal',
              'type': 'Steel',
              'zMovePower': 180},
 'judgment': {'accuracy': 100,
              'basePower': 100,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': "This move's type depends on the user's held Plate.",
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'judgment',
              'isViable': True,
              'name': 'Judgment',
              'num': 449,
              'onModifyMove': judgment.onModifyMove,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Type varies based on the held Plate.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 180},
 'jumpkick': {'accuracy': 95,
              'basePower': 100,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': 'If this attack is not successful, the user loses half '
                      'of its maximum HP, rounded down, as crash damage. '
                      'Pokemon with the Magic Guard Ability are unaffected by '
                      'crash damage.',
              'flags': {'contact': 1, 'gravity': 1, 'mirror': 1, 'protect': 1},
              'hasCustomRecoil': True,
              'id': 'jumpkick',
              'isViable': True,
              'name': 'Jump Kick',
              'num': 26,
              'onMoveFail': jumpkick.onMoveFail,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'User is hurt by 50% of its max HP if it misses.',
              'target': 'normal',
              'type': 'Fighting',
              'zMovePower': 180},
 'karatechop': {'accuracy': 100,
                'basePower': 50,
                'category': 'Physical',
                'contestType': 'Tough',
                'critRatio': 2,
                'desc': 'Has a higher chance for a critical hit.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'karatechop',
                'name': 'Karate Chop',
                'num': 2,
                'pp': 25,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'High critical hit ratio.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 100},
 'kinesis': {'accuracy': 80,
             'basePower': 0,
             'boosts': {'accuracy': -1},
             'category': 'Status',
             'contestType': 'Clever',
             'desc': "Lowers the target's accuracy by 1 stage.",
             'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
             'id': 'kinesis',
             'name': 'Kinesis',
             'num': 134,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Lowers the target's accuracy by 1.",
             'target': 'normal',
             'type': 'Psychic',
             'zMoveBoost': {'evasion': 1}},
 'kingsshield': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cool',
                 'desc': 'The user is protected from most attacks made by '
                         'other Pokemon during this turn, and Pokemon trying '
                         'to make contact with the user have their Attack '
                         'lowered by 2 stages. Non-damaging moves go through '
                         'this protection. This move has a 1/X chance of being '
                         'successful, where X starts at 1 and triples each '
                         'time this move is successfully used. X resets to 1 '
                         "if this move fails, if the user's last move used is "
                         "not Baneful Bunker, Detect, Endure, King's Shield, "
                         'Protect, Quick Guard, Spiky Shield, or Wide Guard, '
                         "or if it was one of those moves and the user's "
                         'protection was broken. Fails if the user moves last '
                         'this turn.',
                 'effect': {'duration': 1,
                            'onHit': kingsshield.onHit,
                            'onStart': kingsshield.onStart,
                            'onTryHit': kingsshield.onTryHit,
                            'onTryHitPriority': 3},
                 'flags': {},
                 'id': 'kingsshield',
                 'isViable': True,
                 'name': "King's Shield",
                 'num': 588,
                 'onHit': kingsshield.onHit,
                 'onTryHit': kingsshield.onTryHit,
                 'pp': 10,
                 'priority': 4,
                 'secondary': {},
                 'shortDesc': 'Protects from attacks. Contact: lowers Atk by '
                              '2.',
                 'stallingMove': True,
                 'target': 'self',
                 'type': 'Steel',
                 'volatileStatus': 'kingsshield',
                 'zMoveEffect': 'clearnegativeboost'},
 'knockoff': {'accuracy': 100,
              'basePower': 65,
              'category': 'Physical',
              'contestType': 'Clever',
              'desc': 'If the target is holding an item that can be removed '
                      "from it, ignoring the Sticky Hold Ability, this move's "
                      'power is multiplied by 1.5. If the user has not '
                      'fainted, the target loses its held item. This move '
                      'cannot remove Z-Crystals, cause Pokemon with the Sticky '
                      'Hold Ability to lose their held item, cause Pokemon '
                      'that can Mega Evolve to lose the Mega Stone for their '
                      'species, or cause a Kyogre, a Groudon, a Giratina, an '
                      'Arceus, a Genesect, or a Silvally to lose their Blue '
                      'Orb, Red Orb, Griseous Orb, Plate, Drive, or Memory '
                      'respectively. Items lost to this move cannot be '
                      'regained with Recycle or the Harvest Ability.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'knockoff',
              'isViable': True,
              'name': 'Knock Off',
              'num': 282,
              'onAfterHit': knockoff.onAfterHit,
              'onBasePower': knockoff.onBasePower,
              'onBasePowerPriority': 4,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': '1.5x damage if foe holds an item. Removes item.',
              'target': 'normal',
              'type': 'Dark',
              'zMovePower': 120},
 'landswrath': {'accuracy': 100,
                'basePower': 90,
                'category': 'Physical',
                'contestType': 'Beautiful',
                'desc': 'No additional effect.',
                'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                'id': 'landswrath',
                'name': "Land's Wrath",
                'num': 616,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'No additional effect. Hits adjacent foes.',
                'target': 'allAdjacentFoes',
                'type': 'Ground',
                'zMovePower': 185},
 'laserfocus': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cool',
                'desc': "Until the end of the next turn, the user's attacks "
                        'will be critical hits.',
                'effect': {'duration': 2,
                           'onEnd': laserfocus.onEnd,
                           'onModifyCritRatio': laserfocus.onModifyCritRatio,
                           'onRestart': laserfocus.onRestart,
                           'onStart': laserfocus.onStart},
                'flags': {'snatch': 1},
                'id': 'laserfocus',
                'name': 'Laser Focus',
                'num': 673,
                'pp': 30,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Until the end of the next turn, user's moves "
                             'crit.',
                'target': 'self',
                'type': 'Normal',
                'volatileStatus': 'laserfocus',
                'zMoveBoost': {'atk': 1}},
 'lastresort': {'accuracy': 100,
                'basePower': 140,
                'category': 'Physical',
                'contestType': 'Cute',
                'desc': 'This move fails unless the user knows this move and '
                        'at least one other move, and has used all the other '
                        'moves it knows at least once each since it became '
                        'active or Transformed.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'lastresort',
                'name': 'Last Resort',
                'num': 387,
                'onTryHit': lastresort.onTryHit,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Fails unless each known move has been used.',
                'target': 'normal',
                'type': 'Normal',
                'zMovePower': 200},
 'lavaplume': {'accuracy': 100,
               'basePower': 80,
               'category': 'Special',
               'contestType': 'Tough',
               'desc': 'Has a 30% chance to burn the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'lavaplume',
               'isViable': True,
               'name': 'Lava Plume',
               'num': 436,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 30, 'status': 'brn'},
               'shortDesc': '30% chance to burn adjacent Pokemon.',
               'target': 'allAdjacent',
               'type': 'Fire',
               'zMovePower': 160},
 'leafage': {'accuracy': 100,
             'basePower': 40,
             'category': 'Physical',
             'contestType': 'Tough',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'leafage',
             'name': 'Leafage',
             'num': 670,
             'pp': 40,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'No additional effect.',
             'target': 'normal',
             'type': 'Grass',
             'zMovePower': 100},
 'leafblade': {'accuracy': 100,
               'basePower': 90,
               'category': 'Physical',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'leafblade',
               'isViable': True,
               'name': 'Leaf Blade',
               'num': 348,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 175},
 'leafstorm': {'accuracy': 90,
               'basePower': 130,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Lowers the user's Special Attack by 2 stages.",
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'leafstorm',
               'isViable': True,
               'name': 'Leaf Storm',
               'num': 437,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'self': {'boosts': {'spa': -2}},
               'shortDesc': "Lowers the user's Sp. Atk by 2.",
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 195},
 'leaftornado': {'accuracy': 90,
                 'basePower': 65,
                 'category': 'Special',
                 'contestType': 'Cool',
                 'desc': "Has a 50% chance to lower the target's accuracy by 1 "
                         'stage.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'leaftornado',
                 'name': 'Leaf Tornado',
                 'num': 536,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {'boosts': {'accuracy': -1}, 'chance': 50},
                 'shortDesc': "50% chance to lower the target's accuracy by 1.",
                 'target': 'normal',
                 'type': 'Grass',
                 'zMovePower': 120},
 'leechlife': {'accuracy': 100,
               'basePower': 80,
               'category': 'Physical',
               'contestType': 'Clever',
               'desc': 'The user recovers 1/2 the HP lost by the target, '
                       'rounded half up. If Big Root is held by the user, the '
                       'HP recovered is 1.3x normal, rounded half down.',
               'drain': {'0': 1, '1': 2},
               'flags': {'contact': 1, 'heal': 1, 'mirror': 1, 'protect': 1},
               'id': 'leechlife',
               'isViable': True,
               'name': 'Leech Life',
               'num': 141,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User recovers 50% of the damage dealt.',
               'target': 'normal',
               'type': 'Bug',
               'zMovePower': 160},
 'leechseed': {'accuracy': 90,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "The Pokemon at the user's position steals 1/8 of the "
                       "target's maximum HP, rounded down, at the end of each "
                       'turn. If Big Root is held by the recipient, the HP '
                       'recovered is 1.3x normal, rounded half down. If the '
                       'target uses Baton Pass, the replacement will continue '
                       'being leeched. If the target switches out or uses '
                       'Rapid Spin successfully, the effect ends. Grass-type '
                       'Pokemon are immune to this move on use, but not its '
                       'effect.',
               'effect': {'onResidual': leechseed.onResidual,
                          'onResidualOrder': 8,
                          'onStart': leechseed.onStart},
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'leechseed',
               'isViable': True,
               'name': 'Leech Seed',
               'num': 73,
               'onTryHit': leechseed.onTryHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "1/8 of target's HP is restored to user every "
                            'turn.',
               'target': 'normal',
               'type': 'Grass',
               'volatileStatus': 'leechseed',
               'zMoveEffect': 'clearnegativeboost'},
 'leer': {'accuracy': 100,
          'basePower': 0,
          'boosts': {'def': -1},
          'category': 'Status',
          'contestType': 'Cool',
          'desc': "Lowers the target's Defense by 1 stage.",
          'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
          'id': 'leer',
          'name': 'Leer',
          'num': 43,
          'pp': 30,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Lowers the foe(s) Defense by 1.',
          'target': 'allAdjacentFoes',
          'type': 'Normal',
          'zMoveBoost': {'atk': 1}},
 'letssnuggleforever': {'accuracy': True,
                        'basePower': 190,
                        'category': 'Physical',
                        'contestType': 'Cool',
                        'flags': {'contact': 1},
                        'id': 'letssnuggleforever',
                        'isZ': 'mimikiumz',
                        'name': "Let's Snuggle Forever",
                        'num': 726,
                        'pp': 1,
                        'priority': 0,
                        'secondary': {},
                        'shortDesc': 'No additional effect.',
                        'target': 'normal',
                        'type': 'Fairy'},
 'lick': {'accuracy': 100,
          'basePower': 30,
          'category': 'Physical',
          'contestType': 'Cute',
          'desc': 'Has a 30% chance to paralyze the target.',
          'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
          'id': 'lick',
          'name': 'Lick',
          'num': 122,
          'pp': 30,
          'priority': 0,
          'secondary': {'chance': 30, 'status': 'par'},
          'shortDesc': '30% chance to paralyze the target.',
          'target': 'normal',
          'type': 'Ghost',
          'zMovePower': 100},
 'lightofruin': {'accuracy': 90,
                 'basePower': 140,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'If the target lost HP, the user takes recoil damage '
                         'equal to 1/2 the HP lost by the target, rounded half '
                         'up, but not less than 1 HP.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'lightofruin',
                 'isUnreleased': True,
                 'isViable': True,
                 'name': 'Light of Ruin',
                 'num': 617,
                 'pp': 5,
                 'priority': 0,
                 'recoil': {'0': 1, '1': 2},
                 'secondary': {},
                 'shortDesc': 'Has 1/2 recoil.',
                 'target': 'normal',
                 'type': 'Fairy',
                 'zMovePower': 200},
 'lightscreen': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': 'For 5 turns, the user and its party members take '
                         '0.5x damage from special attacks, or 0.66x damage if '
                         'in a Double Battle. Damage is not reduced further '
                         'with Aurora Veil. Critical hits ignore this effect. '
                         "It is removed from the user's side if the user or an "
                         'ally is successfully hit by Brick Break, Psychic '
                         'Fangs, or Defog. Lasts for 8 turns if the user is '
                         'holding Light Clay. Fails if the effect is already '
                         "active on the user's side.",
                 'effect': {'duration': 5,
                            'durationCallback': lightscreen.durationCallback,
                            'onAnyModifyDamage': lightscreen.onAnyModifyDamage,
                            'onEnd': lightscreen.onEnd,
                            'onResidualOrder': 21,
                            'onResidualSubOrder': 1,
                            'onStart': lightscreen.onStart},
                 'flags': {'snatch': 1},
                 'id': 'lightscreen',
                 'isViable': True,
                 'name': 'Light Screen',
                 'num': 113,
                 'pp': 30,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'For 5 turns, special damage to allies is '
                              'halved.',
                 'sideCondition': 'lightscreen',
                 'target': 'allySide',
                 'type': 'Psychic',
                 'zMoveBoost': {'spd': 1}},
 'lightthatburnsthesky': {'accuracy': True,
                          'basePower': 200,
                          'category': 'Special',
                          'contestType': 'Cool',
                          'desc': 'This move becomes a physical attack if the '
                                  "user's Attack is greater than its Special "
                                  'Attack, including stat stage changes. This '
                                  'move and its effects ignore the Abilities '
                                  'of other Pokemon.',
                          'flags': {},
                          'id': 'lightthatburnsthesky',
                          'ignoreAbility': True,
                          'isZ': 'ultranecroziumz',
                          'name': 'Light That Burns the Sky',
                          'num': 723,
                          'onModifyMove': lightthatburnsthesky.onModifyMove,
                          'pp': 1,
                          'priority': 0,
                          'secondary': {},
                          'shortDesc': "Physical if user's Atk > Sp. Atk. "
                                       'Ignores Abilities.',
                          'target': 'normal',
                          'type': 'Psychic'},
 'liquidation': {'accuracy': 100,
                 'basePower': 85,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': "Has a 20% chance to lower the target's Defense by 1 "
                         'stage.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'liquidation',
                 'isViable': True,
                 'name': 'Liquidation',
                 'num': 710,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {'boosts': {'def': -1}, 'chance': 20},
                 'shortDesc': "20% chance to lower the target's Defense by 1.",
                 'target': 'normal',
                 'type': 'Water',
                 'zMovePower': 160},
 'lockon': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Clever',
            'desc': 'Until the end of the next turn, the target cannot avoid '
                    "the user's moves, even if the target is in the middle of "
                    'a two-turn move. The effect ends if either the user or '
                    'the target leaves the field. Fails if this effect is '
                    'active for the user.',
            'effect': {'duration': 2,
                       'noCopy': True,
                       'onSourceAccuracy': lockon.onSourceAccuracy},
            'flags': {'mirror': 1, 'protect': 1},
            'id': 'lockon',
            'name': 'Lock-On',
            'num': 199,
            'onHit': lockon.onHit,
            'onTryHit': lockon.onTryHit,
            'pp': 5,
            'priority': 0,
            'secondary': {},
            'shortDesc': "User's next move will not miss the target.",
            'target': 'normal',
            'type': 'Normal',
            'zMoveBoost': {'spe': 1}},
 'lovelykiss': {'accuracy': 75,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Beautiful',
                'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                'id': 'lovelykiss',
                'isViable': True,
                'name': 'Lovely Kiss',
                'num': 142,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Causes the target to fall asleep.',
                'status': 'slp',
                'target': 'normal',
                'type': 'Normal',
                'zMoveBoost': {'spe': 1}},
 'lowkick': {'accuracy': 100,
             'basePower': 0,
             'basePowerCallback': lowkick.basePowerCallback,
             'category': 'Physical',
             'contestType': 'Tough',
             'desc': "This move's power is 20 if the target weighs less than "
                     '10 kg, 40 if less than 25 kg, 60 if less than 50 kg, 80 '
                     'if less than 100 kg, 100 if less than 200 kg, and 120 if '
                     'greater than or equal to 200 kg.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'lowkick',
             'isViable': True,
             'name': 'Low Kick',
             'num': 67,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'More power the heavier the target.',
             'target': 'normal',
             'type': 'Fighting',
             'zMovePower': 160},
 'lowsweep': {'accuracy': 100,
              'basePower': 65,
              'category': 'Physical',
              'contestType': 'Clever',
              'desc': "Has a 100% chance to lower the target's Speed by 1 "
                      'stage.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'lowsweep',
              'name': 'Low Sweep',
              'num': 490,
              'pp': 20,
              'priority': 0,
              'secondary': {'boosts': {'spe': -1}, 'chance': 100},
              'shortDesc': "100% chance to lower the target's Speed by 1.",
              'target': 'normal',
              'type': 'Fighting',
              'zMovePower': 120},
 'luckychant': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cute',
                'desc': 'For 5 turns, the user and its party members cannot be '
                        'struck by a critical hit. Fails if the effect is '
                        "already active on the user's side.",
                'effect': {'duration': 5,
                           'onCriticalHit': False,
                           'onEnd': luckychant.onEnd,
                           'onResidualOrder': 21,
                           'onResidualSubOrder': 5,
                           'onStart': luckychant.onStart},
                'flags': {'snatch': 1},
                'id': 'luckychant',
                'name': 'Lucky Chant',
                'num': 381,
                'pp': 30,
                'priority': 0,
                'secondary': {},
                'shortDesc': "For 5 turns, shields user's party from critical "
                             'hits.',
                'sideCondition': 'luckychant',
                'target': 'allySide',
                'type': 'Normal',
                'zMoveBoost': {'evasion': 1}},
 'lunardance': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Beautiful',
                'desc': 'The user faints and the Pokemon brought out to '
                        'replace it has its HP and PP fully restored along '
                        'with having any major status condition cured. The new '
                        'Pokemon is sent out at the end of the turn, and the '
                        'healing happens before hazards take effect. Fails if '
                        'the user is the last unfainted Pokemon in its party.',
                'effect': {'duration': 2,
                           'onRestart': lunardance.onRestart,
                           'onStart': lunardance.onStart,
                           'onSwitchIn': lunardance.onSwitchIn,
                           'onSwitchInPriority': 1},
                'flags': {'dance': 1, 'heal': 1, 'snatch': 1},
                'id': 'lunardance',
                'isViable': True,
                'name': 'Lunar Dance',
                'num': 461,
                'onTryHit': lunardance.onTryHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'selfdestruct': 'ifHit',
                'shortDesc': 'User faints. Replacement is fully healed, with '
                             'PP.',
                'sideCondition': 'lunardance',
                'target': 'self',
                'type': 'Psychic'},
 'lunge': {'accuracy': 100,
           'basePower': 80,
           'category': 'Physical',
           'contestType': 'Cute',
           'desc': "Has a 100% chance to lower the target's Attack by 1 stage.",
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'lunge',
           'isViable': True,
           'name': 'Lunge',
           'num': 679,
           'pp': 15,
           'priority': 0,
           'secondary': {'boosts': {'atk': -1}, 'chance': 100},
           'shortDesc': "100% chance to lower the target's Attack by 1.",
           'target': 'normal',
           'type': 'Bug',
           'zMovePower': 160},
 'lusterpurge': {'accuracy': 100,
                 'basePower': 70,
                 'category': 'Special',
                 'contestType': 'Clever',
                 'desc': "Has a 50% chance to lower the target's Special "
                         'Defense by 1 stage.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'lusterpurge',
                 'name': 'Luster Purge',
                 'num': 295,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {'boosts': {'spd': -1}, 'chance': 50},
                 'shortDesc': "50% chance to lower the target's Sp. Def by 1.",
                 'target': 'normal',
                 'type': 'Psychic',
                 'zMovePower': 140},
 'machpunch': {'accuracy': 100,
               'basePower': 40,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': 'No additional effect.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
               'id': 'machpunch',
               'isViable': True,
               'name': 'Mach Punch',
               'num': 183,
               'pp': 30,
               'priority': 1,
               'secondary': {},
               'shortDesc': 'Usually goes first.',
               'target': 'normal',
               'type': 'Fighting',
               'zMovePower': 100},
 'magicalleaf': {'accuracy': True,
                 'basePower': 60,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'magicalleaf',
                 'name': 'Magical Leaf',
                 'num': 345,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'This move does not check accuracy.',
                 'target': 'normal',
                 'type': 'Grass',
                 'zMovePower': 120},
 'magiccoat': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'Until the end of the turn, the user is unaffected by '
                       'certain non-damaging moves directed at it and will '
                       'instead use such moves against the original user. '
                       'Moves reflected in this way are unable to be reflected '
                       "again by this or the Magic Bounce Ability's effect. "
                       'Spikes, Stealth Rock, Sticky Web, and Toxic Spikes can '
                       'only be reflected once per side, by the leftmost '
                       "Pokemon under this or the Magic Bounce Ability's "
                       'effect. The Lightning Rod and Storm Drain Abilities '
                       'redirect their respective moves before this move takes '
                       'effect.',
               'effect': {'duration': 1,
                          'onAllyTryHitSide': magiccoat.onAllyTryHitSide,
                          'onStart': magiccoat.onStart,
                          'onTryHit': magiccoat.onTryHit,
                          'onTryHitPriority': 2},
               'flags': {},
               'id': 'magiccoat',
               'isViable': True,
               'name': 'Magic Coat',
               'num': 277,
               'pp': 15,
               'priority': 4,
               'secondary': {},
               'shortDesc': 'Bounces back certain non-damaging moves.',
               'target': 'self',
               'type': 'Psychic',
               'volatileStatus': 'magiccoat',
               'zMoveBoost': {'spd': 2}},
 'magicroom': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'For 5 turns, the held items of all active Pokemon have '
                       "no effect. An item's effect of causing forme changes "
                       'is unaffected, but any other effects from such items '
                       'are negated. During the effect, Fling and Natural Gift '
                       'are prevented from being used by all active Pokemon. '
                       'If this move is used during the effect, the effect '
                       'ends.',
               'effect': {'duration': 5,
                          'durationCallback': magicroom.durationCallback,
                          'onEnd': magicroom.onEnd,
                          'onResidualOrder': 25,
                          'onRestart': magicroom.onRestart,
                          'onStart': magicroom.onStart},
               'flags': {'mirror': 1},
               'id': 'magicroom',
               'name': 'Magic Room',
               'num': 478,
               'pp': 10,
               'priority': 0,
               'pseudoWeather': 'magicroom',
               'secondary': {},
               'shortDesc': 'For 5 turns, all held items have no effect.',
               'target': 'all',
               'type': 'Psychic',
               'zMoveBoost': {'spd': 1}},
 'magikarpsrevenge': {'accuracy': True,
                      'basePower': 120,
                      'category': 'Physical',
                      'contestType': 'Cute',
                      'desc': 'Has a 100% chance to confuse the target and '
                              'lower its Defense and Special Attack by 1 '
                              'stage. The user recovers 1/2 the HP lost by the '
                              'target, rounded half up. If Big Root is held by '
                              'the user, the HP recovered is 1.3x normal, '
                              "rounded half down. The user steals the foe's "
                              'boosts. If this move is successful, the weather '
                              'changes to rain unless it is already in effect, '
                              'and the user gains the effects of Aqua Ring and '
                              'Magic Coat.',
                      'drain': {'0': 1, '1': 2},
                      'flags': {'contact': 1,
                                'heal': 1,
                                'mirror': 1,
                                'protect': 1,
                                'recharge': 1},
                      'id': 'magikarpsrevenge',
                      'isNonstandard': True,
                      'name': "Magikarp's Revenge",
                      'noSketch': True,
                      'num': 0,
                      'onTry': magikarpsrevenge.onTry,
                      'pp': 10,
                      'priority': 0,
                      'secondary': {'boosts': {'def': -1, 'spa': -1},
                                    'chance': 100,
                                    'volatileStatus': 'confusion'},
                      'self': {'onHit': magikarpsrevenge.onHit,
                               'volatileStatus': 'mustrecharge'},
                      'shortDesc': "Does many things turn 1. Can't move turn "
                                   '2.',
                      'stealsBoosts': True,
                      'target': 'normal',
                      'type': 'Water',
                      'zMovePower': 190},
 'magmastorm': {'accuracy': 75,
                'basePower': 100,
                'category': 'Special',
                'contestType': 'Tough',
                'desc': 'Prevents the target from switching for four or five '
                        'turns (seven turns if the user is holding Grip Claw). '
                        'Causes damage to the target equal to 1/8 of its '
                        'maximum HP (1/6 if the user is holding Binding Band), '
                        'rounded down, at the end of each turn during effect. '
                        'The target can still switch out if it is holding Shed '
                        'Shell or uses Baton Pass, Parting Shot, U-turn, or '
                        'Volt Switch. The effect ends if either the user or '
                        'the target leaves the field, or if the target uses '
                        'Rapid Spin or Substitute successfully. This effect is '
                        'not stackable or reset by using this or another '
                        'binding move.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'magmastorm',
                'isViable': True,
                'name': 'Magma Storm',
                'num': 463,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Traps and damages the target for 4-5 turns.',
                'target': 'normal',
                'type': 'Fire',
                'volatileStatus': 'partiallytrapped',
                'zMovePower': 180},
 'magnetbomb': {'accuracy': True,
                'basePower': 60,
                'category': 'Physical',
                'contestType': 'Cool',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'magnetbomb',
                'name': 'Magnet Bomb',
                'num': 443,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'This move does not check accuracy.',
                'target': 'normal',
                'type': 'Steel',
                'zMovePower': 120},
 'magneticflux': {'accuracy': True,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Clever',
                  'desc': 'Raises the Defense and Special Defense of Pokemon '
                          "on the user's side with the Plus or Minus Abilities "
                          'by 1 stage.',
                  'flags': {'authentic': 1, 'distance': 1, 'snatch': 1},
                  'id': 'magneticflux',
                  'name': 'Magnetic Flux',
                  'num': 602,
                  'onHitSide': magneticflux.onHitSide,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Raises Def, Sp. Def of allies with Plus/Minus '
                               'by 1.',
                  'target': 'allySide',
                  'type': 'Electric',
                  'zMoveBoost': {'spd': 1}},
 'magnetrise': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'For 5 turns, the user is immune to Ground-type '
                        'attacks and the effects of Spikes, Toxic Spikes, '
                        'Sticky Web, and the Arena Trap Ability as long as it '
                        'remains active. If the user uses Baton Pass, the '
                        'replacement will gain the effect. Ingrain, Smack '
                        'Down, Thousand Arrows, and Iron Ball override this '
                        'move if the user is under any of their effects. Fails '
                        'if the user is already under this effect or the '
                        'effects of Ingrain, Smack Down, or Thousand Arrows.',
                'effect': {'duration': 5,
                           'onEnd': magnetrise.onEnd,
                           'onImmunity': magnetrise.onImmunity,
                           'onResidualOrder': 15,
                           'onStart': magnetrise.onStart},
                'flags': {'gravity': 1, 'snatch': 1},
                'id': 'magnetrise',
                'name': 'Magnet Rise',
                'num': 393,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'For 5 turns, the user has immunity to Ground.',
                'target': 'self',
                'type': 'Electric',
                'volatileStatus': 'magnetrise',
                'zMoveBoost': {'evasion': 1}},
 'magnitude': {'accuracy': 100,
               'basePower': 0,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'The power of this move varies; 5% chances for 10 and '
                       '150 power, 10% chances for 30 and 110 power, 20% '
                       'chances for 50 and 90 power, and 30% chance for 70 '
                       'power. Damage doubles if the target is using Dig.',
               'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
               'id': 'magnitude',
               'name': 'Magnitude',
               'num': 222,
               'onModifyMove': magnitude.onModifyMove,
               'onUseMoveMessage': magnitude.onUseMoveMessage,
               'pp': 30,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Hits adjacent Pokemon. Power varies; 2x on Dig.',
               'target': 'allAdjacent',
               'type': 'Ground',
               'zMovePower': 140},
 'maliciousmoonsault': {'accuracy': True,
                        'basePower': 180,
                        'category': 'Physical',
                        'contestType': 'Cool',
                        'desc': 'Damage doubles and no accuracy check is done '
                                'if the target has used Minimize while active.',
                        'flags': {'contact': 1},
                        'id': 'maliciousmoonsault',
                        'isZ': 'inciniumz',
                        'name': 'Malicious Moonsault',
                        'num': 696,
                        'pp': 1,
                        'priority': 0,
                        'secondary': {},
                        'shortDesc': 'Damage doubles if the target used '
                                     'Minimize.',
                        'target': 'normal',
                        'type': 'Dark'},
 'matblock': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cool',
              'desc': 'The user and its party members are protected from '
                      'damaging attacks made by other Pokemon, including '
                      "allies, during this turn. Fails unless it is the user's "
                      'first turn on the field, if the user moves last this '
                      'turn, or if this move is already in effect for the '
                      "user's side.",
              'effect': {'duration': 1,
                         'onStart': matblock.onStart,
                         'onTryHit': matblock.onTryHit,
                         'onTryHitPriority': 3},
              'flags': {'nonsky': 1, 'snatch': 1},
              'id': 'matblock',
              'name': 'Mat Block',
              'num': 561,
              'onTryHitSide': matblock.onTryHitSide,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Protects allies from attacks. First turn out only.',
              'sideCondition': 'matblock',
              'stallingMove': True,
              'target': 'allySide',
              'type': 'Fighting',
              'zMoveBoost': {'def': 1}},
 'meanlook': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': 'Prevents the target from switching out. The target can '
                      'still switch out if it is holding Shed Shell or uses '
                      'Baton Pass, Parting Shot, U-turn, or Volt Switch. If '
                      'the target leaves the field using Baton Pass, the '
                      'replacement will remain trapped. The effect ends if the '
                      'user leaves the field.',
              'flags': {'mirror': 1, 'reflectable': 1},
              'id': 'meanlook',
              'name': 'Mean Look',
              'num': 212,
              'onHit': meanlook.onHit,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Prevents the target from switching out.',
              'target': 'normal',
              'type': 'Normal',
              'zMoveBoost': {'spd': 1}},
 'meditate': {'accuracy': True,
              'basePower': 0,
              'boosts': {'atk': 1},
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': "Raises the user's Attack by 1 stage.",
              'flags': {'snatch': 1},
              'id': 'meditate',
              'name': 'Meditate',
              'num': 96,
              'pp': 40,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Raises the user's Attack by 1.",
              'target': 'self',
              'type': 'Psychic',
              'zMoveBoost': {'atk': 1}},
 'mefirst': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': 'The user uses the move the target chose for use this '
                     'turn against it, if possible, with its power multiplied '
                     'by 1.5. The move must be a damaging move other than Beak '
                     'Blast, Chatter, Counter, Covet, Focus Punch, Me First, '
                     'Metal Burst, Mirror Coat, Shell Trap, Struggle, Thief, '
                     'or any Z-Move. Fails if the target moves before the '
                     "user. Ignores the target's substitute for the purpose of "
                     'copying the move.',
             'effect': {'duration': 1,
                        'onBasePower': mefirst.onBasePower,
                        'onBasePowerPriority': 4},
             'flags': {'authentic': 1, 'protect': 1},
             'id': 'mefirst',
             'name': 'Me First',
             'num': 382,
             'onTryHit': mefirst.onTryHit,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Copies a foe at 1.5x power. User must be faster.',
             'target': 'adjacentFoe',
             'type': 'Normal',
             'zMoveBoost': {'spe': 2}},
 'megadrain': {'accuracy': 100,
               'basePower': 40,
               'category': 'Special',
               'contestType': 'Clever',
               'desc': 'The user recovers 1/2 the HP lost by the target, '
                       'rounded half up. If Big Root is held by the user, the '
                       'HP recovered is 1.3x normal, rounded half down.',
               'drain': {'0': 1, '1': 2},
               'flags': {'heal': 1, 'mirror': 1, 'protect': 1},
               'id': 'megadrain',
               'name': 'Mega Drain',
               'num': 72,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User recovers 50% of the damage dealt.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 120},
 'megahorn': {'accuracy': 85,
              'basePower': 120,
              'category': 'Physical',
              'contestType': 'Cool',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'megahorn',
              'isViable': True,
              'name': 'Megahorn',
              'num': 224,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Bug',
              'zMovePower': 190},
 'megakick': {'accuracy': 75,
              'basePower': 120,
              'category': 'Physical',
              'contestType': 'Cool',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'megakick',
              'name': 'Mega Kick',
              'num': 25,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 190},
 'megapunch': {'accuracy': 85,
               'basePower': 80,
               'category': 'Physical',
               'contestType': 'Tough',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
               'id': 'megapunch',
               'name': 'Mega Punch',
               'num': 5,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 160},
 'memento': {'accuracy': 100,
             'basePower': 0,
             'boosts': {'atk': -2, 'spa': -2},
             'category': 'Status',
             'contestType': 'Tough',
             'desc': "Lowers the target's Attack and Special Attack by 2 "
                     'stages. The user faints unless this move misses or there '
                     'is no target. Fails entirely if this move hits a '
                     "substitute, but does not fail if the target's stats "
                     'cannot be changed.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'memento',
             'isViable': True,
             'name': 'Memento',
             'num': 262,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'selfdestruct': 'ifHit',
             'shortDesc': "Lowers target's Attack, Sp. Atk by 2. User faints.",
             'target': 'normal',
             'type': 'Dark',
             'zMoveEffect': 'healreplacement'},
 'menacingmoonrazemaelstrom': {'accuracy': True,
                               'basePower': 200,
                               'category': 'Special',
                               'contestType': 'Cool',
                               'desc': 'This move and its effects ignore the '
                                       'Abilities of other Pokemon.',
                               'flags': {},
                               'id': 'menacingmoonrazemaelstrom',
                               'ignoreAbility': True,
                               'isZ': 'lunaliumz',
                               'name': 'Menacing Moonraze Maelstrom',
                               'num': 725,
                               'pp': 1,
                               'priority': 0,
                               'secondary': {},
                               'shortDesc': 'Ignores the Abilities of other '
                                            'Pokemon.',
                               'target': 'normal',
                               'type': 'Ghost'},
 'metalburst': {'accuracy': 100,
                'basePower': 0,
                'beforeTurnCallback': metalburst.beforeTurnCallback,
                'category': 'Physical',
                'contestType': 'Cool',
                'damageCallback': metalburst.damageCallback,
                'desc': 'Deals damage to the last opposing Pokemon to hit the '
                        'user with an attack this turn equal to 1.5 times the '
                        'HP lost by the user from that attack, rounded down. '
                        'If the user did not lose HP from the attack, this '
                        'move deals 1 HP of damage instead. If that opposing '
                        "Pokemon's position is no longer in use and there is "
                        'another opposing Pokemon on the field, the damage is '
                        'done to it instead. Only the last hit of a multi-hit '
                        'attack is counted. Fails if the user was not hit by '
                        "an opposing Pokemon's attack this turn.",
                'effect': {'duration': 1,
                           'noCopy': True,
                           'onAfterDamage': metalburst.onAfterDamage,
                           'onRedirectTarget': metalburst.onRedirectTarget,
                           'onRedirectTargetPriority': -1,
                           'onStart': metalburst.onStart},
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'metalburst',
                'name': 'Metal Burst',
                'num': 368,
                'onTryHit': metalburst.onTryHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'If hit by an attack, returns 1.5x damage.',
                'target': 'scripted',
                'type': 'Steel',
                'zMovePower': 100},
 'metalclaw': {'accuracy': 95,
               'basePower': 50,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': "Has a 10% chance to raise the user's Attack by 1 "
                       'stage.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'metalclaw',
               'name': 'Metal Claw',
               'num': 232,
               'pp': 35,
               'priority': 0,
               'secondary': {'chance': 10, 'self': {'boosts': {'atk': 1}}},
               'shortDesc': "10% chance to raise the user's Attack by 1.",
               'target': 'normal',
               'type': 'Steel',
               'zMovePower': 100},
 'metalsound': {'accuracy': 85,
                'basePower': 0,
                'boosts': {'spd': -2},
                'category': 'Status',
                'contestType': 'Clever',
                'desc': "Lowers the target's Special Defense by 2 stages.",
                'flags': {'authentic': 1,
                          'mirror': 1,
                          'mystery': 1,
                          'protect': 1,
                          'reflectable': 1,
                          'sound': 1},
                'id': 'metalsound',
                'name': 'Metal Sound',
                'num': 319,
                'pp': 40,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Lowers the target's Sp. Def by 2.",
                'target': 'normal',
                'type': 'Steel',
                'zMoveBoost': {'spa': 1}},
 'meteormash': {'accuracy': 90,
                'basePower': 90,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': "Has a 20% chance to raise the user's Attack by 1 "
                        'stage.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                'id': 'meteormash',
                'isViable': True,
                'name': 'Meteor Mash',
                'num': 309,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 20, 'self': {'boosts': {'atk': 1}}},
                'shortDesc': "20% chance to raise the user's Attack by 1.",
                'target': 'normal',
                'type': 'Steel',
                'zMovePower': 175},
 'metronome': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': 'A random move is selected for use, other than After '
                       'You, Assist, Baneful Bunker, Beak Blast, Belch, '
                       'Bestow, Celebrate, Chatter, Copycat, Counter, Covet, '
                       'Crafty Shield, Destiny Bond, Detect, Diamond Storm, '
                       'Endure, Feint, Fleur Cannon, Focus Punch, Follow Me, '
                       'Freeze Shock, Helping Hand, Hold Hands, Hyperspace '
                       "Hole, Ice Burn, Instruct, King's Shield, Light of "
                       'Ruin, Mat Block, Me First, Metronome, Mimic, Mind '
                       'Blown, Mirror Coat, Mirror Move, Nature Power, Photon '
                       'Geyser, Plasma Fists, Protect, Quash, Quick Guard, '
                       'Rage Powder, Relic Song, Secret Sword, Shell Trap, '
                       'Sketch, Sleep Talk, Snarl, Snatch, Snore, Spectral '
                       'Thief, Spiky Shield, Spotlight, Steam Eruption, '
                       'Struggle, Switcheroo, Techno Blast, Thief, Thousand '
                       'Arrows, Thousand Waves, Transform, Trick, V-create, or '
                       'Wide Guard.',
               'flags': {},
               'id': 'metronome',
               'name': 'Metronome',
               'noMetronome': {'0': 'afteryou',
                               '1': 'assist',
                               '10': 'covet',
                               '11': 'craftyshield',
                               '12': 'destinybond',
                               '13': 'detect',
                               '14': 'diamondstorm',
                               '15': 'dragonascent',
                               '16': 'endure',
                               '17': 'feint',
                               '18': 'fleurcannon',
                               '19': 'focuspunch',
                               '2': 'banefulbunker',
                               '20': 'followme',
                               '21': 'freezeshock',
                               '22': 'helpinghand',
                               '23': 'holdhands',
                               '24': 'hyperspacefury',
                               '25': 'hyperspacehole',
                               '26': 'iceburn',
                               '27': 'instruct',
                               '28': 'kingsshield',
                               '29': 'lightofruin',
                               '3': 'beakblast',
                               '30': 'matblock',
                               '31': 'mefirst',
                               '32': 'metronome',
                               '33': 'mimic',
                               '34': 'mindblown',
                               '35': 'mirrorcoat',
                               '36': 'mirrormove',
                               '37': 'naturepower',
                               '38': 'originpulse',
                               '39': 'photongeyser',
                               '4': 'belch',
                               '40': 'plasmafists',
                               '41': 'precipiceblades',
                               '42': 'protect',
                               '43': 'quash',
                               '44': 'quickguard',
                               '45': 'ragepowder',
                               '46': 'relicsong',
                               '47': 'secretsword',
                               '48': 'shelltrap',
                               '49': 'sketch',
                               '5': 'bestow',
                               '50': 'sleeptalk',
                               '51': 'snarl',
                               '52': 'snatch',
                               '53': 'snore',
                               '54': 'spectralthief',
                               '55': 'spikyshield',
                               '56': 'spotlight',
                               '57': 'steameruption',
                               '58': 'struggle',
                               '59': 'switcheroo',
                               '6': 'celebrate',
                               '60': 'technoblast',
                               '61': 'thief',
                               '62': 'thousandarrows',
                               '63': 'thousandwaves',
                               '64': 'transform',
                               '65': 'trick',
                               '66': 'vcreate',
                               '67': 'wideguard',
                               '7': 'chatter',
                               '8': 'copycat',
                               '9': 'counter'},
               'num': 118,
               'onHit': metronome.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Picks a random move.',
               'target': 'self',
               'type': 'Normal'},
 'milkdrink': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': 'The user restores 1/2 of its maximum HP, rounded half '
                       'up.',
               'flags': {'heal': 1, 'snatch': 1},
               'heal': {'0': 1, '1': 2},
               'id': 'milkdrink',
               'isViable': True,
               'name': 'Milk Drink',
               'num': 208,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Heals the user by 50% of its max HP.',
               'target': 'self',
               'type': 'Normal',
               'zMoveEffect': 'clearnegativeboost'},
 'mimic': {'accuracy': True,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Cute',
           'desc': 'While the user remains active, this move is replaced by '
                   'the last move used by the target. The copied move has the '
                   'maximum PP for that move. Fails if the target has not made '
                   'a move, if the user has Transformed, if the user already '
                   'knows the move, or if the move is Chatter, Mimic, Sketch, '
                   'Struggle, Transform, or any Z-Move.',
           'flags': {'authentic': 1, 'mystery': 1, 'protect': 1},
           'id': 'mimic',
           'name': 'Mimic',
           'num': 102,
           'onHit': mimic.onHit,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'The last move the target used replaces this one.',
           'target': 'normal',
           'type': 'Normal',
           'zMoveBoost': {'accuracy': 1}},
 'mindblown': {'accuracy': 100,
               'basePower': 150,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': 'Whether or not this move is successful and even if it '
                       'would cause fainting, the user loses 1/2 of its '
                       'maximum HP, rounded up, unless the user has the Magic '
                       'Guard Ability. This move is prevented from executing '
                       'and the user does not lose HP if any active Pokemon '
                       'has the Damp Ability, or if this move is Fire type and '
                       'the user is affected by Powder or the weather is '
                       'Primordial Sea.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'mindblown',
               'isViable': True,
               'mindBlownRecoil': True,
               'name': 'Mind Blown',
               'num': 720,
               'onAfterMove': mindblown.onAfterMove,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User loses 50% max HP. Hits adjacent Pokemon.',
               'target': 'allAdjacent',
               'type': 'Fire',
               'zMovePower': 200},
 'mindreader': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'Until the end of the next turn, the target cannot '
                        "avoid the user's moves, even if the target is in the "
                        'middle of a two-turn move. The effect ends if either '
                        'the user or the target leaves the field. Fails if '
                        'this effect is active for the user.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'mindreader',
                'name': 'Mind Reader',
                'num': 170,
                'onHit': mindreader.onHit,
                'onTryHit': mindreader.onTryHit,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': "User's next move will not miss the target.",
                'target': 'normal',
                'type': 'Normal',
                'zMoveBoost': {'spa': 1}},
 'minimize': {'accuracy': True,
              'basePower': 0,
              'boosts': {'evasion': 2},
              'category': 'Status',
              'contestType': 'Cute',
              'desc': "Raises the user's evasiveness by 2 stages. Whether or "
                      "not the user's evasiveness was changed, Body Slam, "
                      'Dragon Rush, Flying Press, Heat Crash, Heavy Slam, '
                      'Malicious Moonsault, Steamroller, and Stomp will not '
                      'check accuracy and have their damage doubled if used '
                      'against the user while it is active.',
              'effect': {'noCopy': True,
                         'onAccuracy': minimize.onAccuracy,
                         'onSourceModifyDamage': minimize.onSourceModifyDamage},
              'flags': {'snatch': 1},
              'id': 'minimize',
              'name': 'Minimize',
              'num': 107,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Raises the user's evasiveness by 2.",
              'target': 'self',
              'type': 'Normal',
              'volatileStatus': 'minimize',
              'zMoveEffect': 'clearnegativeboost'},
 'miracleeye': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'As long as the target remains active, its evasiveness '
                        'stat stage is ignored during accuracy checks against '
                        'it if it is greater than 0, and Psychic-type attacks '
                        'can hit the target if it is a Dark type. Fails if the '
                        'target is already affected, or affected by Foresight '
                        'or Odor Sleuth.',
                'effect': {'noCopy': True,
                           'onModifyBoost': miracleeye.onModifyBoost,
                           'onNegateImmunity': miracleeye.onNegateImmunity,
                           'onStart': miracleeye.onStart},
                'flags': {'authentic': 1,
                          'mirror': 1,
                          'protect': 1,
                          'reflectable': 1},
                'id': 'miracleeye',
                'name': 'Miracle Eye',
                'num': 357,
                'onTryHit': miracleeye.onTryHit,
                'pp': 40,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Psychic hits Dark. Evasiveness ignored.',
                'target': 'normal',
                'type': 'Psychic',
                'volatileStatus': 'miracleeye',
                'zMoveBoost': {'spa': 1}},
 'mirrorcoat': {'accuracy': 100,
                'basePower': 0,
                'beforeTurnCallback': mirrorcoat.beforeTurnCallback,
                'category': 'Special',
                'contestType': 'Beautiful',
                'damageCallback': mirrorcoat.damageCallback,
                'desc': 'Deals damage to the last opposing Pokemon to hit the '
                        'user with a special attack this turn equal to twice '
                        'the HP lost by the user from that attack. If the user '
                        'did not lose HP from the attack, this move deals 1 HP '
                        "of damage instead. If that opposing Pokemon's "
                        'position is no longer in use and there is another '
                        'opposing Pokemon on the field, the damage is done to '
                        'it instead. Only the last hit of a multi-hit attack '
                        'is counted. Fails if the user was not hit by an '
                        "opposing Pokemon's special attack this turn.",
                'effect': {'duration': 1,
                           'noCopy': True,
                           'onAfterDamage': mirrorcoat.onAfterDamage,
                           'onRedirectTarget': mirrorcoat.onRedirectTarget,
                           'onRedirectTargetPriority': -1,
                           'onStart': mirrorcoat.onStart},
                'flags': {'protect': 1},
                'id': 'mirrorcoat',
                'name': 'Mirror Coat',
                'num': 243,
                'onTryHit': mirrorcoat.onTryHit,
                'pp': 20,
                'priority': -5,
                'secondary': {},
                'shortDesc': 'If hit by special attack, returns double damage.',
                'target': 'scripted',
                'type': 'Psychic',
                'zMovePower': 100},
 'mirrormove': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'The user uses the last move used by the target. The '
                        'copied move is used against that target, if possible. '
                        'Fails if the target has not made a move, or if the '
                        'last move used cannot be copied by this move.',
                'flags': {},
                'id': 'mirrormove',
                'name': 'Mirror Move',
                'num': 119,
                'onTryHit': mirrormove.onTryHit,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': "User uses the target's last used move against "
                             'it.',
                'target': 'normal',
                'type': 'Flying',
                'zMoveBoost': {'atk': 2}},
 'mirrorshot': {'accuracy': 85,
                'basePower': 65,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 30% chance to lower the target's accuracy by 1 "
                        'stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'mirrorshot',
                'name': 'Mirror Shot',
                'num': 429,
                'pp': 10,
                'priority': 0,
                'secondary': {'boosts': {'accuracy': -1}, 'chance': 30},
                'shortDesc': "30% chance to lower the target's accuracy by 1.",
                'target': 'normal',
                'type': 'Steel',
                'zMovePower': 120},
 'mist': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Beautiful',
          'desc': 'For 5 turns, the user and its party members are protected '
                  'from having their stat stages lowered by other Pokemon. '
                  "Fails if the effect is already active on the user's side.",
          'effect': {'duration': 5,
                     'onBoost': mist.onBoost,
                     'onEnd': mist.onEnd,
                     'onResidualOrder': 21,
                     'onResidualSubOrder': 3,
                     'onStart': mist.onStart},
          'flags': {'snatch': 1},
          'id': 'mist',
          'name': 'Mist',
          'num': 54,
          'pp': 30,
          'priority': 0,
          'secondary': {},
          'shortDesc': "For 5 turns, protects user's party from stat drops.",
          'sideCondition': 'mist',
          'target': 'allySide',
          'type': 'Ice',
          'zMoveEffect': 'heal'},
 'mistball': {'accuracy': 100,
              'basePower': 70,
              'category': 'Special',
              'contestType': 'Clever',
              'desc': "Has a 50% chance to lower the target's Special Attack "
                      'by 1 stage.',
              'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
              'id': 'mistball',
              'name': 'Mist Ball',
              'num': 296,
              'pp': 5,
              'priority': 0,
              'secondary': {'boosts': {'spa': -1}, 'chance': 50},
              'shortDesc': "50% chance to lower the target's Sp. Atk by 1.",
              'target': 'normal',
              'type': 'Psychic',
              'zMovePower': 140},
 'mistyterrain': {'accuracy': True,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Beautiful',
                  'desc': 'For 5 turns, the terrain becomes Misty Terrain. '
                          'During the effect, the power of Dragon-type attacks '
                          'used against grounded Pokemon is multiplied by 0.5 '
                          'and grounded Pokemon cannot be inflicted with a '
                          'major status condition nor confusion. Camouflage '
                          'transforms the user into a Fairy type, Nature Power '
                          'becomes Moonblast, and Secret Power has a 30% '
                          'chance to lower Special Attack by 1 stage. Fails if '
                          'the current terrain is Misty Terrain.',
                  'effect': {'duration': 5,
                             'durationCallback': mistyterrain.durationCallback,
                             'onBasePower': mistyterrain.onBasePower,
                             'onEnd': mistyterrain.onEnd,
                             'onResidualOrder': 21,
                             'onResidualSubOrder': 2,
                             'onSetStatus': mistyterrain.onSetStatus,
                             'onStart': mistyterrain.onStart,
                             'onTryAddVolatile': mistyterrain.onTryAddVolatile},
                  'flags': {'nonsky': 1},
                  'id': 'mistyterrain',
                  'name': 'Misty Terrain',
                  'num': 581,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "5 turns. Can't status,-Dragon power vs "
                               'grounded.',
                  'target': 'all',
                  'terrain': 'mistyterrain',
                  'type': 'Fairy',
                  'zMoveBoost': {'spd': 1}},
 'moonblast': {'accuracy': 100,
               'basePower': 95,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Has a 30% chance to lower the target's Special Attack "
                       'by 1 stage.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'moonblast',
               'isViable': True,
               'name': 'Moonblast',
               'num': 585,
               'pp': 15,
               'priority': 0,
               'secondary': {'boosts': {'spa': -1}, 'chance': 30},
               'shortDesc': "30% chance to lower the target's Sp. Atk by 1.",
               'target': 'normal',
               'type': 'Fairy',
               'zMovePower': 175},
 'moongeistbeam': {'accuracy': 100,
                   'basePower': 100,
                   'category': 'Special',
                   'contestType': 'Cool',
                   'desc': 'This move and its effects ignore the Abilities of '
                           'other Pokemon.',
                   'flags': {'mirror': 1, 'protect': 1},
                   'id': 'moongeistbeam',
                   'ignoreAbility': True,
                   'isViable': True,
                   'name': 'Moongeist Beam',
                   'num': 714,
                   'pp': 5,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': 'Ignores the Abilities of other Pokemon.',
                   'target': 'normal',
                   'type': 'Ghost',
                   'zMovePower': 180},
 'moonlight': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'The user restores 1/2 of its maximum HP if Delta '
                       'Stream or no weather conditions are in effect, 2/3 of '
                       'its maximum HP if the weather is Desolate Land or '
                       'Sunny Day, and 1/4 of its maximum HP if the weather is '
                       'Hail, Primordial Sea, Rain Dance, or Sandstorm, all '
                       'rounded half down.',
               'flags': {'heal': 1, 'snatch': 1},
               'id': 'moonlight',
               'isViable': True,
               'name': 'Moonlight',
               'num': 236,
               'onHit': moonlight.onHit,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Heals the user by a weather-dependent amount.',
               'target': 'self',
               'type': 'Fairy',
               'zMoveEffect': 'clearnegativeboost'},
 'morningsun': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Beautiful',
                'desc': 'The user restores 1/2 of its maximum HP if Delta '
                        'Stream or no weather conditions are in effect, 2/3 of '
                        'its maximum HP if the weather is Desolate Land or '
                        'Sunny Day, and 1/4 of its maximum HP if the weather '
                        'is Hail, Primordial Sea, Rain Dance, or Sandstorm, '
                        'all rounded half down.',
                'flags': {'heal': 1, 'snatch': 1},
                'id': 'morningsun',
                'isViable': True,
                'name': 'Morning Sun',
                'num': 234,
                'onHit': morningsun.onHit,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Heals the user by a weather-dependent amount.',
                'target': 'self',
                'type': 'Normal',
                'zMoveEffect': 'clearnegativeboost'},
 'mudbomb': {'accuracy': 85,
             'basePower': 65,
             'category': 'Special',
             'contestType': 'Cute',
             'desc': "Has a 30% chance to lower the target's accuracy by 1 "
                     'stage.',
             'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
             'id': 'mudbomb',
             'name': 'Mud Bomb',
             'num': 426,
             'pp': 10,
             'priority': 0,
             'secondary': {'boosts': {'accuracy': -1}, 'chance': 30},
             'shortDesc': "30% chance to lower the target's accuracy by 1.",
             'target': 'normal',
             'type': 'Ground',
             'zMovePower': 120},
 'muddywater': {'accuracy': 85,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Tough',
                'desc': "Has a 30% chance to lower the target's accuracy by 1 "
                        'stage.',
                'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                'id': 'muddywater',
                'name': 'Muddy Water',
                'num': 330,
                'pp': 10,
                'priority': 0,
                'secondary': {'boosts': {'accuracy': -1}, 'chance': 30},
                'shortDesc': '30% chance to lower the foe(s) accuracy by 1.',
                'target': 'allAdjacentFoes',
                'type': 'Water',
                'zMovePower': 175},
 'mudshot': {'accuracy': 95,
             'basePower': 55,
             'category': 'Special',
             'contestType': 'Tough',
             'desc': "Has a 100% chance to lower the target's Speed by 1 "
                     'stage.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'mudshot',
             'name': 'Mud Shot',
             'num': 341,
             'pp': 15,
             'priority': 0,
             'secondary': {'boosts': {'spe': -1}, 'chance': 100},
             'shortDesc': "100% chance to lower the target's Speed by 1.",
             'target': 'normal',
             'type': 'Ground',
             'zMovePower': 100},
 'mudslap': {'accuracy': 100,
             'basePower': 20,
             'category': 'Special',
             'contestType': 'Cute',
             'desc': "Has a 100% chance to lower the target's accuracy by 1 "
                     'stage.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'mudslap',
             'name': 'Mud-Slap',
             'num': 189,
             'pp': 10,
             'priority': 0,
             'secondary': {'boosts': {'accuracy': -1}, 'chance': 100},
             'shortDesc': "100% chance to lower the target's accuracy by 1.",
             'target': 'normal',
             'type': 'Ground',
             'zMovePower': 100},
 'mudsport': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cute',
              'desc': 'For 5 turns, all Electric-type attacks used by any '
                      'active Pokemon have their power multiplied by 0.33. '
                      'Fails if this effect is already active.',
              'effect': {'duration': 5,
                         'onBasePower': mudsport.onBasePower,
                         'onBasePowerPriority': 1,
                         'onEnd': mudsport.onEnd,
                         'onResidualOrder': 21,
                         'onStart': mudsport.onStart},
              'flags': {'nonsky': 1},
              'id': 'mudsport',
              'name': 'Mud Sport',
              'num': 300,
              'pp': 15,
              'priority': 0,
              'pseudoWeather': 'mudsport',
              'secondary': {},
              'shortDesc': 'For 5 turns, Electric-type attacks have 1/3 power.',
              'target': 'all',
              'type': 'Ground',
              'zMoveBoost': {'spd': 1}},
 'multiattack': {'accuracy': 100,
                 'basePower': 90,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': "This move's type depends on the user's held Memory.",
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'multiattack',
                 'isViable': True,
                 'name': 'Multi-Attack',
                 'num': 718,
                 'onModifyMove': multiattack.onModifyMove,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Type varies based on the held Memory.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 185},
 'mysticalfire': {'accuracy': 100,
                  'basePower': 75,
                  'category': 'Special',
                  'contestType': 'Beautiful',
                  'desc': "Has a 100% chance to lower the target's Special "
                          'Attack by 1 stage.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'mysticalfire',
                  'name': 'Mystical Fire',
                  'num': 595,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {'boosts': {'spa': -1}, 'chance': 100},
                  'shortDesc': "100% chance to lower the target's Sp. Atk by "
                               '1.',
                  'target': 'normal',
                  'type': 'Fire',
                  'zMovePower': 140},
 'nastyplot': {'accuracy': True,
               'basePower': 0,
               'boosts': {'spa': 2},
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "Raises the user's Special Attack by 2 stages.",
               'flags': {'snatch': 1},
               'id': 'nastyplot',
               'isViable': True,
               'name': 'Nasty Plot',
               'num': 417,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Raises the user's Sp. Atk by 2.",
               'target': 'self',
               'type': 'Dark',
               'zMoveEffect': 'clearnegativeboost'},
 'naturalgift': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': "The type and power of this move depend on the user's "
                         'held Berry, and the Berry is lost. Fails if the user '
                         'is not holding a Berry, if the user has the Klutz '
                         'Ability, or if Embargo or Magic Room is in effect '
                         'for the user.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'naturalgift',
                 'name': 'Natural Gift',
                 'num': 363,
                 'onPrepareHit': naturalgift.onPrepareHit,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Power and type depends on the user's Berry.",
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 160},
 'naturepower': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': 'This move calls another move for use based on the '
                         'battle terrain. Tri Attack on the regular Wi-Fi '
                         'terrain, Thunderbolt during Electric Terrain, '
                         'Moonblast during Misty Terrain, Energy Ball during '
                         'Grassy Terrain, and Psychic during Psychic Terrain.',
                 'flags': {},
                 'id': 'naturepower',
                 'isViable': True,
                 'name': 'Nature Power',
                 'num': 267,
                 'onTryHit': naturepower.onTryHit,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Attack depends on terrain (default Tri Attack).',
                 'target': 'normal',
                 'type': 'Normal'},
 'naturesmadness': {'accuracy': 90,
                    'basePower': 0,
                    'category': 'Special',
                    'contestType': 'Tough',
                    'damageCallback': naturesmadness.damageCallback,
                    'desc': 'Deals damage to the target equal to half of its '
                            'current HP, rounded down, but not less than 1 HP.',
                    'flags': {'mirror': 1, 'protect': 1},
                    'id': 'naturesmadness',
                    'isViable': True,
                    'name': "Nature's Madness",
                    'num': 717,
                    'pp': 10,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': "Does damage equal to 1/2 target's current "
                                 'HP.',
                    'target': 'normal',
                    'type': 'Fairy',
                    'zMovePower': 100},
 'needlearm': {'accuracy': 100,
               'basePower': 60,
               'category': 'Physical',
               'contestType': 'Clever',
               'desc': 'Has a 30% chance to flinch the target.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'needlearm',
               'name': 'Needle Arm',
               'num': 302,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
               'shortDesc': '30% chance to flinch the target.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 120},
 'neverendingnightmare': {'accuracy': True,
                          'basePower': 1,
                          'category': 'Physical',
                          'contestType': 'Cool',
                          'flags': {},
                          'id': 'neverendingnightmare',
                          'isViable': True,
                          'isZ': 'ghostiumz',
                          'name': 'Never-Ending Nightmare',
                          'num': 636,
                          'pp': 1,
                          'priority': 0,
                          'secondary': {},
                          'shortDesc': "Power is equal to the base move's "
                                       'Z-Power.',
                          'target': 'normal',
                          'type': 'Ghost'},
 'nightdaze': {'accuracy': 95,
               'basePower': 85,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': "Has a 40% chance to lower the target's accuracy by 1 "
                       'stage.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'nightdaze',
               'name': 'Night Daze',
               'num': 539,
               'pp': 10,
               'priority': 0,
               'secondary': {'boosts': {'accuracy': -1}, 'chance': 40},
               'shortDesc': "40% chance to lower the target's accuracy by 1.",
               'target': 'normal',
               'type': 'Dark',
               'zMovePower': 160},
 'nightmare': {'accuracy': 100,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'Causes the target to lose 1/4 of its maximum HP, '
                       'rounded down, at the end of each turn as long as it is '
                       'asleep. This move does not affect the target unless it '
                       'is asleep. The effect ends when the target wakes up, '
                       'even if it falls asleep again in the same turn.',
               'effect': {'noCopy': True,
                          'onResidual': nightmare.onResidual,
                          'onResidualOrder': 9,
                          'onStart': nightmare.onStart},
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'nightmare',
               'name': 'Nightmare',
               'num': 171,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'A sleeping target is hurt by 1/4 max HP per turn.',
               'target': 'normal',
               'type': 'Ghost',
               'volatileStatus': 'nightmare',
               'zMoveBoost': {'spa': 1}},
 'nightshade': {'accuracy': 100,
                'basePower': 0,
                'category': 'Special',
                'contestType': 'Clever',
                'damage': 'level',
                'desc': "Deals damage to the target equal to the user's level.",
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'nightshade',
                'isViable': True,
                'name': 'Night Shade',
                'num': 101,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Does damage equal to the user's level.",
                'target': 'normal',
                'type': 'Ghost',
                'zMovePower': 100},
 'nightslash': {'accuracy': 100,
                'basePower': 70,
                'category': 'Physical',
                'contestType': 'Cool',
                'critRatio': 2,
                'desc': 'Has a higher chance for a critical hit.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'nightslash',
                'isViable': True,
                'name': 'Night Slash',
                'num': 400,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'High critical hit ratio.',
                'target': 'normal',
                'type': 'Dark',
                'zMovePower': 140},
 'nobleroar': {'accuracy': 100,
               'basePower': 0,
               'boosts': {'atk': -1, 'spa': -1},
               'category': 'Status',
               'contestType': 'Tough',
               'desc': "Lowers the target's Attack and Special Attack by 1 "
                       'stage.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'protect': 1,
                         'reflectable': 1,
                         'sound': 1},
               'id': 'nobleroar',
               'name': 'Noble Roar',
               'num': 568,
               'pp': 30,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Lowers the target's Attack and Sp. Atk by 1.",
               'target': 'normal',
               'type': 'Normal',
               'zMoveBoost': {'def': 1}},
 'nuzzle': {'accuracy': 100,
            'basePower': 20,
            'category': 'Physical',
            'contestType': 'Cute',
            'desc': 'Has a 100% chance to paralyze the target.',
            'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
            'id': 'nuzzle',
            'isViable': True,
            'name': 'Nuzzle',
            'num': 609,
            'pp': 20,
            'priority': 0,
            'secondary': {'chance': 100, 'status': 'par'},
            'shortDesc': '100% chance to paralyze the target.',
            'target': 'normal',
            'type': 'Electric',
            'zMovePower': 100},
 'oblivionwing': {'accuracy': 100,
                  'basePower': 80,
                  'category': 'Special',
                  'contestType': 'Cool',
                  'desc': 'The user recovers 3/4 the HP lost by the target, '
                          'rounded half up. If Big Root is held by the user, '
                          'the HP recovered is 1.3x normal, rounded half down.',
                  'drain': {'0': 3, '1': 4},
                  'flags': {'distance': 1,
                            'heal': 1,
                            'mirror': 1,
                            'protect': 1},
                  'id': 'oblivionwing',
                  'isViable': True,
                  'name': 'Oblivion Wing',
                  'num': 613,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'User recovers 75% of the damage dealt.',
                  'target': 'any',
                  'type': 'Flying',
                  'zMovePower': 160},
 'oceanicoperetta': {'accuracy': True,
                     'basePower': 195,
                     'category': 'Special',
                     'contestType': 'Cool',
                     'flags': {},
                     'id': 'oceanicoperetta',
                     'isZ': 'primariumz',
                     'name': 'Oceanic Operetta',
                     'num': 697,
                     'pp': 1,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': 'No additional effect.',
                     'target': 'normal',
                     'type': 'Water'},
 'octazooka': {'accuracy': 85,
               'basePower': 65,
               'category': 'Special',
               'contestType': 'Tough',
               'desc': "Has a 50% chance to lower the target's accuracy by 1 "
                       'stage.',
               'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
               'id': 'octazooka',
               'name': 'Octazooka',
               'num': 190,
               'pp': 10,
               'priority': 0,
               'secondary': {'boosts': {'accuracy': -1}, 'chance': 50},
               'shortDesc': "50% chance to lower the target's accuracy by 1.",
               'target': 'normal',
               'type': 'Water',
               'zMovePower': 120},
 'odorsleuth': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'As long as the target remains active, its evasiveness '
                        'stat stage is ignored during accuracy checks against '
                        'it if it is greater than 0, and Normal- and '
                        'Fighting-type attacks can hit the target if it is a '
                        'Ghost type. Fails if the target is already affected, '
                        'or affected by Foresight or Miracle Eye.',
                'flags': {'authentic': 1,
                          'mirror': 1,
                          'mystery': 1,
                          'protect': 1,
                          'reflectable': 1},
                'id': 'odorsleuth',
                'name': 'Odor Sleuth',
                'num': 316,
                'onTryHit': odorsleuth.onTryHit,
                'pp': 40,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Fighting, Normal hit Ghost. Evasiveness ignored.',
                'target': 'normal',
                'type': 'Normal',
                'volatileStatus': 'foresight',
                'zMoveBoost': {'atk': 1}},
 'ominouswind': {'accuracy': 100,
                 'basePower': 60,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': "Has a 10% chance to raise the user's Attack, "
                         'Defense, Special Attack, Special Defense, and Speed '
                         'by 1 stage.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'ominouswind',
                 'name': 'Ominous Wind',
                 'num': 466,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {'chance': 10,
                               'self': {'boosts': {'atk': 1,
                                                   'def': 1,
                                                   'spa': 1,
                                                   'spd': 1,
                                                   'spe': 1}}},
                 'shortDesc': '10% chance to raise all stats by 1 (not '
                              'acc/eva).',
                 'target': 'normal',
                 'type': 'Ghost',
                 'zMovePower': 120},
 'originpulse': {'accuracy': 85,
                 'basePower': 110,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'No additional effect.',
                 'flags': {'mirror': 1, 'protect': 1, 'pulse': 1},
                 'id': 'originpulse',
                 'isViable': True,
                 'name': 'Origin Pulse',
                 'num': 618,
                 'pp': 10,
                 'priority': 0,
                 'shortDesc': 'No additional effect. Hits adjacent foes.',
                 'target': 'allAdjacentFoes',
                 'type': 'Water',
                 'zMovePower': 185},
 'outrage': {'accuracy': 100,
             'basePower': 120,
             'category': 'Physical',
             'contestType': 'Cool',
             'desc': 'The user spends two or three turns locked into this move '
                     'and becomes confused immediately after its move on the '
                     'last turn of the effect if it is not already. This move '
                     'targets an opposing Pokemon at random on each turn. If '
                     'the user is prevented from moving, is asleep at the '
                     'beginning of a turn, or the attack is not successful '
                     'against the target on the first turn of the effect or '
                     'the second turn of a three-turn effect, the effect ends '
                     'without causing confusion. If this move is called by '
                     'Sleep Talk and the user is asleep, the move is used for '
                     'one turn and does not confuse the user.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'outrage',
             'isViable': True,
             'name': 'Outrage',
             'num': 200,
             'onAfterMove': outrage.onAfterMove,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'self': {'volatileStatus': 'lockedmove'},
             'shortDesc': 'Lasts 2-3 turns. Confuses the user afterwards.',
             'target': 'randomNormal',
             'type': 'Dragon',
             'zMovePower': 190},
 'overheat': {'accuracy': 90,
              'basePower': 130,
              'category': 'Special',
              'contestType': 'Beautiful',
              'desc': "Lowers the user's Special Attack by 2 stages.",
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'overheat',
              'isViable': True,
              'name': 'Overheat',
              'num': 315,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'self': {'boosts': {'spa': -2}},
              'shortDesc': "Lowers the user's Sp. Atk by 2.",
              'target': 'normal',
              'type': 'Fire',
              'zMovePower': 195},
 'painsplit': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "The user and the target's HP become the average of "
                       'their current HP, rounded down, but not more than the '
                       'maximum HP of either one.',
               'flags': {'mirror': 1, 'mystery': 1, 'protect': 1},
               'id': 'painsplit',
               'isViable': True,
               'name': 'Pain Split',
               'num': 220,
               'onHit': painsplit.onHit,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Shares HP of user and target equally.',
               'target': 'normal',
               'type': 'Normal',
               'zMoveBoost': {'def': 1}},
 'paleowave': {'accuracy': 100,
               'basePower': 85,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Has a 20% chance to lower the target's Attack by 1 "
                       'stage.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'paleowave',
               'isNonstandard': True,
               'isViable': True,
               'name': 'Paleo Wave',
               'num': 0,
               'pp': 15,
               'priority': 0,
               'secondary': {'boosts': {'atk': -1}, 'chance': 20},
               'shortDesc': "20% chance to lower the target's Attack by 1.",
               'target': 'normal',
               'type': 'Rock',
               'zMovePower': 160},
 'paraboliccharge': {'accuracy': 100,
                     'basePower': 65,
                     'category': 'Special',
                     'contestType': 'Clever',
                     'desc': 'The user recovers 1/2 the HP lost by the target, '
                             'rounded half up. If Big Root is held by the '
                             'user, the HP recovered is 1.3x normal, rounded '
                             'half down.',
                     'drain': {'0': 1, '1': 2},
                     'flags': {'heal': 1, 'mirror': 1, 'protect': 1},
                     'id': 'paraboliccharge',
                     'name': 'Parabolic Charge',
                     'num': 570,
                     'pp': 20,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': 'User recovers 50% of the damage dealt.',
                     'target': 'allAdjacent',
                     'type': 'Electric',
                     'zMovePower': 120},
 'partingshot': {'accuracy': 100,
                 'basePower': 0,
                 'boosts': {'atk': -1, 'spa': -1},
                 'category': 'Status',
                 'contestType': 'Cool',
                 'desc': "Lowers the target's Attack and Special Attack by 1 "
                         'stage. If this move is successful, the user switches '
                         'out even if it is trapped and is replaced '
                         'immediately by a selected party member. The user '
                         "does not switch out if the target's Attack and "
                         'Special Attack stat stages were both unchanged, or '
                         'if there are no unfainted party members.',
                 'flags': {'authentic': 1,
                           'mirror': 1,
                           'protect': 1,
                           'reflectable': 1,
                           'sound': 1},
                 'id': 'partingshot',
                 'isViable': True,
                 'name': 'Parting Shot',
                 'num': 575,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'selfSwitch': True,
                 'shortDesc': "Lowers target's Atk, Sp. Atk by 1. User "
                              'switches.',
                 'target': 'normal',
                 'type': 'Dark',
                 'zMoveEffect': 'healreplacement'},
 'payback': {'accuracy': 100,
             'basePower': 50,
             'basePowerCallback': payback.basePowerCallback,
             'category': 'Physical',
             'contestType': 'Tough',
             'desc': 'Power doubles if the user moves after the target this '
                     'turn, including actions taken through Instruct or the '
                     'Dancer Ability. Switching in does not count as an '
                     'action.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'payback',
             'name': 'Payback',
             'num': 371,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Power doubles if the user moves after the target.',
             'target': 'normal',
             'type': 'Dark',
             'zMovePower': 100},
 'payday': {'accuracy': 100,
            'basePower': 40,
            'category': 'Physical',
            'contestType': 'Clever',
            'desc': 'No additional effect.',
            'flags': {'mirror': 1, 'protect': 1},
            'id': 'payday',
            'name': 'Pay Day',
            'num': 6,
            'onHit': payday.onHit,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Scatters coins.',
            'target': 'normal',
            'type': 'Normal',
            'zMovePower': 100},
 'peck': {'accuracy': 100,
          'basePower': 35,
          'category': 'Physical',
          'contestType': 'Cool',
          'flags': {'contact': 1, 'distance': 1, 'mirror': 1, 'protect': 1},
          'id': 'peck',
          'name': 'Peck',
          'num': 64,
          'pp': 35,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'No additional effect.',
          'target': 'any',
          'type': 'Flying',
          'zMovePower': 100},
 'perishsong': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Beautiful',
                'desc': 'Each active Pokemon receives a perish count of 4 if '
                        "it doesn't already have a perish count. At the end of "
                        'each turn including the turn used, the perish count '
                        'of all active Pokemon lowers by 1 and Pokemon faint '
                        'if the number reaches 0. The perish count is removed '
                        'from Pokemon that switch out. If a Pokemon uses Baton '
                        'Pass while it has a perish count, the replacement '
                        'will gain the perish count and continue to count '
                        'down.',
                'effect': {'duration': 4,
                           'onEnd': perishsong.onEnd,
                           'onResidual': perishsong.onResidual,
                           'onResidualOrder': 20},
                'flags': {'authentic': 1, 'distance': 1, 'sound': 1},
                'id': 'perishsong',
                'isViable': True,
                'name': 'Perish Song',
                'num': 195,
                'onHitField': perishsong.onHitField,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'All active Pokemon will faint in 3 turns.',
                'target': 'all',
                'type': 'Normal',
                'zMoveEffect': 'clearnegativeboost'},
 'petalblizzard': {'accuracy': 100,
                   'basePower': 90,
                   'category': 'Physical',
                   'contestType': 'Beautiful',
                   'desc': 'No additional effect.',
                   'flags': {'mirror': 1, 'protect': 1},
                   'id': 'petalblizzard',
                   'isViable': True,
                   'name': 'Petal Blizzard',
                   'num': 572,
                   'pp': 15,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': 'No additional effect. Hits adjacent Pokemon.',
                   'target': 'allAdjacent',
                   'type': 'Grass',
                   'zMovePower': 175},
 'petaldance': {'accuracy': 100,
                'basePower': 120,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': 'The user spends two or three turns locked into this '
                        'move and becomes confused immediately after its move '
                        'on the last turn of the effect if it is not already. '
                        'This move targets an opposing Pokemon at random on '
                        'each turn. If the user is prevented from moving, is '
                        'asleep at the beginning of a turn, or the attack is '
                        'not successful against the target on the first turn '
                        'of the effect or the second turn of a three-turn '
                        'effect, the effect ends without causing confusion. If '
                        'this move is called by Sleep Talk and the user is '
                        'asleep, the move is used for one turn and does not '
                        'confuse the user.',
                'flags': {'contact': 1, 'dance': 1, 'mirror': 1, 'protect': 1},
                'id': 'petaldance',
                'name': 'Petal Dance',
                'num': 80,
                'onAfterMove': petaldance.onAfterMove,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'self': {'volatileStatus': 'lockedmove'},
                'shortDesc': 'Lasts 2-3 turns. Confuses the user afterwards.',
                'target': 'randomNormal',
                'type': 'Grass',
                'zMovePower': 190},
 'phantomforce': {'accuracy': 100,
                  'basePower': 90,
                  'breaksProtect': True,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'desc': 'If this move is successful, it breaks through the '
                          "target's Baneful Bunker, Detect, King's Shield, "
                          'Protect, or Spiky Shield for this turn, allowing '
                          'other Pokemon to attack the target normally. If the '
                          "target's side is protected by Crafty Shield, Mat "
                          'Block, Quick Guard, or Wide Guard, that protection '
                          'is also broken for this turn and other Pokemon may '
                          "attack the target's side normally. This attack "
                          'charges on the first turn and executes on the '
                          'second. On the first turn, the user avoids all '
                          'attacks. If the user is holding a Power Herb, the '
                          'move completes in one turn.',
                  'effect': {'duration': 2,
                             'onTryImmunity': phantomforce.onTryImmunity},
                  'flags': {'charge': 1, 'contact': 1, 'mirror': 1},
                  'id': 'phantomforce',
                  'name': 'Phantom Force',
                  'num': 566,
                  'onTryMove': phantomforce.onTryMove,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Disappears turn 1. Hits turn 2. Breaks '
                               'protection.',
                  'target': 'normal',
                  'type': 'Ghost',
                  'zMovePower': 175},
 'photongeyser': {'accuracy': 100,
                  'basePower': 100,
                  'category': 'Special',
                  'contestType': 'Cool',
                  'desc': "This move becomes a physical attack if the user's "
                          'Attack is greater than its Special Attack, '
                          'including stat stage changes. This move and its '
                          'effects ignore the Abilities of other Pokemon.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'photongeyser',
                  'ignoreAbility': True,
                  'isViable': True,
                  'name': 'Photon Geyser',
                  'num': 722,
                  'onModifyMove': photongeyser.onModifyMove,
                  'pp': 5,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Physical if user's Atk > Sp. Atk. Ignores "
                               'Abilities.',
                  'target': 'normal',
                  'type': 'Psychic',
                  'zMovePower': 180},
 'pikapapow': {'accuracy': True,
               'basePower': 0,
               'basePowerCallback': pikapapow.basePowerCallback,
               'category': 'Special',
               'contestType': 'Cute',
               'desc': "Power is equal to the greater of (user's Happiness * "
                       '2/5), rounded down, or 1.',
               'flags': {'protect': 1},
               'id': 'pikapapow',
               'isNonstandard': True,
               'isUnreleased': True,
               'isViable': True,
               'name': 'Pika Papow',
               'num': 732,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Max happiness: 102 power. Can't miss.",
               'target': 'normal',
               'type': 'Electric'},
 'pinmissile': {'accuracy': 95,
                'basePower': 25,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                        'or three times, and a 1/6 chance to hit four or five '
                        "times. If one of the hits breaks the target's "
                        'substitute, it will take damage for the remaining '
                        'hits. If the user has the Skill Link Ability, this '
                        'move will always hit five times.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'pinmissile',
                'multihit': {'0': 2, '1': 5},
                'name': 'Pin Missile',
                'num': 42,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 2-5 times in one turn.',
                'target': 'normal',
                'type': 'Bug',
                'zMovePower': 140},
 'plasmafists': {'accuracy': 100,
                 'basePower': 100,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'If this move is successful, causes Normal-type moves '
                         'to become Electric type this turn.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                 'id': 'plasmafists',
                 'isViable': True,
                 'name': 'Plasma Fists',
                 'num': 721,
                 'pp': 15,
                 'priority': 0,
                 'pseudoWeather': 'iondeluge',
                 'secondary': {},
                 'shortDesc': 'Normal moves become Electric type this turn.',
                 'target': 'normal',
                 'type': 'Electric',
                 'zMovePower': 180},
 'playnice': {'accuracy': True,
              'basePower': 0,
              'boosts': {'atk': -1},
              'category': 'Status',
              'contestType': 'Cute',
              'desc': "Lowers the target's Attack by 1 stage.",
              'flags': {'authentic': 1, 'mirror': 1, 'reflectable': 1},
              'id': 'playnice',
              'name': 'Play Nice',
              'num': 589,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Lowers the target's Attack by 1.",
              'target': 'normal',
              'type': 'Normal',
              'zMoveBoost': {'def': 1}},
 'playrough': {'accuracy': 90,
               'basePower': 90,
               'category': 'Physical',
               'contestType': 'Cute',
               'desc': "Has a 10% chance to lower the target's Attack by 1 "
                       'stage.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'playrough',
               'isViable': True,
               'name': 'Play Rough',
               'num': 583,
               'pp': 10,
               'priority': 0,
               'secondary': {'boosts': {'atk': -1}, 'chance': 10},
               'shortDesc': "10% chance to lower the target's Attack by 1.",
               'target': 'normal',
               'type': 'Fairy',
               'zMovePower': 175},
 'pluck': {'accuracy': 100,
           'basePower': 60,
           'category': 'Physical',
           'contestType': 'Cute',
           'desc': 'If this move is successful and the user has not fainted, '
                   "it steals the target's held Berry if it is holding one and "
                   'eats it immediately, gaining its effects even if the '
                   "user's item is being ignored. Items lost to this move "
                   'cannot be regained with Recycle or the Harvest Ability.',
           'flags': {'contact': 1, 'distance': 1, 'mirror': 1, 'protect': 1},
           'id': 'pluck',
           'name': 'Pluck',
           'num': 365,
           'onHit': pluck.onHit,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'shortDesc': "User steals and eats the target's Berry.",
           'target': 'any',
           'type': 'Flying',
           'zMovePower': 120},
 'poisonfang': {'accuracy': 100,
                'basePower': 50,
                'category': 'Physical',
                'contestType': 'Clever',
                'desc': 'Has a 50% chance to badly poison the target.',
                'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'poisonfang',
                'name': 'Poison Fang',
                'num': 305,
                'pp': 15,
                'priority': 0,
                'secondary': {'chance': 50, 'status': 'tox'},
                'shortDesc': '50% chance to badly poison the target.',
                'target': 'normal',
                'type': 'Poison',
                'zMovePower': 100},
 'poisongas': {'accuracy': 90,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'Poisons the target.',
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'poisongas',
               'name': 'Poison Gas',
               'num': 139,
               'pp': 40,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Poisons the foe(s).',
               'status': 'psn',
               'target': 'allAdjacentFoes',
               'type': 'Poison',
               'zMoveBoost': {'def': 1}},
 'poisonjab': {'accuracy': 100,
               'basePower': 80,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Has a 30% chance to poison the target.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'poisonjab',
               'isViable': True,
               'name': 'Poison Jab',
               'num': 398,
               'pp': 20,
               'priority': 0,
               'secondary': {'chance': 30, 'status': 'psn'},
               'shortDesc': '30% chance to poison the target.',
               'target': 'normal',
               'type': 'Poison',
               'zMovePower': 160},
 'poisonpowder': {'accuracy': 75,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Clever',
                  'desc': 'Poisons the target.',
                  'flags': {'mirror': 1,
                            'powder': 1,
                            'protect': 1,
                            'reflectable': 1},
                  'id': 'poisonpowder',
                  'name': 'Poison Powder',
                  'num': 77,
                  'pp': 35,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Poisons the target.',
                  'status': 'psn',
                  'target': 'normal',
                  'type': 'Poison',
                  'zMoveBoost': {'def': 1}},
 'poisonsting': {'accuracy': 100,
                 'basePower': 15,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': 'Has a 30% chance to poison the target.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'poisonsting',
                 'name': 'Poison Sting',
                 'num': 40,
                 'pp': 35,
                 'priority': 0,
                 'secondary': {'chance': 30, 'status': 'psn'},
                 'shortDesc': '30% chance to poison the target.',
                 'target': 'normal',
                 'type': 'Poison',
                 'zMovePower': 100},
 'poisontail': {'accuracy': 100,
                'basePower': 50,
                'category': 'Physical',
                'contestType': 'Clever',
                'critRatio': 2,
                'desc': 'Has a 10% chance to poison the target and a higher '
                        'chance for a critical hit.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'poisontail',
                'name': 'Poison Tail',
                'num': 342,
                'pp': 25,
                'priority': 0,
                'secondary': {'chance': 10, 'status': 'psn'},
                'shortDesc': 'High critical hit ratio. 10% chance to poison.',
                'target': 'normal',
                'type': 'Poison',
                'zMovePower': 100},
 'pollenpuff': {'accuracy': 100,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Cute',
                'desc': 'If the target is an ally, this move restores 1/2 of '
                        'its maximum HP, rounded down, instead of dealing '
                        'damage.',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'pollenpuff',
                'name': 'Pollen Puff',
                'num': 676,
                'onTryHit': pollenpuff.onTryHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'If the target is an ally, heals 50% of its max '
                             'HP.',
                'target': 'normal',
                'type': 'Bug',
                'zMovePower': 175},
 'pound': {'accuracy': 100,
           'basePower': 40,
           'category': 'Physical',
           'contestType': 'Tough',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'pound',
           'name': 'Pound',
           'num': 1,
           'pp': 35,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'No additional effect.',
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 100},
 'powder': {'accuracy': 100,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Clever',
            'desc': 'If the target uses a Fire-type move this turn, it is '
                    'prevented from executing and the target loses 1/4 of its '
                    'maximum HP, rounded half up. This effect does not happen '
                    'if the Fire-type move is prevented by Primordial Sea.',
            'effect': {'duration': 1,
                       'onStart': powder.onStart,
                       'onTryMove': powder.onTryMove,
                       'onTryMovePriority': -1},
            'flags': {'authentic': 1,
                      'mirror': 1,
                      'powder': 1,
                      'protect': 1,
                      'reflectable': 1},
            'id': 'powder',
            'name': 'Powder',
            'num': 600,
            'pp': 20,
            'priority': 1,
            'secondary': {},
            'shortDesc': 'If using a Fire move, target loses 1/4 max HP.',
            'target': 'normal',
            'type': 'Bug',
            'volatileStatus': 'powder',
            'zMoveBoost': {'spd': 2}},
 'powdersnow': {'accuracy': 100,
                'basePower': 40,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': 'Has a 10% chance to freeze the target.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'powdersnow',
                'name': 'Powder Snow',
                'num': 181,
                'pp': 25,
                'priority': 0,
                'secondary': {'chance': 10, 'status': 'frz'},
                'shortDesc': '10% chance to freeze the foe(s).',
                'target': 'allAdjacentFoes',
                'type': 'Ice',
                'zMovePower': 100},
 'powergem': {'accuracy': 100,
              'basePower': 80,
              'category': 'Special',
              'contestType': 'Beautiful',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'powergem',
              'isViable': True,
              'name': 'Power Gem',
              'num': 408,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Rock',
              'zMovePower': 160},
 'powersplit': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'The user and the target have their Attack and Special '
                        'Attack stats set to be equal to the average of the '
                        "user and the target's Attack and Special Attack "
                        'stats, respectively, rounded down. Stat stage changes '
                        'are unaffected.',
                'flags': {'mystery': 1, 'protect': 1},
                'id': 'powersplit',
                'name': 'Power Split',
                'num': 471,
                'onHit': powersplit.onHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Averages Attack and Sp. Atk stats with target.',
                'target': 'normal',
                'type': 'Psychic',
                'zMoveBoost': {'spe': 1}},
 'powerswap': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The user swaps its Attack and Special Attack stat '
                       'stage changes with the target.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'mystery': 1,
                         'protect': 1},
               'id': 'powerswap',
               'name': 'Power Swap',
               'num': 384,
               'onHit': powerswap.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Swaps Attack and Sp. Atk stat stages with target.',
               'target': 'normal',
               'type': 'Psychic',
               'zMoveBoost': {'spe': 1}},
 'powertrick': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'The user swaps its Attack and Defense stats, and stat '
                        'stage changes remain on their respective stats. This '
                        'move can be used again to swap the stats back. If the '
                        'user uses Baton Pass, the replacement will have its '
                        'Attack and Defense stats swapped if the effect is '
                        'active. If the user has its stats recalculated by '
                        'changing forme while its stats are swapped, this '
                        'effect is ignored but is still active for the '
                        'purposes of Baton Pass.',
                'effect': {'onCopy': powertrick.onCopy,
                           'onEnd': powertrick.onEnd,
                           'onRestart': powertrick.onRestart,
                           'onStart': powertrick.onStart},
                'flags': {'snatch': 1},
                'id': 'powertrick',
                'name': 'Power Trick',
                'num': 379,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Switches user's Attack and Defense stats.",
                'target': 'self',
                'type': 'Psychic',
                'volatileStatus': 'powertrick',
                'zMoveBoost': {'atk': 1}},
 'powertrip': {'accuracy': 100,
               'basePower': 20,
               'basePowerCallback': powertrip.basePowerCallback,
               'category': 'Physical',
               'contestType': 'Clever',
               'desc': "Power is equal to 20+(X*20), where X is the user's "
                       'total stat stage changes that are greater than 0.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'powertrip',
               'name': 'Power Trip',
               'num': 681,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': " + 20 power for each of the user's stat boosts.",
               'target': 'normal',
               'type': 'Dark',
               'zMovePower': 160},
 'poweruppunch': {'accuracy': 100,
                  'basePower': 40,
                  'category': 'Physical',
                  'contestType': 'Tough',
                  'desc': "Has a 100% chance to raise the user's Attack by 1 "
                          'stage.',
                  'flags': {'contact': 1,
                            'mirror': 1,
                            'protect': 1,
                            'punch': 1},
                  'id': 'poweruppunch',
                  'isViable': True,
                  'name': 'Power-Up Punch',
                  'num': 612,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {'chance': 100, 'self': {'boosts': {'atk': 1}}},
                  'shortDesc': "100% chance to raise the user's Attack by 1.",
                  'target': 'normal',
                  'type': 'Fighting',
                  'zMovePower': 100},
 'powerwhip': {'accuracy': 85,
               'basePower': 120,
               'category': 'Physical',
               'contestType': 'Tough',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'powerwhip',
               'isViable': True,
               'name': 'Power Whip',
               'num': 438,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 190},
 'precipiceblades': {'accuracy': 85,
                     'basePower': 120,
                     'category': 'Physical',
                     'contestType': 'Cool',
                     'desc': 'No additional effect.',
                     'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                     'id': 'precipiceblades',
                     'isViable': True,
                     'name': 'Precipice Blades',
                     'num': 619,
                     'pp': 10,
                     'priority': 0,
                     'shortDesc': 'No additional effect. Hits adjacent foes.',
                     'target': 'allAdjacentFoes',
                     'type': 'Ground',
                     'zMovePower': 190},
 'present': {'accuracy': 90,
             'basePower': 0,
             'category': 'Physical',
             'contestType': 'Cute',
             'desc': 'If this move is successful, it deals damage or heals the '
                     'target. 40% chance for 40 power, 30% chance for 80 '
                     'power, 10% chance for 120 power, and 20% chance to heal '
                     'the target by 1/4 of its maximum HP, rounded down.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'present',
             'name': 'Present',
             'num': 217,
             'onModifyMove': present.onModifyMove,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': '40, 80, 120 power, or heals target 1/4 max HP.',
             'target': 'normal',
             'type': 'Normal',
             'zMovePower': 100},
 'prismaticlaser': {'accuracy': 100,
                    'basePower': 160,
                    'category': 'Special',
                    'contestType': 'Cool',
                    'desc': 'If this move is successful, the user must '
                            'recharge on the following turn and cannot select '
                            'a move.',
                    'flags': {'mirror': 1, 'protect': 1, 'recharge': 1},
                    'id': 'prismaticlaser',
                    'name': 'Prismatic Laser',
                    'num': 711,
                    'pp': 10,
                    'priority': 0,
                    'secondary': {},
                    'self': {'volatileStatus': 'mustrecharge'},
                    'shortDesc': 'User cannot move next turn.',
                    'target': 'normal',
                    'type': 'Psychic',
                    'zMovePower': 200},
 'protect': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Cute',
             'desc': 'The user is protected from most attacks made by other '
                     'Pokemon during this turn. This move has a 1/X chance of '
                     'being successful, where X starts at 1 and triples each '
                     'time this move is successfully used. X resets to 1 if '
                     "this move fails, if the user's last move used is not "
                     "Baneful Bunker, Detect, Endure, King's Shield, Protect, "
                     'Quick Guard, Spiky Shield, or Wide Guard, or if it was '
                     "one of those moves and the user's protection was broken. "
                     'Fails if the user moves last this turn.',
             'effect': {'duration': 1,
                        'onStart': protect.onStart,
                        'onTryHit': protect.onTryHit,
                        'onTryHitPriority': 3},
             'flags': {},
             'id': 'protect',
             'isViable': True,
             'name': 'Protect',
             'num': 182,
             'onHit': protect.onHit,
             'onPrepareHit': protect.onPrepareHit,
             'pp': 10,
             'priority': 4,
             'secondary': {},
             'shortDesc': 'Prevents moves from affecting the user this turn.',
             'stallingMove': True,
             'target': 'self',
             'type': 'Normal',
             'volatileStatus': 'protect',
             'zMoveEffect': 'clearnegativeboost'},
 'psybeam': {'accuracy': 100,
             'basePower': 65,
             'category': 'Special',
             'contestType': 'Beautiful',
             'desc': 'Has a 10% chance to confuse the target.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'psybeam',
             'name': 'Psybeam',
             'num': 60,
             'pp': 20,
             'priority': 0,
             'secondary': {'chance': 10, 'volatileStatus': 'confusion'},
             'shortDesc': '10% chance to confuse the target.',
             'target': 'normal',
             'type': 'Psychic',
             'zMovePower': 120},
 'psychic': {'accuracy': 100,
             'basePower': 90,
             'category': 'Special',
             'contestType': 'Clever',
             'desc': "Has a 10% chance to lower the target's Special Defense "
                     'by 1 stage.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'psychic',
             'isViable': True,
             'name': 'Psychic',
             'num': 94,
             'pp': 10,
             'priority': 0,
             'secondary': {'boosts': {'spd': -1}, 'chance': 10},
             'shortDesc': "10% chance to lower the target's Sp. Def by 1.",
             'target': 'normal',
             'type': 'Psychic',
             'zMovePower': 175},
 'psychicfangs': {'accuracy': 100,
                  'basePower': 85,
                  'category': 'Physical',
                  'contestType': 'Clever',
                  'desc': 'If this attack does not miss, the effects of '
                          'Reflect, Light Screen, and Aurora Veil end for the '
                          "target's side of the field before damage is "
                          'calculated.',
                  'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
                  'id': 'psychicfangs',
                  'isViable': True,
                  'name': 'Psychic Fangs',
                  'num': 706,
                  'onTryHit': psychicfangs.onTryHit,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': 'Destroys screens, unless the target is immune.',
                  'target': 'normal',
                  'type': 'Psychic',
                  'zMovePower': 160},
 'psychicterrain': {'accuracy': True,
                    'basePower': 0,
                    'category': 'Status',
                    'contestType': 'Clever',
                    'desc': 'For 5 turns, the terrain becomes Psychic Terrain. '
                            'During the effect, the power of Psychic-type '
                            'attacks made by grounded Pokemon is multiplied by '
                            '1.5 and grounded Pokemon cannot be hit by moves '
                            'with priority greater than 0, unless the target '
                            'is an ally. Camouflage transforms the user into a '
                            'Psychic type, Nature Power becomes Psychic, and '
                            'Secret Power has a 30% chance to lower the '
                            "target's Speed by 1 stage. Fails if the current "
                            'terrain is Psychic Terrain.',
                    'effect': {'duration': 5,
                               'durationCallback': psychicterrain.durationCallback,
                               'onBasePower': psychicterrain.onBasePower,
                               'onEnd': psychicterrain.onEnd,
                               'onResidualOrder': 21,
                               'onResidualSubOrder': 2,
                               'onStart': psychicterrain.onStart,
                               'onTryHit': psychicterrain.onTryHit,
                               'onTryHitPriority': 4},
                    'flags': {'nonsky': 1},
                    'id': 'psychicterrain',
                    'name': 'Psychic Terrain',
                    'num': 678,
                    'pp': 10,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': '5 turns. Grounded: +Psychic power, '
                                 'priority-safe.',
                    'target': 'all',
                    'terrain': 'psychicterrain',
                    'type': 'Psychic',
                    'zMoveBoost': {'spa': 1}},
 'psychoboost': {'accuracy': 90,
                 'basePower': 140,
                 'category': 'Special',
                 'contestType': 'Clever',
                 'desc': "Lowers the user's Special Attack by 2 stages.",
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'psychoboost',
                 'isViable': True,
                 'name': 'Psycho Boost',
                 'num': 354,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'boosts': {'spa': -2}},
                 'shortDesc': "Lowers the user's Sp. Atk by 2.",
                 'target': 'normal',
                 'type': 'Psychic',
                 'zMovePower': 200},
 'psychocut': {'accuracy': 100,
               'basePower': 70,
               'category': 'Physical',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'psychocut',
               'isViable': True,
               'name': 'Psycho Cut',
               'num': 427,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio.',
               'target': 'normal',
               'type': 'Psychic',
               'zMovePower': 140},
 'psychoshift': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "The user's major status condition is transferred to "
                         'the target, and the user is then cured. Fails if the '
                         'user has no major status condition or if the target '
                         'already has one.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'psychoshift',
                 'name': 'Psycho Shift',
                 'num': 375,
                 'onPrepareHit': psychoshift.onPrepareHit,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'self': {'onHit': psychoshift.onHit},
                 'shortDesc': "Transfers the user's status ailment to the "
                              'target.',
                 'target': 'normal',
                 'type': 'Psychic',
                 'zMoveBoost': {'spa': 2}},
 'psychup': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': "The user copies all of the target's current stat stage "
                     'changes.',
             'flags': {'authentic': 1, 'mystery': 1},
             'id': 'psychup',
             'name': 'Psych Up',
             'num': 244,
             'onHit': psychup.onHit,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Copies the target's current stat stages.",
             'target': 'normal',
             'type': 'Normal',
             'zMoveEffect': 'heal'},
 'psyshock': {'accuracy': 100,
              'basePower': 80,
              'category': 'Special',
              'contestType': 'Beautiful',
              'defensiveCategory': 'Physical',
              'desc': 'Deals damage to the target based on its Defense instead '
                      'of Special Defense.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'psyshock',
              'isViable': True,
              'name': 'Psyshock',
              'num': 473,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Damages target based on Defense, not Sp. Def.',
              'target': 'normal',
              'type': 'Psychic',
              'zMovePower': 160},
 'psystrike': {'accuracy': 100,
               'basePower': 100,
               'category': 'Special',
               'contestType': 'Cool',
               'defensiveCategory': 'Physical',
               'desc': 'Deals damage to the target based on its Defense '
                       'instead of Special Defense.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'psystrike',
               'isViable': True,
               'name': 'Psystrike',
               'num': 540,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Damages target based on Defense, not Sp. Def.',
               'target': 'normal',
               'type': 'Psychic',
               'zMovePower': 180},
 'psywave': {'accuracy': 100,
             'basePower': 0,
             'category': 'Special',
             'contestType': 'Clever',
             'damageCallback': psywave.damageCallback,
             'desc': "Deals damage to the target equal to (user's level) * (X "
                     '+ 50) / 100, where X is a random number from 0 to 100, '
                     'rounded down, but not less than 1 HP.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'psywave',
             'name': 'Psywave',
             'num': 149,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Random damage equal to 0.5x-1.5x user's level.",
             'target': 'normal',
             'type': 'Psychic',
             'zMovePower': 100},
 'pulverizingpancake': {'accuracy': True,
                        'basePower': 210,
                        'category': 'Physical',
                        'contestType': 'Cool',
                        'flags': {'contact': 1},
                        'id': 'pulverizingpancake',
                        'isZ': 'snorliumz',
                        'name': 'Pulverizing Pancake',
                        'num': 701,
                        'pp': 1,
                        'priority': 0,
                        'secondary': {},
                        'shortDesc': 'No additional effect.',
                        'target': 'normal',
                        'type': 'Normal'},
 'punishment': {'accuracy': 100,
                'basePower': 0,
                'basePowerCallback': punishment.basePowerCallback,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': "Power is equal to 60+(X*20), where X is the target's "
                        'total stat stage changes that are greater than 0, but '
                        'not more than 200 power.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'punishment',
                'name': 'Punishment',
                'num': 386,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': "60 power +20 for each of the target's stat "
                             'boosts.',
                'target': 'normal',
                'type': 'Dark',
                'zMovePower': 160},
 'purify': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Beautiful',
            'desc': 'The target is cured if it has a major status condition. '
                    'If the target was cured, the user restores 1/2 of its '
                    'maximum HP, rounded half up.',
            'flags': {'heal': 1, 'protect': 1, 'reflectable': 1},
            'id': 'purify',
            'name': 'Purify',
            'num': 685,
            'onHit': purify.onHit,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': "Cures target's status; heals user 1/2 maxHP if so.",
            'target': 'normal',
            'type': 'Poison',
            'zMoveBoost': {'atk': 1, 'def': 1, 'spa': 1, 'spd': 1, 'spe': 1}},
 'pursuit': {'accuracy': 100,
             'basePower': 40,
             'basePowerCallback': pursuit.basePowerCallback,
             'beforeTurnCallback': pursuit.beforeTurnCallback,
             'category': 'Physical',
             'contestType': 'Clever',
             'desc': 'If an opposing Pokemon switches out this turn, this move '
                     'hits that Pokemon before it leaves the field, even if it '
                     'was not the original target. If the user moves after an '
                     'opponent using Parting Shot, U-turn, or Volt Switch, but '
                     'not Baton Pass, it will hit that opponent before it '
                     'leaves the field. Power doubles and no accuracy check is '
                     'done if the user hits an opponent switching out, and the '
                     "user's turn is over; if an opponent faints from this, "
                     'the replacement Pokemon does not become active until the '
                     'end of the turn.',
             'effect': {'duration': 1,
                        'onBeforeSwitchOut': pursuit.onBeforeSwitchOut},
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'pursuit',
             'isViable': True,
             'name': 'Pursuit',
             'num': 228,
             'onModifyMove': pursuit.onModifyMove,
             'onTryHit': pursuit.onTryHit,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Power doubles if a foe is switching out.',
             'target': 'normal',
             'type': 'Dark',
             'zMovePower': 100},
 'quash': {'accuracy': 100,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Clever',
           'desc': 'Causes the target to take its turn after all other Pokemon '
                   'this turn, no matter the priority of its selected move. '
                   'Fails if the target already moved this turn.',
           'flags': {'mirror': 1, 'protect': 1},
           'id': 'quash',
           'name': 'Quash',
           'num': 511,
           'onHit': quash.onHit,
           'pp': 15,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Forces the target to move last this turn.',
           'target': 'normal',
           'type': 'Dark',
           'zMoveBoost': {'spe': 1}},
 'quickattack': {'accuracy': 100,
                 'basePower': 40,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'No additional effect.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'quickattack',
                 'isViable': True,
                 'name': 'Quick Attack',
                 'num': 98,
                 'pp': 30,
                 'priority': 1,
                 'secondary': {},
                 'shortDesc': 'Usually goes first.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 100},
 'quickguard': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cool',
                'desc': 'The user and its party members are protected from '
                        'attacks with original or altered priority greater '
                        'than 0 made by other Pokemon, including allies, '
                        'during this turn. This move modifies the same 1/X '
                        'chance of being successful used by other protection '
                        'moves, where X starts at 1 and triples each time this '
                        'move is successfully used, but does not use the '
                        'chance to check for failure. X resets to 1 if this '
                        "move fails, if the user's last move used is not "
                        "Baneful Bunker, Detect, Endure, King's Shield, "
                        'Protect, Quick Guard, Spiky Shield, or Wide Guard, or '
                        "if it was one of those moves and the user's "
                        'protection was broken. Fails if the user moves last '
                        'this turn or if this move is already in effect for '
                        "the user's side.",
                'effect': {'duration': 1,
                           'onStart': quickguard.onStart,
                           'onTryHit': quickguard.onTryHit,
                           'onTryHitPriority': 4},
                'flags': {'snatch': 1},
                'id': 'quickguard',
                'name': 'Quick Guard',
                'num': 501,
                'onHitSide': quickguard.onHitSide,
                'onTryHitSide': quickguard.onTryHitSide,
                'pp': 15,
                'priority': 3,
                'secondary': {},
                'shortDesc': 'Protects allies from priority attacks this turn.',
                'sideCondition': 'quickguard',
                'target': 'allySide',
                'type': 'Fighting',
                'zMoveBoost': {'def': 1}},
 'quiverdance': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'spa': 1, 'spd': 1, 'spe': 1},
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': "Raises the user's Special Attack, Special Defense, "
                         'and Speed by 1 stage.',
                 'flags': {'dance': 1, 'snatch': 1},
                 'id': 'quiverdance',
                 'isViable': True,
                 'name': 'Quiver Dance',
                 'num': 483,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Sp. Atk, Sp. Def, Speed by 1.",
                 'target': 'self',
                 'type': 'Bug',
                 'zMoveEffect': 'clearnegativeboost'},
 'rage': {'accuracy': 100,
          'basePower': 20,
          'category': 'Physical',
          'contestType': 'Tough',
          'desc': "Once this move is successfully used, the user's Attack is "
                  "raised by 1 stage every time it is hit by another Pokemon's "
                  'attack as long as this move is chosen for use.',
          'effect': {'onBeforeMove': rage.onBeforeMove,
                     'onBeforeMovePriority': 100,
                     'onHit': rage.onHit,
                     'onStart': rage.onStart},
          'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
          'id': 'rage',
          'name': 'Rage',
          'num': 99,
          'pp': 20,
          'priority': 0,
          'secondary': {},
          'self': {'volatileStatus': 'rage'},
          'shortDesc': "Raises the user's Attack by 1 if hit during use.",
          'target': 'normal',
          'type': 'Normal',
          'zMovePower': 100},
 'ragepowder': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'Until the end of the turn, all single-target attacks '
                        'from the opposing side are redirected to the user. '
                        'Such attacks are redirected to the user before they '
                        'can be reflected by Magic Coat or the Magic Bounce '
                        'Ability, or drawn in by the Lightning Rod or Storm '
                        'Drain Abilities. Fails if it is not a Double Battle '
                        'or Battle Royal. This effect is ignored while the '
                        'user is under the effect of Sky Drop.',
                'effect': {'duration': 1,
                           'onFoeRedirectTarget': ragepowder.onFoeRedirectTarget,
                           'onFoeRedirectTargetPriority': 1,
                           'onStart': ragepowder.onStart},
                'flags': {'powder': 1},
                'id': 'ragepowder',
                'name': 'Rage Powder',
                'num': 476,
                'onTryHit': ragepowder.onTryHit,
                'pp': 20,
                'priority': 2,
                'secondary': {},
                'shortDesc': "The foes' moves target the user on the turn "
                             'used.',
                'target': 'self',
                'type': 'Bug',
                'volatileStatus': 'ragepowder',
                'zMoveEffect': 'clearnegativeboost'},
 'raindance': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'For 5 turns, the weather becomes Rain Dance. The '
                       'damage of Water-type attacks is multiplied by 1.5 and '
                       'the damage of Fire-type attacks is multiplied by 0.5 '
                       'during the effect. Lasts for 8 turns if the user is '
                       'holding Damp Rock. Fails if the current weather is '
                       'Rain Dance.',
               'flags': {},
               'id': 'raindance',
               'name': 'Rain Dance',
               'num': 240,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'For 5 turns, heavy rain powers Water moves.',
               'target': 'all',
               'type': 'Water',
               'weather': 'RainDance',
               'zMoveBoost': {'spe': 1}},
 'rapidspin': {'accuracy': 100,
               'basePower': 20,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': 'If this move is successful and the user has not '
                       'fainted, the effects of Leech Seed and binding moves '
                       'end for the user, and all hazards are removed from the '
                       "user's side of the field.",
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'rapidspin',
               'isViable': True,
               'name': 'Rapid Spin',
               'num': 229,
               'pp': 40,
               'priority': 0,
               'secondary': {},
               'self': {'onHit': rapidspin.onHit},
               'shortDesc': 'Frees user from hazards, binding, Leech Seed.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 100},
 'razorleaf': {'accuracy': 95,
               'basePower': 55,
               'category': 'Physical',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'razorleaf',
               'name': 'Razor Leaf',
               'num': 75,
               'pp': 25,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio. Hits adjacent foes.',
               'target': 'allAdjacentFoes',
               'type': 'Grass',
               'zMovePower': 100},
 'razorshell': {'accuracy': 95,
                'basePower': 75,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': "Has a 50% chance to lower the target's Defense by 1 "
                        'stage.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'razorshell',
                'isViable': True,
                'name': 'Razor Shell',
                'num': 534,
                'pp': 10,
                'priority': 0,
                'secondary': {'boosts': {'def': -1}, 'chance': 50},
                'shortDesc': "50% chance to lower the target's Defense by 1.",
                'target': 'normal',
                'type': 'Water',
                'zMovePower': 140},
 'razorwind': {'accuracy': 100,
               'basePower': 80,
               'category': 'Special',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit. This attack '
                       'charges on the first turn and executes on the second. '
                       'If the user is holding a Power Herb, the move '
                       'completes in one turn.',
               'flags': {'charge': 1, 'mirror': 1, 'protect': 1},
               'id': 'razorwind',
               'name': 'Razor Wind',
               'num': 13,
               'onTryMove': razorwind.onTryMove,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Charges, then hits foe(s) turn 2. High crit '
                            'ratio.',
               'target': 'allAdjacentFoes',
               'type': 'Normal',
               'zMovePower': 160},
 'recover': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': 'The user restores 1/2 of its maximum HP, rounded half '
                     'up.',
             'flags': {'heal': 1, 'snatch': 1},
             'heal': {'0': 1, '1': 2},
             'id': 'recover',
             'isViable': True,
             'name': 'Recover',
             'num': 105,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Heals the user by 50% of its max HP.',
             'target': 'self',
             'type': 'Normal',
             'zMoveEffect': 'clearnegativeboost'},
 'recycle': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': 'The user regains the item it last used. Fails if the '
                     'user is holding an item, if the user has not held an '
                     'item, if the item was a popped Air Balloon, if the item '
                     'was picked up by a Pokemon with the Pickup Ability, or '
                     'if the item was lost to Bug Bite, Covet, Incinerate, '
                     'Knock Off, Pluck, or Thief. Items thrown with Fling can '
                     'be regained.',
             'flags': {'snatch': 1},
             'id': 'recycle',
             'name': 'Recycle',
             'num': 278,
             'onHit': recycle.onHit,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Restores the item the user last used.',
             'target': 'self',
             'type': 'Normal',
             'zMoveBoost': {'spe': 2}},
 'reflect': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Clever',
             'desc': 'For 5 turns, the user and its party members take 0.5x '
                     'damage from physical attacks, or 0.66x damage if in a '
                     'Double Battle. Damage is not reduced further with Aurora '
                     'Veil. Critical hits ignore this effect. It is removed '
                     "from the user's side if the user or an ally is "
                     'successfully hit by Brick Break, Psychic Fangs, or '
                     'Defog. Lasts for 8 turns if the user is holding Light '
                     'Clay. Fails if the effect is already active on the '
                     "user's side.",
             'effect': {'duration': 5,
                        'durationCallback': reflect.durationCallback,
                        'onAnyModifyDamage': reflect.onAnyModifyDamage,
                        'onEnd': reflect.onEnd,
                        'onResidualOrder': 21,
                        'onStart': reflect.onStart},
             'flags': {'snatch': 1},
             'id': 'reflect',
             'isViable': True,
             'name': 'Reflect',
             'num': 115,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'For 5 turns, physical damage to allies is halved.',
             'sideCondition': 'reflect',
             'target': 'allySide',
             'type': 'Psychic',
             'zMoveBoost': {'def': 1}},
 'reflecttype': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "Causes the user's types to become the same as the "
                         "current types of the target. If the target's current "
                         'types include typeless and a non-added type, '
                         "typeless is ignored. If the target's current types "
                         "include typeless and an added type from Forest's "
                         'Curse or Trick-or-Treat, typeless is copied as the '
                         'Normal type instead. Fails if the user is an Arceus '
                         "or a Silvally, or if the target's current type is "
                         'typeless alone.',
                 'flags': {'authentic': 1, 'mystery': 1, 'protect': 1},
                 'id': 'reflecttype',
                 'name': 'Reflect Type',
                 'num': 513,
                 'onHit': reflecttype.onHit,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'User becomes the same type as the target.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMoveBoost': {'spa': 1}},
 'refresh': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Cute',
             'desc': 'The user cures its burn, poison, or paralysis. Fails if '
                     'the user is not burned, poisoned, or paralyzed.',
             'flags': {'snatch': 1},
             'id': 'refresh',
             'isViable': True,
             'name': 'Refresh',
             'num': 287,
             'onHit': refresh.onHit,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'User cures its burn, poison, or paralysis.',
             'target': 'self',
             'type': 'Normal',
             'zMoveEffect': 'heal'},
 'relicsong': {'accuracy': 100,
               'basePower': 75,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Has a 10% chance to cause the target to fall asleep. '
                       'If this move is successful on at least one target and '
                       'the user is a Meloetta, it changes to Pirouette Forme '
                       'if it is currently in Aria Forme, or changes to Aria '
                       'Forme if it is currently in Pirouette Forme. This '
                       'forme change does not happen if the Meloetta has the '
                       'Sheer Force Ability. The Pirouette Forme reverts to '
                       'Aria Forme when Meloetta is not active.',
               'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
               'id': 'relicsong',
               'isViable': True,
               'name': 'Relic Song',
               'num': 547,
               'onAfterMoveSecondarySelf': relicsong.onAfterMoveSecondarySelf,
               'onHit': relicsong.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {'chance': 10, 'status': 'slp'},
               'shortDesc': '10% chance to sleep foe(s). Meloetta transforms.',
               'target': 'allAdjacentFoes',
               'type': 'Normal',
               'zMovePower': 140},
 'rest': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Cute',
          'desc': 'The user falls asleep for the next two turns and restores '
                  'all of its HP, curing itself of any major status condition '
                  'in the process. Fails if the user has full HP, is already '
                  'asleep, or if another effect is preventing sleep.',
          'flags': {'heal': 1, 'snatch': 1},
          'id': 'rest',
          'isViable': True,
          'name': 'Rest',
          'num': 156,
          'onHit': rest.onHit,
          'onTryMove': rest.onTryMove,
          'pp': 10,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'User sleeps 2 turns and restores HP and status.',
          'target': 'self',
          'type': 'Psychic',
          'zMoveEffect': 'clearnegativeboost'},
 'retaliate': {'accuracy': 100,
               'basePower': 70,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': "Power doubles if one of the user's party members "
                       'fainted last turn.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'retaliate',
               'name': 'Retaliate',
               'num': 514,
               'onBasePower': retaliate.onBasePower,
               'onBasePowerPriority': 4,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Power doubles if an ally fainted last turn.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 140},
 'return': {'accuracy': 100,
            'basePower': 0,
            'basePowerCallback': Return.basePowerCallback,
            'category': 'Physical',
            'contestType': 'Cute',
            'desc': "Power is equal to the greater of (user's Happiness * "
                    '2/5), rounded down, or 1.',
            'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
            'id': 'return',
            'isViable': True,
            'name': 'Return',
            'num': 216,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Max 102 power at maximum Happiness.',
            'target': 'normal',
            'type': 'Normal',
            'zMovePower': 160},
 'revelationdance': {'accuracy': 100,
                     'basePower': 90,
                     'category': 'Special',
                     'contestType': 'Beautiful',
                     'desc': "This move's type depends on the user's primary "
                             "type. If the user's primary type is typeless, "
                             "this move's type is the user's secondary type if "
                             'it has one, otherwise the added type from '
                             "Forest's Curse or Trick-or-Treat. This move is "
                             "typeless if the user's type is typeless alone.",
                     'flags': {'dance': 1, 'mirror': 1, 'protect': 1},
                     'id': 'revelationdance',
                     'isViable': True,
                     'name': 'Revelation Dance',
                     'num': 686,
                     'onModifyMove': revelationdance.onModifyMove,
                     'pp': 15,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "Type varies based on the user's primary "
                                  'type.',
                     'target': 'normal',
                     'type': 'Normal',
                     'zMovePower': 175},
 'revenge': {'accuracy': 100,
             'basePower': 60,
             'basePowerCallback': revenge.basePowerCallback,
             'category': 'Physical',
             'contestType': 'Tough',
             'desc': 'Power doubles if the user was hit by the target this '
                     'turn.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'revenge',
             'name': 'Revenge',
             'num': 279,
             'pp': 10,
             'priority': -4,
             'secondary': {},
             'shortDesc': 'Power doubles if user is damaged by the target.',
             'target': 'normal',
             'type': 'Fighting',
             'zMovePower': 120},
 'reversal': {'accuracy': 100,
              'basePower': 0,
              'basePowerCallback': reversal.basePowerCallback,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': 'The power of this move is 20 if X is 33 to 48, 40 if X '
                      'is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, '
                      '150 if X is 2 to 4, and 200 if X is 0 or 1, where X is '
                      "equal to (user's current HP * 48 / user's maximum HP), "
                      'rounded down.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'reversal',
              'name': 'Reversal',
              'num': 179,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'More power the less HP the user has left.',
              'target': 'normal',
              'type': 'Fighting',
              'zMovePower': 160},
 'roar': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Cool',
          'desc': 'The target is forced to switch out and be replaced with a '
                  'random unfainted ally. Fails if the target is the last '
                  'unfainted Pokemon in its party, or if the target used '
                  'Ingrain previously or has the Suction Cups Ability.',
          'flags': {'authentic': 1,
                    'mirror': 1,
                    'mystery': 1,
                    'reflectable': 1,
                    'sound': 1},
          'forceSwitch': True,
          'id': 'roar',
          'isViable': True,
          'name': 'Roar',
          'num': 46,
          'pp': 20,
          'priority': -6,
          'secondary': {},
          'shortDesc': 'Forces the target to switch to a random ally.',
          'target': 'normal',
          'type': 'Normal',
          'zMoveBoost': {'def': 1}},
 'roaroftime': {'accuracy': 90,
                'basePower': 150,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': 'If this move is successful, the user must recharge on '
                        'the following turn and cannot select a move.',
                'flags': {'mirror': 1, 'protect': 1, 'recharge': 1},
                'id': 'roaroftime',
                'name': 'Roar of Time',
                'num': 459,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'self': {'volatileStatus': 'mustrecharge'},
                'shortDesc': 'User cannot move next turn.',
                'target': 'normal',
                'type': 'Dragon',
                'zMovePower': 200},
 'rockblast': {'accuracy': 90,
               'basePower': 25,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Hits two to five times. Has a 1/3 chance to hit two or '
                       'three times, and a 1/6 chance to hit four or five '
                       "times. If one of the hits breaks the target's "
                       'substitute, it will take damage for the remaining '
                       'hits. If the user has the Skill Link Ability, this '
                       'move will always hit five times.',
               'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
               'id': 'rockblast',
               'isViable': True,
               'multihit': {'0': 2, '1': 5},
               'name': 'Rock Blast',
               'num': 350,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Hits 2-5 times in one turn.',
               'target': 'normal',
               'type': 'Rock',
               'zMovePower': 140},
 'rockclimb': {'accuracy': 85,
               'basePower': 90,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Has a 20% chance to confuse the target.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'rockclimb',
               'name': 'Rock Climb',
               'num': 431,
               'pp': 20,
               'priority': 0,
               'secondary': {'chance': 20, 'volatileStatus': 'confusion'},
               'shortDesc': '20% chance to confuse the target.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 175},
 'rockpolish': {'accuracy': True,
                'basePower': 0,
                'boosts': {'spe': 2},
                'category': 'Status',
                'contestType': 'Tough',
                'desc': "Raises the user's Speed by 2 stages.",
                'flags': {'snatch': 1},
                'id': 'rockpolish',
                'isViable': True,
                'name': 'Rock Polish',
                'num': 397,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Raises the user's Speed by 2.",
                'target': 'self',
                'type': 'Rock',
                'zMoveEffect': 'clearnegativeboost'},
 'rockslide': {'accuracy': 90,
               'basePower': 75,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Has a 30% chance to flinch the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'rockslide',
               'isViable': True,
               'name': 'Rock Slide',
               'num': 157,
               'pp': 10,
               'priority': 0,
               'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
               'shortDesc': '30% chance to flinch the foe(s).',
               'target': 'allAdjacentFoes',
               'type': 'Rock',
               'zMovePower': 140},
 'rocksmash': {'accuracy': 100,
               'basePower': 40,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': "Has a 50% chance to lower the target's Defense by 1 "
                       'stage.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'rocksmash',
               'name': 'Rock Smash',
               'num': 249,
               'pp': 15,
               'priority': 0,
               'secondary': {'boosts': {'def': -1}, 'chance': 50},
               'shortDesc': "50% chance to lower the target's Defense by 1.",
               'target': 'normal',
               'type': 'Fighting',
               'zMovePower': 100},
 'rockthrow': {'accuracy': 90,
               'basePower': 50,
               'category': 'Physical',
               'contestType': 'Tough',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'rockthrow',
               'name': 'Rock Throw',
               'num': 88,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'No additional effect.',
               'target': 'normal',
               'type': 'Rock',
               'zMovePower': 100},
 'rocktomb': {'accuracy': 95,
              'basePower': 60,
              'category': 'Physical',
              'contestType': 'Clever',
              'desc': "Has a 100% chance to lower the target's Speed by 1 "
                      'stage.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'rocktomb',
              'name': 'Rock Tomb',
              'num': 317,
              'pp': 15,
              'priority': 0,
              'secondary': {'boosts': {'spe': -1}, 'chance': 100},
              'shortDesc': "100% chance to lower the target's Speed by 1.",
              'target': 'normal',
              'type': 'Rock',
              'zMovePower': 120},
 'rockwrecker': {'accuracy': 90,
                 'basePower': 150,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': 'If this move is successful, the user must recharge '
                         'on the following turn and cannot select a move.',
                 'flags': {'bullet': 1,
                           'mirror': 1,
                           'protect': 1,
                           'recharge': 1},
                 'id': 'rockwrecker',
                 'name': 'Rock Wrecker',
                 'num': 439,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'self': {'volatileStatus': 'mustrecharge'},
                 'shortDesc': 'User cannot move next turn.',
                 'target': 'normal',
                 'type': 'Rock',
                 'zMovePower': 200},
 'roleplay': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cute',
              'desc': "The user's Ability changes to match the target's "
                      "Ability. Fails if the user's Ability is Battle Bond, "
                      'Comatose, Disguise, Multitype, Power Construct, RKS '
                      'System, Schooling, Shields Down, Stance Change, or '
                      "already matches the target, or if the target's Ability "
                      'is Battle Bond, Comatose, Disguise, Flower Gift, '
                      'Forecast, Illusion, Imposter, Multitype, Power '
                      'Construct, Power of Alchemy, Receiver, RKS System, '
                      'Schooling, Shields Down, Stance Change, Trace, Wonder '
                      'Guard, or Zen Mode.',
              'flags': {'authentic': 1, 'mystery': 1},
              'id': 'roleplay',
              'name': 'Role Play',
              'num': 272,
              'onHit': roleplay.onHit,
              'onTryHit': roleplay.onTryHit,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': "User replaces its Ability with the target's.",
              'target': 'normal',
              'type': 'Psychic',
              'zMoveBoost': {'spe': 1}},
 'rollingkick': {'accuracy': 85,
                 'basePower': 60,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'Has a 30% chance to flinch the target.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'rollingkick',
                 'name': 'Rolling Kick',
                 'num': 27,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
                 'shortDesc': '30% chance to flinch the target.',
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 120},
 'rollout': {'accuracy': 90,
             'basePower': 30,
             'basePowerCallback': rollout.basePowerCallback,
             'category': 'Physical',
             'contestType': 'Cute',
             'desc': 'If this move is successful, the user is locked into this '
                     'move and cannot make another move until it misses, 5 '
                     'turns have passed, or the attack cannot be used. Power '
                     'doubles with each successful hit of this move and '
                     'doubles again if Defense Curl was used previously by the '
                     'user. If this move is called by Sleep Talk, the move is '
                     'used for one turn. If this move hits an active Disguise '
                     'during the effect, the power multiplier is paused but '
                     'the turn counter is not, potentially allowing the '
                     "multiplier to be used on the user's next move after this "
                     'effect ends.',
             'effect': {'duration': 2,
                        'onLockMove': 'rollout',
                        'onResidual': rollout.onResidual,
                        'onRestart': rollout.onRestart,
                        'onStart': rollout.onStart},
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'rollout',
             'name': 'Rollout',
             'num': 205,
             'pp': 20,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Power doubles with each hit. Repeats for 5 turns.',
             'target': 'normal',
             'type': 'Rock',
             'zMovePower': 100},
 'roost': {'accuracy': True,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Clever',
           'desc': 'The user restores 1/2 of its maximum HP, rounded half up. '
                   'Until the end of the turn, Flying-type users lose their '
                   'Flying type and pure Flying-type users become Normal type. '
                   "Does nothing if the user's HP is full.",
           'effect': {'duration': 1,
                      'onResidualOrder': 20,
                      'onType': roost.onType,
                      'onTypePriority': -1},
           'flags': {'heal': 1, 'snatch': 1},
           'heal': {'0': 1, '1': 2},
           'id': 'roost',
           'isViable': True,
           'name': 'Roost',
           'num': 355,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'self': {'volatileStatus': 'roost'},
           'shortDesc': "Heals 50% HP. Flying-type removed 'til turn ends.",
           'target': 'self',
           'type': 'Flying',
           'zMoveEffect': 'clearnegativeboost'},
 'rototiller': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Tough',
                'desc': 'Raises the Attack and Special Attack of all grounded '
                        'Grass-type Pokemon on the field by 1 stage.',
                'flags': {'distance': 1, 'nonsky': 1},
                'id': 'rototiller',
                'name': 'Rototiller',
                'num': 563,
                'onHitField': rototiller.onHitField,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Raises Atk/Sp. Atk of grounded Grass types by 1.',
                'target': 'all',
                'type': 'Ground',
                'zMoveBoost': {'atk': 1}},
 'round': {'accuracy': 100,
           'basePower': 60,
           'basePowerCallback': round.basePowerCallback,
           'category': 'Special',
           'contestType': 'Beautiful',
           'desc': 'If there are other active Pokemon that chose this move for '
                   'use this turn, those Pokemon take their turn immediately '
                   "after the user, in Speed order, and this move's power is "
                   '120 for each other user.',
           'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
           'id': 'round',
           'name': 'Round',
           'num': 496,
           'onTry': round.onTry,
           'pp': 15,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Power doubles if others used Round this turn.',
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 120},
 'sacredfire': {'accuracy': 95,
                'basePower': 100,
                'category': 'Physical',
                'contestType': 'Beautiful',
                'desc': 'Has a 50% chance to burn the target.',
                'flags': {'defrost': 1, 'mirror': 1, 'protect': 1},
                'id': 'sacredfire',
                'isViable': True,
                'name': 'Sacred Fire',
                'num': 221,
                'pp': 5,
                'priority': 0,
                'secondary': {'chance': 50, 'status': 'brn'},
                'shortDesc': '50% chance to burn the target. Thaws user.',
                'target': 'normal',
                'type': 'Fire',
                'zMovePower': 180},
 'sacredsword': {'accuracy': 100,
                 'basePower': 90,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': "Ignores the target's stat stage changes, including "
                         'evasiveness.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'sacredsword',
                 'ignoreDefensive': True,
                 'ignoreEvasion': True,
                 'isViable': True,
                 'name': 'Sacred Sword',
                 'num': 533,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Ignores the target's stat stage changes.",
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 175},
 'safeguard': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'For 5 turns, the user and its party members cannot '
                       'have major status conditions or confusion inflicted on '
                       "them by other Pokemon. It is removed from the user's "
                       'side if the user or an ally is successfully hit by '
                       'Defog. Fails if the effect is already active on the '
                       "user's side.",
               'effect': {'duration': 5,
                          'durationCallback': safeguard.durationCallback,
                          'onEnd': safeguard.onEnd,
                          'onResidualOrder': 21,
                          'onResidualSubOrder': 2,
                          'onSetStatus': safeguard.onSetStatus,
                          'onStart': safeguard.onStart,
                          'onTryAddVolatile': safeguard.onTryAddVolatile},
               'flags': {'snatch': 1},
               'id': 'safeguard',
               'name': 'Safeguard',
               'num': 219,
               'pp': 25,
               'priority': 0,
               'secondary': {},
               'shortDesc': "For 5 turns, protects user's party from status.",
               'sideCondition': 'safeguard',
               'target': 'allySide',
               'type': 'Normal',
               'zMoveBoost': {'spe': 1}},
 'sandattack': {'accuracy': 100,
                'basePower': 0,
                'boosts': {'accuracy': -1},
                'category': 'Status',
                'contestType': 'Cute',
                'desc': "Lowers the target's accuracy by 1 stage.",
                'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                'id': 'sandattack',
                'name': 'Sand Attack',
                'num': 28,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Lowers the target's accuracy by 1.",
                'target': 'normal',
                'type': 'Ground',
                'zMoveBoost': {'evasion': 1}},
 'sandstorm': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Tough',
               'desc': 'For 5 turns, the weather becomes Sandstorm. At the end '
                       'of each turn except the last, all active Pokemon lose '
                       '1/16 of their maximum HP, rounded down, unless they '
                       'are a Ground, Rock, or Steel type, or have the Magic '
                       'Guard, Overcoat, Sand Force, Sand Rush, or Sand Veil '
                       'Abilities. During the effect, the Special Defense of '
                       'Rock-type Pokemon is multiplied by 1.5 when taking '
                       'damage from a special attack. Lasts for 8 turns if the '
                       'user is holding Smooth Rock. Fails if the current '
                       'weather is Sandstorm.',
               'flags': {},
               'id': 'sandstorm',
               'name': 'Sandstorm',
               'num': 201,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'For 5 turns, a sandstorm rages.',
               'target': 'all',
               'type': 'Rock',
               'weather': 'Sandstorm',
               'zMoveBoost': {'spe': 1}},
 'sandtomb': {'accuracy': 85,
              'basePower': 35,
              'category': 'Physical',
              'contestType': 'Clever',
              'desc': 'Prevents the target from switching for four or five '
                      'turns (seven turns if the user is holding Grip Claw). '
                      'Causes damage to the target equal to 1/8 of its maximum '
                      'HP (1/6 if the user is holding Binding Band), rounded '
                      'down, at the end of each turn during effect. The target '
                      'can still switch out if it is holding Shed Shell or '
                      'uses Baton Pass, Parting Shot, U-turn, or Volt Switch. '
                      'The effect ends if either the user or the target leaves '
                      'the field, or if the target uses Rapid Spin or '
                      'Substitute successfully. This effect is not stackable '
                      'or reset by using this or another binding move.',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'sandtomb',
              'name': 'Sand Tomb',
              'num': 328,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Traps and damages the target for 4-5 turns.',
              'target': 'normal',
              'type': 'Ground',
              'volatileStatus': 'partiallytrapped',
              'zMovePower': 100},
 'sappyseed': {'accuracy': 100,
               'basePower': 90,
               'category': 'Physical',
               'contestType': 'Clever',
               'desc': 'This move summons Leech Seed on the foe.',
               'flags': {'protect': 1, 'reflectable': 1},
               'id': 'sappyseed',
               'isNonstandard': True,
               'isUnreleased': True,
               'isViable': True,
               'name': 'Sappy Seed',
               'num': 738,
               'onHit': sappyseed.onHit,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Summons Leech Seed.',
               'target': 'normal',
               'type': 'Grass'},
 'savagespinout': {'accuracy': True,
                   'basePower': 1,
                   'category': 'Physical',
                   'contestType': 'Cool',
                   'flags': {},
                   'id': 'savagespinout',
                   'isZ': 'buginiumz',
                   'name': 'Savage Spin-Out',
                   'num': 634,
                   'pp': 1,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': "Power is equal to the base move's Z-Power.",
                   'target': 'normal',
                   'type': 'Bug'},
 'scald': {'accuracy': 100,
           'basePower': 80,
           'category': 'Special',
           'contestType': 'Tough',
           'desc': 'Has a 30% chance to burn the target. The target thaws out '
                   'if it is frozen.',
           'flags': {'defrost': 1, 'mirror': 1, 'protect': 1},
           'id': 'scald',
           'isViable': True,
           'name': 'Scald',
           'num': 503,
           'pp': 15,
           'priority': 0,
           'secondary': {'chance': 30, 'status': 'brn'},
           'shortDesc': '30% chance to burn the target. Thaws target.',
           'target': 'normal',
           'thawsTarget': True,
           'type': 'Water',
           'zMovePower': 160},
 'scaryface': {'accuracy': 100,
               'basePower': 0,
               'boosts': {'spe': -2},
               'category': 'Status',
               'contestType': 'Tough',
               'desc': "Lowers the target's Speed by 2 stages.",
               'flags': {'mirror': 1,
                         'mystery': 1,
                         'protect': 1,
                         'reflectable': 1},
               'id': 'scaryface',
               'name': 'Scary Face',
               'num': 184,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Lowers the target's Speed by 2.",
               'target': 'normal',
               'type': 'Normal',
               'zMoveBoost': {'spe': 1}},
 'scratch': {'accuracy': 100,
             'basePower': 40,
             'category': 'Physical',
             'contestType': 'Tough',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'scratch',
             'name': 'Scratch',
             'num': 10,
             'pp': 35,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'No additional effect.',
             'target': 'normal',
             'type': 'Normal',
             'zMovePower': 100},
 'screech': {'accuracy': 85,
             'basePower': 0,
             'boosts': {'def': -2},
             'category': 'Status',
             'contestType': 'Clever',
             'desc': "Lowers the target's Defense by 2 stages.",
             'flags': {'authentic': 1,
                       'mirror': 1,
                       'mystery': 1,
                       'protect': 1,
                       'reflectable': 1,
                       'sound': 1},
             'id': 'screech',
             'name': 'Screech',
             'num': 103,
             'pp': 40,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Lowers the target's Defense by 2.",
             'target': 'normal',
             'type': 'Normal',
             'zMoveBoost': {'atk': 1}},
 'searingshot': {'accuracy': 100,
                 'basePower': 100,
                 'category': 'Special',
                 'contestType': 'Cool',
                 'desc': 'Has a 30% chance to burn the target.',
                 'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                 'id': 'searingshot',
                 'isViable': True,
                 'name': 'Searing Shot',
                 'num': 545,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {'chance': 30, 'status': 'brn'},
                 'shortDesc': '30% chance to burn adjacent Pokemon.',
                 'target': 'allAdjacent',
                 'type': 'Fire',
                 'zMovePower': 180},
 'searingsunrazesmash': {'accuracy': True,
                         'basePower': 200,
                         'category': 'Physical',
                         'contestType': 'Cool',
                         'desc': 'This move and its effects ignore the '
                                 'Abilities of other Pokemon.',
                         'flags': {'contact': 1},
                         'id': 'searingsunrazesmash',
                         'ignoreAbility': True,
                         'isZ': 'solganiumz',
                         'name': 'Searing Sunraze Smash',
                         'num': 724,
                         'pp': 1,
                         'priority': 0,
                         'secondary': {},
                         'shortDesc': 'Ignores the Abilities of other Pokemon.',
                         'target': 'normal',
                         'type': 'Steel'},
 'secretpower': {'accuracy': 100,
                 'basePower': 70,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': 'Has a 30% chance to cause a secondary effect on the '
                         'target based on the battle terrain. Causes paralysis '
                         'on the regular Wi-Fi terrain, causes paralysis '
                         'during Electric Terrain, lowers Special Attack by 1 '
                         'stage during Misty Terrain, causes sleep during '
                         'Grassy Terrain and lowers Speed by 1 stage during '
                         'Psychic Terrain.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'secretpower',
                 'name': 'Secret Power',
                 'num': 290,
                 'onModifyMove': secretpower.onModifyMove,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {'chance': 30, 'status': 'par'},
                 'shortDesc': 'Effect varies with terrain. (30% paralysis '
                              'chance)',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 140},
 'secretsword': {'accuracy': 100,
                 'basePower': 85,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'defensiveCategory': 'Physical',
                 'desc': 'Deals damage to the target based on its Defense '
                         'instead of Special Defense.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'secretsword',
                 'isViable': True,
                 'name': 'Secret Sword',
                 'num': 548,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Damages target based on Defense, not Sp. Def.',
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 160},
 'seedbomb': {'accuracy': 100,
              'basePower': 80,
              'category': 'Physical',
              'contestType': 'Tough',
              'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
              'id': 'seedbomb',
              'isViable': True,
              'name': 'Seed Bomb',
              'num': 402,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Grass',
              'zMovePower': 160},
 'seedflare': {'accuracy': 85,
               'basePower': 120,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Has a 40% chance to lower the target's Special Defense "
                       'by 2 stages.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'seedflare',
               'isViable': True,
               'name': 'Seed Flare',
               'num': 465,
               'pp': 5,
               'priority': 0,
               'secondary': {'boosts': {'spd': -2}, 'chance': 40},
               'shortDesc': "40% chance to lower the target's Sp. Def by 2.",
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 190},
 'seismictoss': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'damage': 'level',
                 'desc': "Deals damage to the target equal to the user's "
                         'level.',
                 'flags': {'contact': 1,
                           'mirror': 1,
                           'nonsky': 1,
                           'protect': 1},
                 'id': 'seismictoss',
                 'isViable': True,
                 'name': 'Seismic Toss',
                 'num': 69,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Does damage equal to the user's level.",
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 100},
 'selfdestruct': {'accuracy': 100,
                  'basePower': 200,
                  'category': 'Physical',
                  'contestType': 'Beautiful',
                  'desc': 'The user faints after using this move, even if this '
                          'move fails for having no target. This move is '
                          'prevented from executing if any active Pokemon has '
                          'the Damp Ability.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'selfdestruct',
                  'name': 'Self-Destruct',
                  'num': 120,
                  'pp': 5,
                  'priority': 0,
                  'secondary': {},
                  'selfdestruct': 'always',
                  'shortDesc': 'Hits adjacent Pokemon. The user faints.',
                  'target': 'allAdjacent',
                  'type': 'Normal',
                  'zMovePower': 200},
 'shadowball': {'accuracy': 100,
                'basePower': 80,
                'category': 'Special',
                'contestType': 'Clever',
                'desc': "Has a 20% chance to lower the target's Special "
                        'Defense by 1 stage.',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'shadowball',
                'isViable': True,
                'name': 'Shadow Ball',
                'num': 247,
                'pp': 15,
                'priority': 0,
                'secondary': {'boosts': {'spd': -1}, 'chance': 20},
                'shortDesc': "20% chance to lower the target's Sp. Def by 1.",
                'target': 'normal',
                'type': 'Ghost',
                'zMovePower': 160},
 'shadowbone': {'accuracy': 100,
                'basePower': 85,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': "Has a 20% chance to lower the target's Defense by 1 "
                        'stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'shadowbone',
                'isViable': True,
                'name': 'Shadow Bone',
                'num': 708,
                'pp': 10,
                'priority': 0,
                'secondary': {'boosts': {'def': -1}, 'chance': 20},
                'shortDesc': "20% chance to lower the target's Defense by 1.",
                'target': 'normal',
                'type': 'Ghost',
                'zMovePower': 160},
 'shadowclaw': {'accuracy': 100,
                'basePower': 70,
                'category': 'Physical',
                'contestType': 'Cool',
                'critRatio': 2,
                'desc': 'Has a higher chance for a critical hit.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'shadowclaw',
                'isViable': True,
                'name': 'Shadow Claw',
                'num': 421,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'High critical hit ratio.',
                'target': 'normal',
                'type': 'Ghost',
                'zMovePower': 140},
 'shadowforce': {'accuracy': 100,
                 'basePower': 120,
                 'breaksProtect': True,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'If this move is successful, it breaks through the '
                         "target's Baneful Bunker, Detect, King's Shield, "
                         'Protect, or Spiky Shield for this turn, allowing '
                         'other Pokemon to attack the target normally. If the '
                         "target's side is protected by Crafty Shield, Mat "
                         'Block, Quick Guard, or Wide Guard, that protection '
                         'is also broken for this turn and other Pokemon may '
                         "attack the target's side normally. This attack "
                         'charges on the first turn and executes on the '
                         'second. On the first turn, the user avoids all '
                         'attacks. If the user is holding a Power Herb, the '
                         'move completes in one turn.',
                 'effect': {'duration': 2,
                            'onTryImmunity': shadowforce.onTryImmunity},
                 'flags': {'charge': 1, 'contact': 1, 'mirror': 1},
                 'id': 'shadowforce',
                 'isViable': True,
                 'name': 'Shadow Force',
                 'num': 467,
                 'onTryMove': shadowforce.onTryMove,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Disappears turn 1. Hits turn 2. Breaks '
                              'protection.',
                 'target': 'normal',
                 'type': 'Ghost',
                 'zMovePower': 190},
 'shadowpunch': {'accuracy': True,
                 'basePower': 60,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                 'id': 'shadowpunch',
                 'isViable': True,
                 'name': 'Shadow Punch',
                 'num': 325,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'This move does not check accuracy.',
                 'target': 'normal',
                 'type': 'Ghost',
                 'zMovePower': 120},
 'shadowsneak': {'accuracy': 100,
                 'basePower': 40,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': 'No additional effect.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'shadowsneak',
                 'isViable': True,
                 'name': 'Shadow Sneak',
                 'num': 425,
                 'pp': 30,
                 'priority': 1,
                 'secondary': {},
                 'shortDesc': 'Usually goes first.',
                 'target': 'normal',
                 'type': 'Ghost',
                 'zMovePower': 100},
 'shadowstrike': {'accuracy': 95,
                  'basePower': 80,
                  'category': 'Physical',
                  'contestType': 'Clever',
                  'desc': "Has a 50% chance to lower the target's Defense by 1 "
                          'stage.',
                  'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                  'id': 'shadowstrike',
                  'isNonstandard': True,
                  'isViable': True,
                  'name': 'Shadow Strike',
                  'num': 0,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {'boosts': {'def': -1}, 'chance': 50},
                  'shortDesc': "50% chance to lower the target's Defense by 1.",
                  'target': 'normal',
                  'type': 'Ghost',
                  'zMovePower': 160},
 'sharpen': {'accuracy': True,
             'basePower': 0,
             'boosts': {'atk': 1},
             'category': 'Status',
             'contestType': 'Cute',
             'desc': "Raises the user's Attack by 1 stage.",
             'flags': {'snatch': 1},
             'id': 'sharpen',
             'name': 'Sharpen',
             'num': 159,
             'pp': 30,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Raises the user's Attack by 1.",
             'target': 'self',
             'type': 'Normal',
             'zMoveBoost': {'atk': 1}},
 'shatteredpsyche': {'accuracy': True,
                     'basePower': 1,
                     'category': 'Physical',
                     'contestType': 'Cool',
                     'flags': {},
                     'id': 'shatteredpsyche',
                     'isViable': True,
                     'isZ': 'psychiumz',
                     'name': 'Shattered Psyche',
                     'num': 648,
                     'pp': 1,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "Power is equal to the base move's Z-Power.",
                     'target': 'normal',
                     'type': 'Psychic'},
 'sheercold': {'accuracy': 30,
               'basePower': 0,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': "Deals damage to the target equal to the target's "
                       'maximum HP. Ignores accuracy and evasiveness '
                       "modifiers. This attack's accuracy is equal to (user's "
                       "level - target's level + X)%, where X is 30 if the "
                       'user is an Ice type and 20 otherwise, and fails if the '
                       'target is at a higher level. Ice-type Pokemon and '
                       'Pokemon with the Sturdy Ability are immune.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'sheercold',
               'name': 'Sheer Cold',
               'num': 329,
               'ohko': 'Ice',
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': "OHKOs non-Ice targets. Fails if user's lower "
                            'level.',
               'target': 'normal',
               'type': 'Ice',
               'zMovePower': 180},
 'shellsmash': {'accuracy': True,
                'basePower': 0,
                'boosts': {'atk': 2, 'def': -1, 'spa': 2, 'spd': -1, 'spe': 2},
                'category': 'Status',
                'contestType': 'Tough',
                'desc': "Lowers the user's Defense and Special Defense by 1 "
                        "stage. Raises the user's Attack, Special Attack, and "
                        'Speed by 2 stages.',
                'flags': {'snatch': 1},
                'id': 'shellsmash',
                'isViable': True,
                'name': 'Shell Smash',
                'num': 504,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Lowers Def, SpD by 1; raises Atk, SpA, Spe by 2.',
                'target': 'self',
                'type': 'Normal',
                'zMoveEffect': 'clearnegativeboost'},
 'shelltrap': {'accuracy': 100,
               'basePower': 150,
               'beforeMoveCallback': shelltrap.beforeMoveCallback,
               'beforeTurnCallback': shelltrap.beforeTurnCallback,
               'category': 'Special',
               'contestType': 'Tough',
               'desc': 'Fails unless the user is hit by a physical attack from '
                       'an opponent this turn before it can execute the move. '
                       'If the user was hit and has not fainted, it attacks '
                       'immediately after being hit, and the effect ends. If '
                       "the opponent's physical attack had a secondary effect "
                       'removed by the Sheer Force Ability, it does not count '
                       'for the purposes of this effect.',
               'effect': {'duration': 1,
                          'onHit': shelltrap.onHit,
                          'onStart': shelltrap.onStart},
               'flags': {'protect': 1},
               'id': 'shelltrap',
               'name': 'Shell Trap',
               'num': 704,
               'pp': 5,
               'priority': -3,
               'secondary': {},
               'shortDesc': 'User must take physical damage before moving.',
               'target': 'allAdjacentFoes',
               'type': 'Fire',
               'zMovePower': 200},
 'shiftgear': {'accuracy': True,
               'basePower': 0,
               'boosts': {'atk': 1, 'spe': 2},
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "Raises the user's Speed by 2 stages and its Attack by "
                       '1 stage.',
               'flags': {'snatch': 1},
               'id': 'shiftgear',
               'isViable': True,
               'name': 'Shift Gear',
               'num': 508,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Raises the user's Speed by 2 and Attack by 1.",
               'target': 'self',
               'type': 'Steel',
               'zMoveEffect': 'clearnegativeboost'},
 'shockwave': {'accuracy': True,
               'basePower': 60,
               'category': 'Special',
               'contestType': 'Cool',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'shockwave',
               'name': 'Shock Wave',
               'num': 351,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'This move does not check accuracy.',
               'target': 'normal',
               'type': 'Electric',
               'zMovePower': 120},
 'shoreup': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Beautiful',
             'desc': 'The user restores 1/2 of its maximum HP, rounded half '
                     'down. If the weather is Sandstorm, the user instead '
                     'restores 2/3 of its maximum HP, rounded half down.',
             'flags': {'heal': 1, 'snatch': 1},
             'id': 'shoreup',
             'isViable': True,
             'name': 'Shore Up',
             'num': 659,
             'onHit': shoreup.onHit,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'User restores 1/2 its max HP; 2/3 in Sandstorm.',
             'target': 'self',
             'type': 'Ground',
             'zMoveEffect': 'clearnegativeboost'},
 'signalbeam': {'accuracy': 100,
                'basePower': 75,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': 'Has a 10% chance to confuse the target.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'signalbeam',
                'isViable': True,
                'name': 'Signal Beam',
                'num': 324,
                'pp': 15,
                'priority': 0,
                'secondary': {'chance': 10, 'volatileStatus': 'confusion'},
                'shortDesc': '10% chance to confuse the target.',
                'target': 'normal',
                'type': 'Bug',
                'zMovePower': 140},
 'silverwind': {'accuracy': 100,
                'basePower': 60,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Has a 10% chance to raise the user's Attack, Defense, "
                        'Special Attack, Special Defense, and Speed by 1 '
                        'stage.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'silverwind',
                'name': 'Silver Wind',
                'num': 318,
                'pp': 5,
                'priority': 0,
                'secondary': {'chance': 10,
                              'self': {'boosts': {'atk': 1,
                                                  'def': 1,
                                                  'spa': 1,
                                                  'spd': 1,
                                                  'spe': 1}}},
                'shortDesc': '10% chance to raise all stats by 1 (not '
                             'acc/eva).',
                'target': 'normal',
                'type': 'Bug',
                'zMovePower': 120},
 'simplebeam': {'accuracy': 100,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cute',
                'desc': "Causes the target's Ability to become Simple. Fails "
                        "if the target's Ability is Battle Bond, Comatose, "
                        'Disguise, Multitype, Power Construct, RKS System, '
                        'Schooling, Shields Down, Simple, Stance Change, or '
                        'Truant.',
                'flags': {'mirror': 1,
                          'mystery': 1,
                          'protect': 1,
                          'reflectable': 1},
                'id': 'simplebeam',
                'name': 'Simple Beam',
                'num': 493,
                'onHit': simplebeam.onHit,
                'onTryHit': simplebeam.onTryHit,
                'pp': 15,
                'priority': 0,
                'secondary': {},
                'shortDesc': "The target's Ability becomes Simple.",
                'target': 'normal',
                'type': 'Normal',
                'zMoveBoost': {'spa': 1}},
 'sing': {'accuracy': 55,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Cute',
          'flags': {'authentic': 1,
                    'mirror': 1,
                    'protect': 1,
                    'reflectable': 1,
                    'sound': 1},
          'id': 'sing',
          'name': 'Sing',
          'num': 47,
          'pp': 15,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Causes the target to fall asleep.',
          'status': 'slp',
          'target': 'normal',
          'type': 'Normal',
          'zMoveBoost': {'spe': 1}},
 'sinisterarrowraid': {'accuracy': True,
                       'basePower': 180,
                       'category': 'Physical',
                       'contestType': 'Cool',
                       'flags': {},
                       'id': 'sinisterarrowraid',
                       'isZ': 'decidiumz',
                       'name': 'Sinister Arrow Raid',
                       'num': 695,
                       'pp': 1,
                       'priority': 0,
                       'secondary': {},
                       'shortDesc': 'No additional effect.',
                       'target': 'normal',
                       'type': 'Ghost'},
 'sizzlyslide': {'accuracy': 100,
                 'basePower': 90,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': 'Has a 100% chance to burn the foe.',
                 'flags': {'contact': 1, 'defrost': 1, 'protect': 1},
                 'id': 'sizzlyslide',
                 'isNonstandard': True,
                 'isUnreleased': True,
                 'isViable': True,
                 'name': 'Sizzly Slide',
                 'num': 735,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {'chance': 100, 'status': 'brn'},
                 'shortDesc': '100% chance to burn the foe.',
                 'target': 'normal',
                 'type': 'Fire'},
 'sketch': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Clever',
            'desc': 'This move is permanently replaced by the last move used '
                    'by the target. The copied move has the maximum PP for '
                    'that move. Fails if the target has not made a move, if '
                    'the user has Transformed, or if the move is Chatter, '
                    'Sketch, Struggle, or any move the user knows.',
            'flags': {'authentic': 1, 'mystery': 1},
            'id': 'sketch',
            'name': 'Sketch',
            'noPPBoosts': True,
            'num': 166,
            'onHit': sketch.onHit,
            'pp': 1,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Permanently copies the last move target used.',
            'target': 'normal',
            'type': 'Normal',
            'zMoveBoost': {'atk': 1, 'def': 1, 'spa': 1, 'spd': 1, 'spe': 1}},
 'skillswap': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "The user swaps its Ability with the target's Ability. "
                       "Fails if either the user or the target's Ability is "
                       'Battle Bond, Comatose, Disguise, Illusion, Multitype, '
                       'Power Construct, RKS System, Schooling, Shields Down, '
                       'Stance Change, or Wonder Guard.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'mystery': 1,
                         'protect': 1},
               'id': 'skillswap',
               'name': 'Skill Swap',
               'num': 285,
               'onHit': skillswap.onHit,
               'onTryHit': skillswap.onTryHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'The user and the target trade Abilities.',
               'target': 'normal',
               'type': 'Psychic',
               'zMoveBoost': {'spe': 1}},
 'skullbash': {'accuracy': 100,
               'basePower': 130,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'This attack charges on the first turn and executes on '
                       "the second. Raises the user's Defense by 1 stage on "
                       'the first turn. If the user is holding a Power Herb, '
                       'the move completes in one turn.',
               'flags': {'charge': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'skullbash',
               'name': 'Skull Bash',
               'num': 130,
               'onTryMove': skullbash.onTryMove,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Raises user's Defense by 1 on turn 1. Hits turn "
                            '2.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 195},
 'skyattack': {'accuracy': 90,
               'basePower': 140,
               'category': 'Physical',
               'contestType': 'Cool',
               'critRatio': 2,
               'desc': 'Has a 30% chance to flinch the target and a higher '
                       'chance for a critical hit. This attack charges on the '
                       'first turn and executes on the second. If the user is '
                       'holding a Power Herb, the move completes in one turn.',
               'flags': {'charge': 1, 'distance': 1, 'mirror': 1, 'protect': 1},
               'id': 'skyattack',
               'name': 'Sky Attack',
               'num': 143,
               'onTryMove': skyattack.onTryMove,
               'pp': 5,
               'priority': 0,
               'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
               'shortDesc': 'Charges, then hits turn 2. 30% flinch. High crit.',
               'target': 'any',
               'type': 'Flying',
               'zMovePower': 200},
 'skydrop': {'accuracy': 100,
             'basePower': 60,
             'category': 'Physical',
             'contestType': 'Tough',
             'desc': 'This attack takes the target into the air with the user '
                     'on the first turn and executes on the second. Pokemon '
                     'weighing 200 kg or more cannot be lifted. On the first '
                     'turn, the user and the target avoid all attacks other '
                     'than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand '
                     'Arrows, Thunder, and Twister. The user and the target '
                     'cannot make a move between turns, but the target can '
                     'select a move to use. This move cannot damage '
                     'Flying-type Pokemon. Fails on the first turn if the '
                     'target is an ally, if the target has a substitute, or if '
                     'the target is using Bounce, Dig, Dive, Fly, Phantom '
                     'Force, Shadow Force, or Sky Drop.',
             'effect': {'duration': 2,
                        'onAnyBasePower': skydrop.onAnyBasePower,
                        'onAnyDragOut': skydrop.onAnyDragOut,
                        'onAnyTryImmunity': skydrop.onAnyTryImmunity,
                        'onFaint': skydrop.onFaint,
                        'onFoeBeforeMove': skydrop.onFoeBeforeMove,
                        'onFoeBeforeMovePriority': 12,
                        'onFoeTrapPokemon': skydrop.onFoeTrapPokemon,
                        'onFoeTrapPokemonPriority': -15,
                        'onRedirectTarget': skydrop.onRedirectTarget,
                        'onRedirectTargetPriority': 99},
             'flags': {'charge': 1,
                       'contact': 1,
                       'distance': 1,
                       'gravity': 1,
                       'mirror': 1,
                       'protect': 1},
             'id': 'skydrop',
             'name': 'Sky Drop',
             'num': 507,
             'onHit': skydrop.onHit,
             'onModifyMove': skydrop.onModifyMove,
             'onMoveFail': skydrop.onMoveFail,
             'onTryHit': skydrop.onTryHit,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'User and foe fly up turn 1. Damages on turn 2.',
             'target': 'any',
             'type': 'Flying',
             'zMovePower': 120},
 'skyuppercut': {'accuracy': 90,
                 'basePower': 85,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'This move can hit a target using Bounce, Fly, or Sky '
                         'Drop, or is under the effect of Sky Drop.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1, 'punch': 1},
                 'id': 'skyuppercut',
                 'name': 'Sky Uppercut',
                 'num': 327,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Can hit Pokemon using Bounce, Fly, or Sky Drop.',
                 'target': 'normal',
                 'type': 'Fighting',
                 'zMovePower': 160},
 'slackoff': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cute',
              'desc': 'The user restores 1/2 of its maximum HP, rounded half '
                      'up.',
              'flags': {'heal': 1, 'snatch': 1},
              'heal': {'0': 1, '1': 2},
              'id': 'slackoff',
              'isViable': True,
              'name': 'Slack Off',
              'num': 303,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Heals the user by 50% of its max HP.',
              'target': 'self',
              'type': 'Normal',
              'zMoveEffect': 'clearnegativeboost'},
 'slam': {'accuracy': 75,
          'basePower': 80,
          'category': 'Physical',
          'contestType': 'Tough',
          'flags': {'contact': 1, 'mirror': 1, 'nonsky': 1, 'protect': 1},
          'id': 'slam',
          'name': 'Slam',
          'num': 21,
          'pp': 20,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'No additional effect.',
          'target': 'normal',
          'type': 'Normal',
          'zMovePower': 160},
 'slash': {'accuracy': 100,
           'basePower': 70,
           'category': 'Physical',
           'contestType': 'Cool',
           'critRatio': 2,
           'desc': 'Has a higher chance for a critical hit.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'slash',
           'name': 'Slash',
           'num': 163,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'High critical hit ratio.',
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 140},
 'sleeppowder': {'accuracy': 75,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'flags': {'mirror': 1,
                           'powder': 1,
                           'protect': 1,
                           'reflectable': 1},
                 'id': 'sleeppowder',
                 'isViable': True,
                 'name': 'Sleep Powder',
                 'num': 79,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Causes the target to fall asleep.',
                 'status': 'slp',
                 'target': 'normal',
                 'type': 'Grass',
                 'zMoveBoost': {'spe': 1}},
 'sleeptalk': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': "One of the user's known moves, besides this move, is "
                       'selected for use at random. Fails if the user is not '
                       'asleep. The selected move does not have PP deducted '
                       'from it, and can currently have 0 PP. This move cannot '
                       'select Assist, Beak Blast, Belch, Bide, Chatter, '
                       'Copycat, Focus Punch, Hold Hands, Me First, Metronome, '
                       'Mimic, Mirror Move, Nature Power, Shell Trap, Sketch, '
                       'Sleep Talk, Struggle, Uproar, any two-turn move, or '
                       'any Z-Move.',
               'flags': {},
               'id': 'sleeptalk',
               'isViable': True,
               'name': 'Sleep Talk',
               'num': 214,
               'onHit': sleeptalk.onHit,
               'onTryHit': sleeptalk.onTryHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'User must be asleep. Uses another known move.',
               'sleepUsable': True,
               'target': 'self',
               'type': 'Normal',
               'zMoveEffect': 'crit2'},
 'sludge': {'accuracy': 100,
            'basePower': 65,
            'category': 'Special',
            'contestType': 'Tough',
            'desc': 'Has a 30% chance to poison the target.',
            'flags': {'mirror': 1, 'protect': 1},
            'id': 'sludge',
            'name': 'Sludge',
            'num': 124,
            'pp': 20,
            'priority': 0,
            'secondary': {'chance': 30, 'status': 'psn'},
            'shortDesc': '30% chance to poison the target.',
            'target': 'normal',
            'type': 'Poison',
            'zMovePower': 120},
 'sludgebomb': {'accuracy': 100,
                'basePower': 90,
                'category': 'Special',
                'contestType': 'Tough',
                'desc': 'Has a 30% chance to poison the target.',
                'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                'id': 'sludgebomb',
                'isViable': True,
                'name': 'Sludge Bomb',
                'num': 188,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 30, 'status': 'psn'},
                'shortDesc': '30% chance to poison the target.',
                'target': 'normal',
                'type': 'Poison',
                'zMovePower': 175},
 'sludgewave': {'accuracy': 100,
                'basePower': 95,
                'category': 'Special',
                'contestType': 'Tough',
                'desc': 'Has a 10% chance to poison the target.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'sludgewave',
                'isViable': True,
                'name': 'Sludge Wave',
                'num': 482,
                'pp': 10,
                'priority': 0,
                'secondary': {'chance': 10, 'status': 'psn'},
                'shortDesc': '10% chance to poison adjacent Pokemon.',
                'target': 'allAdjacent',
                'type': 'Poison',
                'zMovePower': 175},
 'smackdown': {'accuracy': 100,
               'basePower': 50,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'This move can hit a target using Bounce, Fly, or Sky '
                       'Drop, or is under the effect of Sky Drop. If this move '
                       'hits a target under the effect of Bounce, Fly, Magnet '
                       'Rise, or Telekinesis, the effect ends. If the target '
                       'is a Flying type that has not used Roost this turn or '
                       'a Pokemon with the Levitate Ability, it loses its '
                       'immunity to Ground-type attacks and the Arena Trap '
                       'Ability as long as it remains active. During the '
                       'effect, Magnet Rise fails for the target and '
                       'Telekinesis fails against the target.',
               'effect': {'noCopy': True,
                          'onRestart': smackdown.onRestart,
                          'onStart': smackdown.onStart},
               'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
               'id': 'smackdown',
               'name': 'Smack Down',
               'num': 479,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Removes the target's Ground immunity.",
               'target': 'normal',
               'type': 'Rock',
               'volatileStatus': 'smackdown',
               'zMovePower': 100},
 'smartstrike': {'accuracy': True,
                 'basePower': 70,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'smartstrike',
                 'name': 'Smart Strike',
                 'num': 684,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'This move does not check accuracy.',
                 'target': 'normal',
                 'type': 'Steel',
                 'zMovePower': 140},
 'smellingsalts': {'accuracy': 100,
                   'basePower': 70,
                   'basePowerCallback': smellingsalts.basePowerCallback,
                   'category': 'Physical',
                   'contestType': 'Tough',
                   'desc': 'Power doubles if the target is paralyzed. If the '
                           'user has not fainted, the target is cured of '
                           'paralysis.',
                   'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                   'id': 'smellingsalts',
                   'name': 'Smelling Salts',
                   'num': 265,
                   'onHit': smellingsalts.onHit,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': 'Power doubles if target is paralyzed, and '
                                'cures it.',
                   'target': 'normal',
                   'type': 'Normal',
                   'zMovePower': 140},
 'smog': {'accuracy': 70,
          'basePower': 30,
          'category': 'Special',
          'contestType': 'Tough',
          'desc': 'Has a 40% chance to poison the target.',
          'flags': {'mirror': 1, 'protect': 1},
          'id': 'smog',
          'name': 'Smog',
          'num': 123,
          'pp': 20,
          'priority': 0,
          'secondary': {'chance': 40, 'status': 'psn'},
          'shortDesc': '40% chance to poison the target.',
          'target': 'normal',
          'type': 'Poison',
          'zMovePower': 100},
 'smokescreen': {'accuracy': 100,
                 'basePower': 0,
                 'boosts': {'accuracy': -1},
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "Lowers the target's accuracy by 1 stage.",
                 'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                 'id': 'smokescreen',
                 'name': 'Smokescreen',
                 'num': 108,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Lowers the target's accuracy by 1.",
                 'target': 'normal',
                 'type': 'Normal',
                 'zMoveBoost': {'evasion': 1}},
 'snarl': {'accuracy': 95,
           'basePower': 55,
           'category': 'Special',
           'contestType': 'Tough',
           'desc': "Has a 100% chance to lower the target's Special Attack by "
                   '1 stage.',
           'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
           'id': 'snarl',
           'name': 'Snarl',
           'num': 555,
           'pp': 15,
           'priority': 0,
           'secondary': {'boosts': {'spa': -1}, 'chance': 100},
           'shortDesc': '100% chance to lower the foe(s) Sp. Atk by 1.',
           'target': 'allAdjacentFoes',
           'type': 'Dark',
           'zMovePower': 100},
 'snatch': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Clever',
            'desc': 'If another Pokemon uses certain non-damaging moves this '
                    'turn, the user steals that move to use itself. If '
                    'multiple Pokemon use one of those moves this turn, the '
                    'applicable moves are all stolen by the first Pokemon in '
                    'turn order that used this move this turn. This effect is '
                    'ignored while the user is under the effect of Sky Drop.',
            'effect': {'duration': 1,
                       'onAnyTryMove': snatch.onAnyTryMove,
                       'onStart': snatch.onStart},
            'flags': {'authentic': 1},
            'id': 'snatch',
            'name': 'Snatch',
            'num': 289,
            'pp': 10,
            'pressureTarget': 'foeSide',
            'priority': 4,
            'secondary': {},
            'shortDesc': 'User steals certain support moves to use itself.',
            'target': 'self',
            'type': 'Dark',
            'volatileStatus': 'snatch',
            'zMoveBoost': {'spe': 2}},
 'snore': {'accuracy': 100,
           'basePower': 50,
           'category': 'Special',
           'contestType': 'Cute',
           'desc': 'Has a 30% chance to flinch the target. Fails if the user '
                   'is not asleep.',
           'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
           'id': 'snore',
           'name': 'Snore',
           'num': 173,
           'onTryHit': snore.onTryHit,
           'pp': 15,
           'priority': 0,
           'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
           'shortDesc': 'User must be asleep. 30% chance to flinch target.',
           'sleepUsable': True,
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 100},
 'soak': {'accuracy': 100,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Cute',
          'desc': 'Causes the target to become a Water type. Fails if the '
                  'target is an Arceus or a Silvally.',
          'flags': {'mirror': 1, 'mystery': 1, 'protect': 1, 'reflectable': 1},
          'id': 'soak',
          'name': 'Soak',
          'num': 487,
          'onHit': soak.onHit,
          'pp': 20,
          'priority': 0,
          'secondary': {},
          'shortDesc': "Changes the target's type to Water.",
          'target': 'normal',
          'type': 'Water',
          'zMoveBoost': {'spa': 1}},
 'softboiled': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cute',
                'desc': 'The user restores 1/2 of its maximum HP, rounded half '
                        'up.',
                'flags': {'heal': 1, 'snatch': 1},
                'heal': {'0': 1, '1': 2},
                'id': 'softboiled',
                'isViable': True,
                'name': 'Soft-Boiled',
                'num': 135,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Heals the user by 50% of its max HP.',
                'target': 'self',
                'type': 'Normal',
                'zMoveEffect': 'clearnegativeboost'},
 'solarbeam': {'accuracy': 100,
               'basePower': 120,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': 'This attack charges on the first turn and executes on '
                       'the second. Power is halved if the weather is Hail, '
                       'Primordial Sea, Rain Dance, or Sandstorm. If the user '
                       'is holding a Power Herb or the weather is Desolate '
                       'Land or Sunny Day, the move completes in one turn.',
               'flags': {'charge': 1, 'mirror': 1, 'protect': 1},
               'id': 'solarbeam',
               'name': 'Solar Beam',
               'num': 76,
               'onBasePower': solarbeam.onBasePower,
               'onBasePowerPriority': 4,
               'onTryMove': solarbeam.onTryMove,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Charges turn 1. Hits turn 2. No charge in '
                            'sunlight.',
               'target': 'normal',
               'type': 'Grass',
               'zMovePower': 190},
 'solarblade': {'accuracy': 100,
                'basePower': 125,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'This attack charges on the first turn and executes on '
                        'the second. Power is halved if the weather is Hail, '
                        'Primordial Sea, Rain Dance, or Sandstorm. If the user '
                        'is holding a Power Herb or the weather is Desolate '
                        'Land or Sunny Day, the move completes in one turn.',
                'flags': {'charge': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'solarblade',
                'name': 'Solar Blade',
                'num': 669,
                'onBasePower': solarblade.onBasePower,
                'onBasePowerPriority': 4,
                'onTryMove': solarblade.onTryMove,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Charges turn 1. Hits turn 2. No charge in '
                             'sunlight.',
                'target': 'normal',
                'type': 'Grass',
                'zMovePower': 190},
 'sonicboom': {'accuracy': 90,
               'basePower': 0,
               'category': 'Special',
               'contestType': 'Cool',
               'damage': 20,
               'desc': 'Deals 20 HP of damage to the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'sonicboom',
               'name': 'Sonic Boom',
               'num': 49,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Always does 20 HP of damage.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 100},
 'soulstealing7starstrike': {'accuracy': True,
                             'basePower': 195,
                             'category': 'Physical',
                             'contestType': 'Cool',
                             'flags': {'contact': 1},
                             'id': 'soulstealing7starstrike',
                             'isZ': 'marshadiumz',
                             'name': 'Soul-Stealing 7-Star Strike',
                             'num': 699,
                             'pp': 1,
                             'priority': 0,
                             'secondary': {},
                             'shortDesc': 'No additional effect.',
                             'target': 'normal',
                             'type': 'Ghost'},
 'spacialrend': {'accuracy': 95,
                 'basePower': 100,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'critRatio': 2,
                 'desc': 'Has a higher chance for a critical hit.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'spacialrend',
                 'isViable': True,
                 'name': 'Spacial Rend',
                 'num': 460,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'High critical hit ratio.',
                 'target': 'normal',
                 'type': 'Dragon',
                 'zMovePower': 180},
 'spark': {'accuracy': 100,
           'basePower': 65,
           'category': 'Physical',
           'contestType': 'Cool',
           'desc': 'Has a 30% chance to paralyze the target.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'spark',
           'name': 'Spark',
           'num': 209,
           'pp': 20,
           'priority': 0,
           'secondary': {'chance': 30, 'status': 'par'},
           'shortDesc': '30% chance to paralyze the target.',
           'target': 'normal',
           'type': 'Electric',
           'zMovePower': 120},
 'sparklingaria': {'accuracy': 100,
                   'basePower': 90,
                   'category': 'Special',
                   'contestType': 'Tough',
                   'desc': 'If the user has not fainted, the target is cured '
                           'of its burn.',
                   'flags': {'authentic': 1,
                             'mirror': 1,
                             'protect': 1,
                             'sound': 1},
                   'id': 'sparklingaria',
                   'name': 'Sparkling Aria',
                   'num': 664,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {'chance': 100,
                                 'dustproof': True,
                                 'onHit': sparklingaria.onHit},
                   'shortDesc': 'The target is cured of its burn.',
                   'target': 'allAdjacent',
                   'type': 'Water',
                   'zMovePower': 175},
 'sparklyswirl': {'accuracy': 100,
                  'basePower': 90,
                  'category': 'Special',
                  'contestType': 'Clever',
                  'desc': "Every Pokemon in the user's party is cured of its "
                          'major status condition.',
                  'flags': {'protect': 1},
                  'id': 'sparklyswirl',
                  'isNonstandard': True,
                  'isUnreleased': True,
                  'isViable': True,
                  'name': 'Sparkly Swirl',
                  'num': 740,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {},
                  'self': {'onHit': sparklyswirl.onHit},
                  'shortDesc': "Cures the user's party of all status "
                               'conditions.',
                  'target': 'normal',
                  'type': 'Fairy'},
 'spectralthief': {'accuracy': 100,
                   'basePower': 90,
                   'category': 'Physical',
                   'contestType': 'Cool',
                   'desc': "The target's stat stages greater than 0 are stolen "
                           'from it and applied to the user before dealing '
                           'damage.',
                   'flags': {'authentic': 1,
                             'contact': 1,
                             'mirror': 1,
                             'protect': 1},
                   'id': 'spectralthief',
                   'isViable': True,
                   'name': 'Spectral Thief',
                   'num': 712,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': "Steals target's boosts before dealing damage.",
                   'stealsBoosts': True,
                   'target': 'normal',
                   'type': 'Ghost',
                   'zMovePower': 175},
 'speedswap': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The user swaps its Speed stat with the target. Stat '
                       'stage changes are unaffected.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'mystery': 1,
                         'protect': 1},
               'id': 'speedswap',
               'name': 'Speed Swap',
               'num': 683,
               'onHit': speedswap.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Swaps Speed stat with target.',
               'target': 'normal',
               'type': 'Psychic',
               'zMoveBoost': {'spe': 1}},
 'spiderweb': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'Prevents the target from switching out. The target can '
                       'still switch out if it is holding Shed Shell or uses '
                       'Baton Pass, Parting Shot, U-turn, or Volt Switch. If '
                       'the target leaves the field using Baton Pass, the '
                       'replacement will remain trapped. The effect ends if '
                       'the user leaves the field.',
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'spiderweb',
               'name': 'Spider Web',
               'num': 169,
               'onHit': spiderweb.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Prevents the target from switching out.',
               'target': 'normal',
               'type': 'Bug',
               'zMoveBoost': {'def': 1}},
 'spikecannon': {'accuracy': 100,
                 'basePower': 20,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'Hits two to five times. Has a 1/3 chance to hit two '
                         'or three times, and a 1/6 chance to hit four or five '
                         "times. If one of the hits breaks the target's "
                         'substitute, it will take damage for the remaining '
                         'hits. If the user has the Skill Link Ability, this '
                         'move will always hit five times.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'spikecannon',
                 'multihit': {'0': 2, '1': 5},
                 'name': 'Spike Cannon',
                 'num': 131,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Hits 2-5 times in one turn.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 100},
 'spikes': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Clever',
            'desc': 'Sets up a hazard on the opposing side of the field, '
                    'damaging each opposing Pokemon that switches in, unless '
                    'it is a Flying-type Pokemon or has the Levitate Ability. '
                    'Can be used up to three times before failing. Opponents '
                    'lose 1/8 of their maximum HP with one layer, 1/6 of their '
                    'maximum HP with two layers, and 1/4 of their maximum HP '
                    'with three layers, all rounded down. Can be removed from '
                    'the opposing side if any opposing Pokemon uses Rapid Spin '
                    'or Defog successfully, or is hit by Defog.',
            'effect': {'onRestart': spikes.onRestart,
                       'onStart': spikes.onStart,
                       'onSwitchIn': spikes.onSwitchIn},
            'flags': {'nonsky': 1, 'reflectable': 1},
            'id': 'spikes',
            'isViable': True,
            'name': 'Spikes',
            'num': 191,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'Hurts grounded foes on switch-in. Max 3 layers.',
            'sideCondition': 'spikes',
            'target': 'foeSide',
            'type': 'Ground',
            'zMoveBoost': {'def': 1}},
 'spikyshield': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Tough',
                 'desc': 'The user is protected from most attacks made by '
                         'other Pokemon during this turn, and Pokemon making '
                         'contact with the user lose 1/8 of their maximum HP, '
                         'rounded down. This move has a 1/X chance of being '
                         'successful, where X starts at 1 and triples each '
                         'time this move is successfully used. X resets to 1 '
                         "if this move fails, if the user's last move used is "
                         "not Baneful Bunker, Detect, Endure, King's Shield, "
                         'Protect, Quick Guard, Spiky Shield, or Wide Guard, '
                         "or if it was one of those moves and the user's "
                         'protection was broken. Fails if the user moves last '
                         'this turn.',
                 'effect': {'duration': 1,
                            'onHit': spikyshield.onHit,
                            'onStart': spikyshield.onStart,
                            'onTryHit': spikyshield.onTryHit,
                            'onTryHitPriority': 3},
                 'flags': {},
                 'id': 'spikyshield',
                 'isViable': True,
                 'name': 'Spiky Shield',
                 'num': 596,
                 'onHit': spikyshield.onHit,
                 'onTryHit': spikyshield.onTryHit,
                 'pp': 10,
                 'priority': 4,
                 'secondary': {},
                 'shortDesc': 'Protects from moves. Contact: loses 1/8 max HP.',
                 'stallingMove': True,
                 'target': 'self',
                 'type': 'Grass',
                 'volatileStatus': 'spikyshield',
                 'zMoveBoost': {'def': 1}},
 'spiritshackle': {'accuracy': 100,
                   'basePower': 80,
                   'category': 'Physical',
                   'contestType': 'Tough',
                   'desc': 'Prevents the target from switching out. The target '
                           'can still switch out if it is holding Shed Shell '
                           'or uses Baton Pass, Parting Shot, U-turn, or Volt '
                           'Switch. If the target leaves the field using Baton '
                           'Pass, the replacement will remain trapped. The '
                           'effect ends if the user leaves the field.',
                   'flags': {'mirror': 1, 'protect': 1},
                   'id': 'spiritshackle',
                   'isViable': True,
                   'name': 'Spirit Shackle',
                   'num': 662,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {'chance': 100,
                                 'onHit': spiritshackle.onHit},
                   'shortDesc': 'Prevents the target from switching out.',
                   'target': 'normal',
                   'type': 'Ghost',
                   'zMovePower': 160},
 'spite': {'accuracy': 100,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Tough',
           'desc': "Causes the target's last move used to lose 4 PP. Fails if "
                   'the target has not made a move, if the move has 0 PP, or '
                   'if it no longer knows the move.',
           'flags': {'authentic': 1,
                     'mirror': 1,
                     'protect': 1,
                     'reflectable': 1},
           'id': 'spite',
           'name': 'Spite',
           'num': 180,
           'onHit': spite.onHit,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Lowers the PP of the target's last move by 4.",
           'target': 'normal',
           'type': 'Ghost',
           'zMoveEffect': 'heal'},
 'spitup': {'accuracy': 100,
            'basePower': 0,
            'basePowerCallback': spitup.basePowerCallback,
            'category': 'Special',
            'contestType': 'Tough',
            'desc': "Power is equal to 100 times the user's Stockpile count. "
                    "Fails if the user's Stockpile count is 0. Whether or not "
                    "this move is successful, the user's Defense and Special "
                    'Defense decrease by as many stages as Stockpile had '
                    "increased them, and the user's Stockpile count resets to "
                    '0.',
            'flags': {'protect': 1},
            'id': 'spitup',
            'name': 'Spit Up',
            'num': 255,
            'onAfterMove': spitup.onAfterMove,
            'onTry': spitup.onTry,
            'pp': 10,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'More power with more uses of Stockpile.',
            'target': 'normal',
            'type': 'Normal',
            'zMovePower': 100},
 'splash': {'accuracy': True,
            'basePower': 0,
            'category': 'Status',
            'contestType': 'Cute',
            'flags': {'gravity': 1},
            'id': 'splash',
            'name': 'Splash',
            'num': 150,
            'onTryHit': splash.onTryHit,
            'pp': 40,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'No competitive use.',
            'target': 'self',
            'type': 'Normal',
            'zMoveBoost': {'atk': 3}},
 'splinteredstormshards': {'accuracy': True,
                           'basePower': 190,
                           'category': 'Physical',
                           'contestType': 'Cool',
                           'desc': 'Ends the effects of Electric Terrain, '
                                   'Grassy Terrain, Misty Terrain, and Psychic '
                                   'Terrain.',
                           'flags': {},
                           'id': 'splinteredstormshards',
                           'isZ': 'lycaniumz',
                           'name': 'Splintered Stormshards',
                           'num': 727,
                           'onHit': splinteredstormshards.onHit,
                           'pp': 1,
                           'priority': 0,
                           'secondary': {},
                           'shortDesc': 'Ends the effects of Terrain.',
                           'target': 'normal',
                           'type': 'Rock'},
 'splishysplash': {'accuracy': 100,
                   'basePower': 90,
                   'category': 'Special',
                   'contestType': 'Cool',
                   'desc': 'Has a 30% chance to paralyze the target.',
                   'flags': {'protect': 1},
                   'id': 'splishysplash',
                   'isNonstandard': True,
                   'isUnreleased': True,
                   'isViable': True,
                   'name': 'Splishy Splash',
                   'num': 730,
                   'pp': 15,
                   'priority': 0,
                   'secondary': {'chance': 30, 'status': 'par'},
                   'shortDesc': '30% chance to paralyze the target.',
                   'target': 'allAdjacentFoes',
                   'type': 'Water'},
 'spore': {'accuracy': 100,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Beautiful',
           'flags': {'mirror': 1, 'powder': 1, 'protect': 1, 'reflectable': 1},
           'id': 'spore',
           'isViable': True,
           'name': 'Spore',
           'num': 147,
           'pp': 15,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'Causes the target to fall asleep.',
           'status': 'slp',
           'target': 'normal',
           'type': 'Grass',
           'zMoveEffect': 'clearnegativeboost'},
 'spotlight': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'desc': 'Until the end of the turn, all single-target attacks '
                       'from opponents of the target are redirected to the '
                       'target. Such attacks are redirected to the target '
                       'before they can be reflected by Magic Coat or the '
                       'Magic Bounce Ability, or drawn in by the Lightning Rod '
                       'or Storm Drain Abilities. Fails if it is not a Double '
                       'Battle or Battle Royal.',
               'effect': {'duration': 1,
                          'onFoeRedirectTarget': spotlight.onFoeRedirectTarget,
                          'onFoeRedirectTargetPriority': 2,
                          'onStart': spotlight.onStart},
               'flags': {'mystery': 1, 'protect': 1, 'reflectable': 1},
               'id': 'spotlight',
               'name': 'Spotlight',
               'num': 671,
               'onTryHit': spotlight.onTryHit,
               'pp': 15,
               'priority': 3,
               'secondary': {},
               'shortDesc': "Target's foes' moves are redirected to it this "
                            'turn.',
               'target': 'normal',
               'type': 'Normal',
               'volatileStatus': 'spotlight',
               'zMoveBoost': {'spd': 1}},
 'stealthrock': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cool',
                 'desc': 'Sets up a hazard on the opposing side of the field, '
                         'damaging each opposing Pokemon that switches in. '
                         'Fails if the effect is already active on the '
                         'opposing side. Foes lose 1/32, 1/16, 1/8, 1/4, or '
                         '1/2 of their maximum HP, rounded down, based on '
                         'their weakness to the Rock type; 0.25x, 0.5x, '
                         'neutral, 2x, or 4x, respectively. Can be removed '
                         'from the opposing side if any opposing Pokemon uses '
                         'Rapid Spin or Defog successfully, or is hit by '
                         'Defog.',
                 'effect': {'onStart': stealthrock.onStart,
                            'onSwitchIn': stealthrock.onSwitchIn},
                 'flags': {'reflectable': 1},
                 'id': 'stealthrock',
                 'isViable': True,
                 'name': 'Stealth Rock',
                 'num': 446,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Hurts foes on switch-in. Factors Rock weakness.',
                 'sideCondition': 'stealthrock',
                 'target': 'foeSide',
                 'type': 'Rock',
                 'zMoveBoost': {'def': 1}},
 'steameruption': {'accuracy': 95,
                   'basePower': 110,
                   'category': 'Special',
                   'contestType': 'Beautiful',
                   'desc': 'Has a 30% chance to burn the target. The target '
                           'thaws out if it is frozen.',
                   'flags': {'defrost': 1, 'mirror': 1, 'protect': 1},
                   'id': 'steameruption',
                   'isViable': True,
                   'name': 'Steam Eruption',
                   'num': 592,
                   'pp': 5,
                   'priority': 0,
                   'secondary': {'chance': 30, 'status': 'brn'},
                   'shortDesc': '30% chance to burn the target.',
                   'target': 'normal',
                   'thawsTarget': True,
                   'type': 'Water',
                   'zMovePower': 185},
 'steamroller': {'accuracy': 100,
                 'basePower': 65,
                 'category': 'Physical',
                 'contestType': 'Tough',
                 'desc': 'Has a 30% chance to flinch the target. Damage '
                         'doubles and no accuracy check is done if the target '
                         'has used Minimize while active.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'steamroller',
                 'name': 'Steamroller',
                 'num': 537,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
                 'shortDesc': '30% chance to flinch the target.',
                 'target': 'normal',
                 'type': 'Bug',
                 'zMovePower': 120},
 'steelwing': {'accuracy': 90,
               'basePower': 70,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': "Has a 10% chance to raise the user's Defense by 1 "
                       'stage.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'steelwing',
               'name': 'Steel Wing',
               'num': 211,
               'pp': 25,
               'priority': 0,
               'secondary': {'chance': 10, 'self': {'boosts': {'def': 1}}},
               'shortDesc': "10% chance to raise the user's Defense by 1.",
               'target': 'normal',
               'type': 'Steel',
               'zMovePower': 140},
 'stickyweb': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Tough',
               'desc': 'Sets up a hazard on the opposing side of the field, '
                       'lowering the Speed by 1 stage of each opposing Pokemon '
                       'that switches in, unless it is a Flying-type Pokemon '
                       'or has the Levitate Ability. Fails if the effect is '
                       'already active on the opposing side. Can be removed '
                       'from the opposing side if any opposing Pokemon uses '
                       'Rapid Spin or Defog successfully, or is hit by Defog.',
               'effect': {'onStart': stickyweb.onStart,
                          'onSwitchIn': stickyweb.onSwitchIn},
               'flags': {'reflectable': 1},
               'id': 'stickyweb',
               'isViable': True,
               'name': 'Sticky Web',
               'num': 564,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Lowers Speed of grounded foes by 1 on switch-in.',
               'sideCondition': 'stickyweb',
               'target': 'foeSide',
               'type': 'Bug',
               'zMoveBoost': {'spe': 1}},
 'stockpile': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Tough',
               'desc': "Raises the user's Defense and Special Defense by 1 "
                       "stage. The user's Stockpile count increases by 1. "
                       "Fails if the user's Stockpile count is 3. The user's "
                       'Stockpile count is reset to 0 when it is no longer '
                       'active.',
               'effect': {'noCopy': True,
                          'onEnd': stockpile.onEnd,
                          'onRestart': stockpile.onRestart,
                          'onStart': stockpile.onStart},
               'flags': {'snatch': 1},
               'id': 'stockpile',
               'name': 'Stockpile',
               'num': 254,
               'onTryHit': stockpile.onTryHit,
               'pp': 20,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Raises user's Defense, Sp. Def by 1. Max 3 uses.",
               'target': 'self',
               'type': 'Normal',
               'volatileStatus': 'stockpile',
               'zMoveEffect': 'heal'},
 'stokedsparksurfer': {'accuracy': True,
                       'basePower': 175,
                       'category': 'Special',
                       'contestType': 'Cool',
                       'desc': 'Has a 100% chance to paralyze the target.',
                       'flags': {},
                       'id': 'stokedsparksurfer',
                       'isZ': 'aloraichiumz',
                       'name': 'Stoked Sparksurfer',
                       'num': 700,
                       'pp': 1,
                       'priority': 0,
                       'secondary': {'chance': 100, 'status': 'par'},
                       'shortDesc': '100% chance to paralyze the target.',
                       'target': 'normal',
                       'type': 'Electric'},
 'stomp': {'accuracy': 100,
           'basePower': 65,
           'category': 'Physical',
           'contestType': 'Tough',
           'desc': 'Has a 30% chance to flinch the target. Damage doubles and '
                   'no accuracy check is done if the target has used Minimize '
                   'while active.',
           'flags': {'contact': 1, 'mirror': 1, 'nonsky': 1, 'protect': 1},
           'id': 'stomp',
           'name': 'Stomp',
           'num': 23,
           'pp': 20,
           'priority': 0,
           'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
           'shortDesc': '30% chance to flinch the target.',
           'target': 'normal',
           'type': 'Normal',
           'zMovePower': 120},
 'stompingtantrum': {'accuracy': 100,
                     'basePower': 75,
                     'basePowerCallback': stompingtantrum.basePowerCallback,
                     'category': 'Physical',
                     'contestType': 'Tough',
                     'desc': "Power doubles if the user's last move on the "
                             'previous turn, including moves called by other '
                             'moves or those used through Instruct, Magic '
                             'Coat, Snatch, or the Dancer or Magic Bounce '
                             'Abilities, failed to do any of its normal '
                             'effects, not including damage from an '
                             'unsuccessful High Jump Kick, Jump Kick, or Mind '
                             'Blown, or if the user was prevented from moving '
                             'by any effect other than recharging or Sky Drop. '
                             'A move that was blocked by Baneful Bunker, '
                             "Detect, King's Shield, Protect, Spiky Shield, "
                             'Crafty Shield, Mat Block, Quick Guard, or Wide '
                             "Guard will not double this move's power, nor "
                             'will Bounce or Fly ending early due to the '
                             'effect of Gravity, Smack Down, or Thousand '
                             'Arrows.',
                     'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                     'id': 'stompingtantrum',
                     'name': 'Stomping Tantrum',
                     'num': 707,
                     'pp': 10,
                     'priority': 0,
                     'secondary': {},
                     'shortDesc': "Power doubles if the user's last move "
                                  'failed.',
                     'target': 'normal',
                     'type': 'Ground',
                     'zMovePower': 140},
 'stoneedge': {'accuracy': 80,
               'basePower': 100,
               'category': 'Physical',
               'contestType': 'Tough',
               'critRatio': 2,
               'desc': 'Has a higher chance for a critical hit.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'stoneedge',
               'isViable': True,
               'name': 'Stone Edge',
               'num': 444,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'High critical hit ratio.',
               'target': 'normal',
               'type': 'Rock',
               'zMovePower': 180},
 'storedpower': {'accuracy': 100,
                 'basePower': 20,
                 'basePowerCallback': storedpower.basePowerCallback,
                 'category': 'Special',
                 'contestType': 'Clever',
                 'desc': "Power is equal to 20+(X*20), where X is the user's "
                         'total stat stage changes that are greater than 0.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'storedpower',
                 'name': 'Stored Power',
                 'num': 500,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': " + 20 power for each of the user's stat boosts.",
                 'target': 'normal',
                 'type': 'Psychic',
                 'zMovePower': 160},
 'stormthrow': {'accuracy': 100,
                'basePower': 60,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'This move is always a critical hit unless the target '
                        'is under the effect of Lucky Chant or has the Battle '
                        'Armor or Shell Armor Abilities.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'stormthrow',
                'isViable': True,
                'name': 'Storm Throw',
                'num': 480,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Always results in a critical hit.',
                'target': 'normal',
                'type': 'Fighting',
                'willCrit': True,
                'zMovePower': 120},
 'strength': {'accuracy': 100,
              'basePower': 80,
              'category': 'Physical',
              'contestType': 'Tough',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'strength',
              'name': 'Strength',
              'num': 70,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 160},
 'strengthsap': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cute',
                 'desc': "Lowers the target's Attack by 1 stage. The user "
                         "restores its HP equal to the target's Attack stat "
                         'calculated with its stat stage before this move was '
                         'used. If Big Root is held by the user, the HP '
                         'recovered is 1.3x normal, rounded half down. Fails '
                         "if the target's Attack stat stage is -6.",
                 'flags': {'heal': 1,
                           'mirror': 1,
                           'protect': 1,
                           'reflectable': 1},
                 'id': 'strengthsap',
                 'isViable': True,
                 'name': 'Strength Sap',
                 'num': 668,
                 'onHit': strengthsap.onHit,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "User heals HP=target's Atk stat. Lowers Atk by "
                              '1.',
                 'target': 'normal',
                 'type': 'Grass',
                 'zMoveBoost': {'def': 1}},
 'stringshot': {'accuracy': 95,
                'basePower': 0,
                'boosts': {'spe': -2},
                'category': 'Status',
                'contestType': 'Clever',
                'desc': "Lowers the target's Speed by 2 stages.",
                'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                'id': 'stringshot',
                'name': 'String Shot',
                'num': 81,
                'pp': 40,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Lowers the foe(s) Speed by 2.',
                'target': 'allAdjacentFoes',
                'type': 'Bug',
                'zMoveBoost': {'spe': 1}},
 'struggle': {'accuracy': True,
              'basePower': 50,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'Deals typeless damage to a random opposing Pokemon. If '
                      'this move was successful, the user loses 1/4 of its '
                      'maximum HP, rounded half up, and the Rock Head Ability '
                      'does not prevent this. This move is automatically used '
                      "if none of the user's known moves can be selected.",
              'flags': {'contact': 1, 'protect': 1},
              'id': 'struggle',
              'name': 'Struggle',
              'noPPBoosts': True,
              'noSketch': True,
              'num': 165,
              'onModifyMove': struggle.onModifyMove,
              'pp': 1,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'User loses 1/4 of its max HP.',
              'struggleRecoil': True,
              'target': 'randomNormal',
              'type': 'Normal',
              'zMovePower': 1},
 'strugglebug': {'accuracy': 100,
                 'basePower': 50,
                 'category': 'Special',
                 'contestType': 'Cute',
                 'desc': "Has a 100% chance to lower the target's Special "
                         'Attack by 1 stage.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'strugglebug',
                 'name': 'Struggle Bug',
                 'num': 522,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {'boosts': {'spa': -1}, 'chance': 100},
                 'shortDesc': '100% chance to lower the foe(s) Sp. Atk by 1.',
                 'target': 'allAdjacentFoes',
                 'type': 'Bug',
                 'zMovePower': 100},
 'stunspore': {'accuracy': 75,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'Paralyzes the target.',
               'flags': {'mirror': 1,
                         'powder': 1,
                         'protect': 1,
                         'reflectable': 1},
               'id': 'stunspore',
               'name': 'Stun Spore',
               'num': 78,
               'pp': 30,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Paralyzes the target.',
               'status': 'par',
               'target': 'normal',
               'type': 'Grass',
               'zMoveBoost': {'spd': 1}},
 'submission': {'accuracy': 80,
                'basePower': 80,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'If the target lost HP, the user takes recoil damage '
                        'equal to 1/4 the HP lost by the target, rounded half '
                        'up, but not less than 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'submission',
                'name': 'Submission',
                'num': 66,
                'pp': 20,
                'priority': 0,
                'recoil': {'0': 1, '1': 4},
                'secondary': {},
                'shortDesc': 'Has 1/4 recoil.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 160},
 'substitute': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cute',
                'desc': 'The user takes 1/4 of its maximum HP, rounded down, '
                        'and puts it into a substitute to take its place in '
                        'battle. The substitute is removed once enough damage '
                        'is inflicted on it, or if the user switches out or '
                        'faints. Baton Pass can be used to transfer the '
                        'substitute to an ally, and the substitute will keep '
                        'its remaining HP. Until the substitute is broken, it '
                        'receives damage from all attacks made by other '
                        'Pokemon and shields the user from status effects and '
                        'stat stage changes caused by other Pokemon. '
                        'Sound-based moves and Pokemon with the Infiltrator '
                        'Ability ignore substitutes. The user still takes '
                        'normal damage from weather and status effects while '
                        'behind its substitute. If the substitute breaks '
                        'during a multi-hit attack, the user will take damage '
                        'from any remaining hits. If a substitute is created '
                        'while the user is trapped by a binding move, the '
                        'binding effect ends immediately. Fails if the user '
                        'does not have enough HP remaining to create a '
                        'substitute without fainting, or if it already has a '
                        'substitute.',
                'effect': {'onEnd': substitute.onEnd,
                           'onStart': substitute.onStart,
                           'onTryPrimaryHit': substitute.onTryPrimaryHit,
                           'onTryPrimaryHitPriority': -1},
                'flags': {'nonsky': 1, 'snatch': 1},
                'id': 'substitute',
                'isViable': True,
                'name': 'Substitute',
                'num': 164,
                'onHit': substitute.onHit,
                'onTryHit': substitute.onTryHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'User takes 1/4 its max HP to put in a '
                             'substitute.',
                'target': 'self',
                'type': 'Normal',
                'volatileStatus': 'Substitute',
                'zMoveEffect': 'clearnegativeboost'},
 'subzeroslammer': {'accuracy': True,
                    'basePower': 1,
                    'category': 'Physical',
                    'contestType': 'Cool',
                    'flags': {},
                    'id': 'subzeroslammer',
                    'isViable': True,
                    'isZ': 'iciumz',
                    'name': 'Subzero Slammer',
                    'num': 650,
                    'pp': 1,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': "Power is equal to the base move's Z-Power.",
                    'target': 'normal',
                    'type': 'Ice'},
 'suckerpunch': {'accuracy': 100,
                 'basePower': 70,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': 'Fails if the target did not select a physical '
                         'attack, special attack, or Me First for use this '
                         'turn, or if the target moves before the user.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'suckerpunch',
                 'isViable': True,
                 'name': 'Sucker Punch',
                 'num': 389,
                 'onTry': suckerpunch.onTry,
                 'pp': 5,
                 'priority': 1,
                 'secondary': {},
                 'shortDesc': 'Usually goes first. Fails if target is not '
                              'attacking.',
                 'target': 'normal',
                 'type': 'Dark',
                 'zMovePower': 140},
 'sunnyday': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': 'For 5 turns, the weather becomes Sunny Day. The damage '
                      'of Fire-type attacks is multiplied by 1.5 and the '
                      'damage of Water-type attacks is multiplied by 0.5 '
                      'during the effect. Lasts for 8 turns if the user is '
                      'holding Heat Rock. Fails if the current weather is '
                      'Sunny Day.',
              'flags': {},
              'id': 'sunnyday',
              'name': 'Sunny Day',
              'num': 241,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'For 5 turns, intense sunlight powers Fire moves.',
              'target': 'all',
              'type': 'Fire',
              'weather': 'sunnyday',
              'zMoveBoost': {'spe': 1}},
 'sunsteelstrike': {'accuracy': 100,
                    'basePower': 100,
                    'category': 'Physical',
                    'contestType': 'Cool',
                    'desc': 'This move and its effects ignore the Abilities of '
                            'other Pokemon.',
                    'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                    'id': 'sunsteelstrike',
                    'ignoreAbility': True,
                    'isViable': True,
                    'name': 'Sunsteel Strike',
                    'num': 713,
                    'pp': 5,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': 'Ignores the Abilities of other Pokemon.',
                    'target': 'normal',
                    'type': 'Steel',
                    'zMovePower': 180},
 'superfang': {'accuracy': 90,
               'basePower': 0,
               'category': 'Physical',
               'contestType': 'Tough',
               'damageCallback': superfang.damageCallback,
               'desc': 'Deals damage to the target equal to half of its '
                       'current HP, rounded down, but not less than 1 HP.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'superfang',
               'isViable': True,
               'name': 'Super Fang',
               'num': 162,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Does damage equal to 1/2 target's current HP.",
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 100},
 'superpower': {'accuracy': 100,
                'basePower': 120,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': "Lowers the user's Attack and Defense by 1 stage.",
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'superpower',
                'isViable': True,
                'name': 'Superpower',
                'num': 276,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'self': {'boosts': {'atk': -1, 'def': -1}},
                'shortDesc': "Lowers the user's Attack and Defense by 1.",
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 190},
 'supersonic': {'accuracy': 55,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'flags': {'authentic': 1,
                          'mirror': 1,
                          'protect': 1,
                          'reflectable': 1,
                          'sound': 1},
                'id': 'supersonic',
                'name': 'Supersonic',
                'num': 48,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Causes the target to become confused.',
                'target': 'normal',
                'type': 'Normal',
                'volatileStatus': 'confusion',
                'zMoveBoost': {'spe': 1}},
 'supersonicskystrike': {'accuracy': True,
                         'basePower': 1,
                         'category': 'Physical',
                         'contestType': 'Cool',
                         'flags': {},
                         'id': 'supersonicskystrike',
                         'isViable': True,
                         'isZ': 'flyiniumz',
                         'name': 'Supersonic Skystrike',
                         'num': 626,
                         'pp': 1,
                         'priority': 0,
                         'secondary': {},
                         'shortDesc': "Power is equal to the base move's "
                                      'Z-Power.',
                         'target': 'normal',
                         'type': 'Flying'},
 'surf': {'accuracy': 100,
          'basePower': 90,
          'category': 'Special',
          'contestType': 'Beautiful',
          'desc': 'Damage doubles if the target is using Dive.',
          'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
          'id': 'surf',
          'isViable': True,
          'name': 'Surf',
          'num': 57,
          'pp': 15,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Hits adjacent Pokemon. Double damage on Dive.',
          'target': 'allAdjacent',
          'type': 'Water',
          'zMovePower': 175},
 'swagger': {'accuracy': 85,
             'basePower': 0,
             'boosts': {'atk': 2},
             'category': 'Status',
             'contestType': 'Cute',
             'desc': "Raises the target's Attack by 2 stages and confuses it.",
             'flags': {'mirror': 1,
                       'mystery': 1,
                       'protect': 1,
                       'reflectable': 1},
             'id': 'swagger',
             'name': 'Swagger',
             'num': 207,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Raises the target's Attack by 2 and confuses it.",
             'target': 'normal',
             'type': 'Normal',
             'volatileStatus': 'confusion',
             'zMoveEffect': 'clearnegativeboost'},
 'swallow': {'accuracy': True,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Tough',
             'desc': 'The user restores its HP based on its Stockpile count. '
                     "Restores 1/4 of its maximum HP if it's 1, 1/2 of its "
                     "maximum HP if it's 2, both rounded half down, and all of "
                     "its HP if it's 3. Fails if the user's Stockpile count is "
                     "0. The user's Defense and Special Defense decrease by as "
                     'many stages as Stockpile had increased them, and the '
                     "user's Stockpile count resets to 0.",
             'flags': {'heal': 1, 'snatch': 1},
             'id': 'swallow',
             'name': 'Swallow',
             'num': 256,
             'onHit': swallow.onHit,
             'onTryHit': swallow.onTryHit,
             'pp': 10,
             'priority': 0,
             'secondary': {},
             'shortDesc': 'Heals the user based on uses of Stockpile.',
             'target': 'self',
             'type': 'Normal',
             'zMoveEffect': 'clearnegativeboost'},
 'sweetkiss': {'accuracy': 75,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Cute',
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'sweetkiss',
               'name': 'Sweet Kiss',
               'num': 186,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Causes the target to become confused.',
               'target': 'normal',
               'type': 'Fairy',
               'volatileStatus': 'confusion',
               'zMoveBoost': {'spa': 1}},
 'sweetscent': {'accuracy': 100,
                'basePower': 0,
                'boosts': {'evasion': -2},
                'category': 'Status',
                'contestType': 'Cute',
                'desc': "Lowers the target's evasiveness by 2 stages.",
                'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                'id': 'sweetscent',
                'name': 'Sweet Scent',
                'num': 230,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Lowers the foe(s) evasiveness by 2.',
                'target': 'allAdjacentFoes',
                'type': 'Normal',
                'zMoveBoost': {'accuracy': 1}},
 'swift': {'accuracy': True,
           'basePower': 60,
           'category': 'Special',
           'contestType': 'Cool',
           'desc': 'This move does not check accuracy.',
           'flags': {'mirror': 1, 'protect': 1},
           'id': 'swift',
           'name': 'Swift',
           'num': 129,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'shortDesc': 'This move does not check accuracy. Hits foes.',
           'target': 'allAdjacentFoes',
           'type': 'Normal',
           'zMovePower': 120},
 'switcheroo': {'accuracy': 100,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': "The user swaps its held item with the target's held "
                        'item. Fails if either the user or the target is '
                        'holding a Mail or Z-Crystal, if neither is holding an '
                        'item, if the user is trying to give or take a Mega '
                        'Stone to or from the species that can Mega Evolve '
                        'with it, or if the user is trying to give or take a '
                        'Blue Orb, a Red Orb, a Griseous Orb, a Plate, a '
                        'Drive, or a Memory to or from a Kyogre, a Groudon, a '
                        'Giratina, an Arceus, a Genesect, or a Silvally, '
                        'respectively. The target is immune to this move if it '
                        'has the Sticky Hold Ability.',
                'flags': {'mirror': 1, 'mystery': 1, 'protect': 1},
                'id': 'switcheroo',
                'isViable': True,
                'name': 'Switcheroo',
                'num': 415,
                'onHit': switcheroo.onHit,
                'onTryHit': switcheroo.onTryHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': "User switches its held item with the target's.",
                'target': 'normal',
                'type': 'Dark',
                'zMoveBoost': {'spe': 2}},
 'swordsdance': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'atk': 2},
                 'category': 'Status',
                 'contestType': 'Beautiful',
                 'desc': "Raises the user's Attack by 2 stages.",
                 'flags': {'dance': 1, 'snatch': 1},
                 'id': 'swordsdance',
                 'isViable': True,
                 'name': 'Swords Dance',
                 'num': 14,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Raises the user's Attack by 2.",
                 'target': 'self',
                 'type': 'Normal',
                 'zMoveEffect': 'clearnegativeboost'},
 'synchronoise': {'accuracy': 100,
                  'basePower': 120,
                  'category': 'Special',
                  'contestType': 'Clever',
                  'desc': 'The target is immune if it does not share a type '
                          'with the user.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'synchronoise',
                  'name': 'Synchronoise',
                  'num': 485,
                  'onTryHit': synchronoise.onTryHit,
                  'pp': 10,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Hits adjacent Pokemon sharing the user's type.",
                  'target': 'allAdjacent',
                  'type': 'Psychic',
                  'zMovePower': 190},
 'synthesis': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The user restores 1/2 of its maximum HP if Delta '
                       'Stream or no weather conditions are in effect, 2/3 of '
                       'its maximum HP if the weather is Desolate Land or '
                       'Sunny Day, and 1/4 of its maximum HP if the weather is '
                       'Hail, Primordial Sea, Rain Dance, or Sandstorm, all '
                       'rounded half down.',
               'flags': {'heal': 1, 'snatch': 1},
               'id': 'synthesis',
               'isViable': True,
               'name': 'Synthesis',
               'num': 235,
               'onHit': synthesis.onHit,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Heals the user by a weather-dependent amount.',
               'target': 'self',
               'type': 'Grass',
               'zMoveEffect': 'clearnegativeboost'},
 'tackle': {'accuracy': 100,
            'basePower': 40,
            'category': 'Physical',
            'contestType': 'Tough',
            'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
            'id': 'tackle',
            'name': 'Tackle',
            'num': 33,
            'pp': 35,
            'priority': 0,
            'secondary': {},
            'shortDesc': 'No additional effect.',
            'target': 'normal',
            'type': 'Normal',
            'zMovePower': 100},
 'tailglow': {'accuracy': True,
              'basePower': 0,
              'boosts': {'spa': 3},
              'category': 'Status',
              'contestType': 'Beautiful',
              'desc': "Raises the user's Special Attack by 3 stages.",
              'flags': {'snatch': 1},
              'id': 'tailglow',
              'isViable': True,
              'name': 'Tail Glow',
              'num': 294,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Raises the user's Sp. Atk by 3.",
              'target': 'self',
              'type': 'Bug',
              'zMoveEffect': 'clearnegativeboost'},
 'tailslap': {'accuracy': 85,
              'basePower': 25,
              'category': 'Physical',
              'contestType': 'Cute',
              'desc': 'Hits two to five times. Has a 1/3 chance to hit two or '
                      'three times, and a 1/6 chance to hit four or five '
                      "times. If one of the hits breaks the target's "
                      'substitute, it will take damage for the remaining hits. '
                      'If the user has the Skill Link Ability, this move will '
                      'always hit five times.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'tailslap',
              'isViable': True,
              'multihit': {'0': 2, '1': 5},
              'name': 'Tail Slap',
              'num': 541,
              'pp': 10,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Hits 2-5 times in one turn.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 140},
 'tailwhip': {'accuracy': 100,
              'basePower': 0,
              'boosts': {'def': -1},
              'category': 'Status',
              'contestType': 'Cute',
              'desc': "Lowers the target's Defense by 1 stage.",
              'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
              'id': 'tailwhip',
              'name': 'Tail Whip',
              'num': 39,
              'pp': 30,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Lowers the foe(s) Defense by 1.',
              'target': 'allAdjacentFoes',
              'type': 'Normal',
              'zMoveBoost': {'atk': 1}},
 'tailwind': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cool',
              'desc': 'For 4 turns, the user and its party members have their '
                      'Speed doubled. Fails if this move is already in effect '
                      "for the user's side.",
              'effect': {'duration': 4,
                         'durationCallback': tailwind.durationCallback,
                         'onEnd': tailwind.onEnd,
                         'onModifySpe': tailwind.onModifySpe,
                         'onResidualOrder': 21,
                         'onResidualSubOrder': 4,
                         'onStart': tailwind.onStart},
              'flags': {'snatch': 1},
              'id': 'tailwind',
              'isViable': True,
              'name': 'Tailwind',
              'num': 366,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': "For 4 turns, allies' Speed is doubled.",
              'sideCondition': 'tailwind',
              'target': 'allySide',
              'type': 'Flying',
              'zMoveEffect': 'crit2'},
 'takedown': {'accuracy': 85,
              'basePower': 90,
              'category': 'Physical',
              'contestType': 'Tough',
              'desc': 'If the target lost HP, the user takes recoil damage '
                      'equal to 1/4 the HP lost by the target, rounded half '
                      'up, but not less than 1 HP.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'takedown',
              'name': 'Take Down',
              'num': 36,
              'pp': 20,
              'priority': 0,
              'recoil': {'0': 1, '1': 4},
              'secondary': {},
              'shortDesc': 'Has 1/4 recoil.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 175},
 'taunt': {'accuracy': 100,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Clever',
           'desc': 'Prevents the target from using non-damaging moves for its '
                   'next three turns. Pokemon with the Oblivious Ability or '
                   'protected by the Aroma Veil Ability are immune.',
           'effect': {'duration': 3,
                      'onBeforeMove': taunt.onBeforeMove,
                      'onBeforeMovePriority': 5,
                      'onDisableMove': taunt.onDisableMove,
                      'onEnd': taunt.onEnd,
                      'onResidualOrder': 12,
                      'onStart': taunt.onStart},
           'flags': {'authentic': 1,
                     'mirror': 1,
                     'protect': 1,
                     'reflectable': 1},
           'id': 'taunt',
           'isViable': True,
           'name': 'Taunt',
           'num': 269,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Target can't use status moves its next 3 turns.",
           'target': 'normal',
           'type': 'Dark',
           'volatileStatus': 'taunt',
           'zMoveBoost': {'atk': 1}},
 'tearfullook': {'accuracy': True,
                 'basePower': 0,
                 'boosts': {'atk': -1, 'spa': -1},
                 'category': 'Status',
                 'contestType': 'Cute',
                 'desc': "Lowers the target's Attack and Special Attack by 1 "
                         'stage.',
                 'flags': {'mirror': 1, 'reflectable': 1},
                 'id': 'tearfullook',
                 'name': 'Tearful Look',
                 'num': 715,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Lowers the target's Attack and Sp. Atk by 1.",
                 'target': 'normal',
                 'type': 'Normal',
                 'zMoveBoost': {'def': 1}},
 'technoblast': {'accuracy': 100,
                 'basePower': 120,
                 'category': 'Special',
                 'contestType': 'Cool',
                 'desc': "This move's type depends on the user's held Drive.",
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'technoblast',
                 'isViable': True,
                 'name': 'Techno Blast',
                 'num': 546,
                 'onModifyMove': technoblast.onModifyMove,
                 'pp': 5,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Type varies based on the held Drive.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 190},
 'tectonicrage': {'accuracy': True,
                  'basePower': 1,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'flags': {},
                  'id': 'tectonicrage',
                  'isViable': True,
                  'isZ': 'groundiumz',
                  'name': 'Tectonic Rage',
                  'num': 630,
                  'pp': 1,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Power is equal to the base move's Z-Power.",
                  'target': 'normal',
                  'type': 'Ground'},
 'teeterdance': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cute',
                 'desc': 'Causes the target to become confused.',
                 'flags': {'dance': 1, 'mirror': 1, 'protect': 1},
                 'id': 'teeterdance',
                 'name': 'Teeter Dance',
                 'num': 298,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Confuses adjacent Pokemon.',
                 'target': 'allAdjacent',
                 'type': 'Normal',
                 'volatileStatus': 'confusion',
                 'zMoveBoost': {'spa': 1}},
 'telekinesis': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': 'For 3 turns, the target cannot avoid any attacks '
                         'made against it, other than OHKO moves, as long as '
                         'it remains active. During the effect, the target is '
                         'immune to Ground-type attacks and the effects of '
                         'Spikes, Toxic Spikes, Sticky Web, and the Arena Trap '
                         'Ability as long as it remains active. If the target '
                         'uses Baton Pass, the replacement will gain the '
                         'effect. Ingrain, Smack Down, Thousand Arrows, and '
                         'Iron Ball override this move if the target is under '
                         'any of their effects. Fails if the target is already '
                         'under this effect or the effects of Ingrain, Smack '
                         'Down, or Thousand Arrows. The target is immune to '
                         'this move on use if its species is Diglett, Dugtrio, '
                         'Alolan Diglett, Alolan Dugtrio, Sandygast, '
                         'Palossand, or Gengar while Mega-Evolved. Mega Gengar '
                         'cannot be under this effect by any means.',
                 'effect': {'duration': 3,
                            'onAccuracy': telekinesis.onAccuracy,
                            'onAccuracyPriority': -1,
                            'onEnd': telekinesis.onEnd,
                            'onImmunity': telekinesis.onImmunity,
                            'onResidualOrder': 16,
                            'onStart': telekinesis.onStart,
                            'onUpdate': telekinesis.onUpdate},
                 'flags': {'gravity': 1,
                           'mirror': 1,
                           'mystery': 1,
                           'protect': 1,
                           'reflectable': 1},
                 'id': 'telekinesis',
                 'name': 'Telekinesis',
                 'num': 477,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "For 3 turns, target floats but moves can't miss "
                              'it.',
                 'target': 'normal',
                 'type': 'Psychic',
                 'volatileStatus': 'telekinesis',
                 'zMoveBoost': {'spa': 1}},
 'teleport': {'accuracy': True,
              'basePower': 0,
              'category': 'Status',
              'contestType': 'Cool',
              'flags': {},
              'id': 'teleport',
              'name': 'Teleport',
              'num': 100,
              'onTryHit': False,
              'pp': 20,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'Fails when used.',
              'target': 'self',
              'type': 'Psychic',
              'zMoveEffect': 'heal'},
 'thief': {'accuracy': 100,
           'basePower': 60,
           'category': 'Physical',
           'contestType': 'Tough',
           'desc': 'If this attack was successful and the user has not '
                   "fainted, it steals the target's held item if the user is "
                   "not holding one. The target's item is not stolen if it is "
                   'a Mail or Z-Crystal, or if the target is a Kyogre holding '
                   'a Blue Orb, a Groudon holding a Red Orb, a Giratina '
                   'holding a Griseous Orb, an Arceus holding a Plate, a '
                   'Genesect holding a Drive, a Silvally holding a Memory, or '
                   'a Pokemon that can Mega Evolve holding the Mega Stone for '
                   'its species. Items lost to this move cannot be regained '
                   'with Recycle or the Harvest Ability.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'thief',
           'name': 'Thief',
           'num': 168,
           'onAfterHit': thief.onAfterHit,
           'pp': 25,
           'priority': 0,
           'secondary': {},
           'shortDesc': "If the user has no item, it steals the target's.",
           'target': 'normal',
           'type': 'Dark',
           'zMovePower': 120},
 'thousandarrows': {'accuracy': 100,
                    'basePower': 90,
                    'category': 'Physical',
                    'contestType': 'Beautiful',
                    'desc': 'This move can hit airborne Pokemon, which '
                            'includes Flying-type Pokemon, Pokemon with the '
                            'Levitate Ability, Pokemon holding an Air Balloon, '
                            'and Pokemon under the effect of Magnet Rise or '
                            'Telekinesis. If the target is a Flying type and '
                            'is not already grounded, this move deals neutral '
                            'damage regardless of its other type(s). This move '
                            'can hit a target using Bounce, Fly, or Sky Drop. '
                            'If this move hits a target under the effect of '
                            'Bounce, Fly, Magnet Rise, or Telekinesis, the '
                            'effect ends. If the target is a Flying type that '
                            'has not used Roost this turn or a Pokemon with '
                            'the Levitate Ability, it loses its immunity to '
                            'Ground-type attacks and the Arena Trap Ability as '
                            'long as it remains active. During the effect, '
                            'Magnet Rise fails for the target and Telekinesis '
                            'fails against the target.',
                    'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                    'id': 'thousandarrows',
                    'ignoreImmunity': {'Ground': True},
                    'isViable': True,
                    'name': 'Thousand Arrows',
                    'num': 614,
                    'onEffectiveness': thousandarrows.onEffectiveness,
                    'pp': 10,
                    'priority': 0,
                    'secondary': {},
                    'shortDesc': 'Grounds adjacent foes. First hit neutral on '
                                 'Flying.',
                    'target': 'allAdjacentFoes',
                    'type': 'Ground',
                    'volatileStatus': 'smackdown',
                    'zMovePower': 180},
 'thousandwaves': {'accuracy': 100,
                   'basePower': 90,
                   'category': 'Physical',
                   'contestType': 'Tough',
                   'desc': 'Prevents the target from switching out. The target '
                           'can still switch out if it is holding Shed Shell '
                           'or uses Baton Pass, Parting Shot, U-turn, or Volt '
                           'Switch. If the target leaves the field using Baton '
                           'Pass, the replacement will remain trapped. The '
                           'effect ends if the user leaves the field.',
                   'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                   'id': 'thousandwaves',
                   'name': 'Thousand Waves',
                   'num': 615,
                   'onHit': thousandwaves.onHit,
                   'pp': 10,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': 'Hits adjacent foes. Prevents them from '
                                'switching.',
                   'target': 'allAdjacentFoes',
                   'type': 'Ground',
                   'zMovePower': 175},
 'thrash': {'accuracy': 100,
            'basePower': 120,
            'category': 'Physical',
            'contestType': 'Tough',
            'desc': 'The user spends two or three turns locked into this move '
                    'and becomes confused immediately after its move on the '
                    'last turn of the effect if it is not already. This move '
                    'targets an opposing Pokemon at random on each turn. If '
                    'the user is prevented from moving, is asleep at the '
                    'beginning of a turn, or the attack is not successful '
                    'against the target on the first turn of the effect or the '
                    'second turn of a three-turn effect, the effect ends '
                    'without causing confusion. If this move is called by '
                    'Sleep Talk and the user is asleep, the move is used for '
                    'one turn and does not confuse the user.',
            'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
            'id': 'thrash',
            'name': 'Thrash',
            'num': 37,
            'onAfterMove': thrash.onAfterMove,
            'pp': 10,
            'priority': 0,
            'secondary': {},
            'self': {'volatileStatus': 'lockedmove'},
            'shortDesc': 'Lasts 2-3 turns. Confuses the user afterwards.',
            'target': 'randomNormal',
            'type': 'Normal',
            'zMovePower': 190},
 'throatchop': {'accuracy': 100,
                'basePower': 80,
                'category': 'Physical',
                'contestType': 'Clever',
                'desc': 'For 2 turns, the target cannot use sound-based moves.',
                'effect': {'duration': 2,
                           'onBeforeMove': throatchop.onBeforeMove,
                           'onBeforeMovePriority': 6,
                           'onDisableMove': throatchop.onDisableMove,
                           'onEnd': throatchop.onEnd,
                           'onResidualOrder': 22,
                           'onStart': throatchop.onStart},
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'throatchop',
                'name': 'Throat Chop',
                'num': 675,
                'pp': 15,
                'priority': 0,
                'secondary': {'chance': 100,
                              'onHit': throatchop.onHit},
                'shortDesc': 'For 2 turns, the target cannot use sound moves.',
                'target': 'normal',
                'type': 'Dark',
                'zMovePower': 160},
 'thunder': {'accuracy': 70,
             'basePower': 110,
             'category': 'Special',
             'contestType': 'Cool',
             'desc': 'Has a 30% chance to paralyze the target. This move can '
                     'hit a target using Bounce, Fly, or Sky Drop, or is under '
                     'the effect of Sky Drop. If the weather is Primordial Sea '
                     'or Rain Dance, this move does not check accuracy. If the '
                     "weather is Desolate Land or Sunny Day, this move's "
                     'accuracy is 50%.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'thunder',
             'isViable': True,
             'name': 'Thunder',
             'num': 87,
             'onModifyMove': thunder.onModifyMove,
             'pp': 10,
             'priority': 0,
             'secondary': {'chance': 30, 'status': 'par'},
             'shortDesc': "30% chance to paralyze. Can't miss in rain.",
             'target': 'normal',
             'type': 'Electric',
             'zMovePower': 185},
 'thunderbolt': {'accuracy': 100,
                 'basePower': 90,
                 'category': 'Special',
                 'contestType': 'Cool',
                 'desc': 'Has a 10% chance to paralyze the target.',
                 'flags': {'mirror': 1, 'protect': 1},
                 'id': 'thunderbolt',
                 'isViable': True,
                 'name': 'Thunderbolt',
                 'num': 85,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {'chance': 10, 'status': 'par'},
                 'shortDesc': '10% chance to paralyze the target.',
                 'target': 'normal',
                 'type': 'Electric',
                 'zMovePower': 175},
 'thunderfang': {'accuracy': 95,
                 'basePower': 65,
                 'category': 'Physical',
                 'contestType': 'Cool',
                 'desc': 'Has a 10% chance to paralyze the target and a 10% '
                         'chance to flinch it.',
                 'flags': {'bite': 1, 'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'thunderfang',
                 'name': 'Thunder Fang',
                 'num': 422,
                 'pp': 15,
                 'priority': 0,
                 'secondaries': {'0': {'chance': 10, 'status': 'par'},
                                 '1': {'chance': 10,
                                       'volatileStatus': 'flinch'}},
                 'shortDesc': '10% chance to paralyze. 10% chance to flinch.',
                 'target': 'normal',
                 'type': 'Electric',
                 'zMovePower': 120},
 'thunderpunch': {'accuracy': 100,
                  'basePower': 75,
                  'category': 'Physical',
                  'contestType': 'Cool',
                  'desc': 'Has a 10% chance to paralyze the target.',
                  'flags': {'contact': 1,
                            'mirror': 1,
                            'protect': 1,
                            'punch': 1},
                  'id': 'thunderpunch',
                  'isViable': True,
                  'name': 'Thunder Punch',
                  'num': 9,
                  'pp': 15,
                  'priority': 0,
                  'secondary': {'chance': 10, 'status': 'par'},
                  'shortDesc': '10% chance to paralyze the target.',
                  'target': 'normal',
                  'type': 'Electric',
                  'zMovePower': 140},
 'thundershock': {'accuracy': 100,
                  'basePower': 40,
                  'category': 'Special',
                  'contestType': 'Cool',
                  'desc': 'Has a 10% chance to paralyze the target.',
                  'flags': {'mirror': 1, 'protect': 1},
                  'id': 'thundershock',
                  'name': 'Thunder Shock',
                  'num': 84,
                  'pp': 30,
                  'priority': 0,
                  'secondary': {'chance': 10, 'status': 'par'},
                  'shortDesc': '10% chance to paralyze the target.',
                  'target': 'normal',
                  'type': 'Electric',
                  'zMovePower': 100},
 'thunderwave': {'accuracy': 90,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Cool',
                 'desc': 'Paralyzes the target. This move does not ignore type '
                         'immunity.',
                 'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                 'id': 'thunderwave',
                 'ignoreImmunity': False,
                 'isViable': True,
                 'name': 'Thunder Wave',
                 'num': 86,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Paralyzes the target.',
                 'status': 'par',
                 'target': 'normal',
                 'type': 'Electric',
                 'zMoveBoost': {'spd': 1}},
 'tickle': {'accuracy': 100,
            'basePower': 0,
            'boosts': {'atk': -1, 'def': -1},
            'category': 'Status',
            'contestType': 'Cute',
            'desc': "Lowers the target's Attack and Defense by 1 stage.",
            'flags': {'mirror': 1,
                      'mystery': 1,
                      'protect': 1,
                      'reflectable': 1},
            'id': 'tickle',
            'name': 'Tickle',
            'num': 321,
            'pp': 20,
            'priority': 0,
            'secondary': {},
            'shortDesc': "Lowers the target's Attack and Defense by 1.",
            'target': 'normal',
            'type': 'Normal',
            'zMoveBoost': {'def': 1}},
 'topsyturvy': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': "The target's positive stat stages become negative and "
                        "vice versa. Fails if all of the target's stat stages "
                        'are 0.',
                'flags': {'mirror': 1,
                          'mystery': 1,
                          'protect': 1,
                          'reflectable': 1},
                'id': 'topsyturvy',
                'name': 'Topsy-Turvy',
                'num': 576,
                'onHit': topsyturvy.onHit,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Inverts the target's stat stages.",
                'target': 'normal',
                'type': 'Dark',
                'zMoveBoost': {'atk': 1}},
 'torment': {'accuracy': 100,
             'basePower': 0,
             'category': 'Status',
             'contestType': 'Tough',
             'desc': 'Prevents the target from selecting the same move for use '
                     'two turns in a row. This effect ends when the target is '
                     'no longer active.',
             'effect': {'noCopy': True,
                        'onDisableMove': torment.onDisableMove,
                        'onEnd': torment.onEnd,
                        'onStart': torment.onStart},
             'flags': {'authentic': 1,
                       'mirror': 1,
                       'protect': 1,
                       'reflectable': 1},
             'id': 'torment',
             'name': 'Torment',
             'num': 259,
             'pp': 15,
             'priority': 0,
             'secondary': {},
             'shortDesc': "Target can't select the same move twice in a row.",
             'target': 'normal',
             'type': 'Dark',
             'volatileStatus': 'torment',
             'zMoveBoost': {'def': 1}},
 'toxic': {'accuracy': 90,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Clever',
           'desc': 'Badly poisons the target. If a Poison-type Pokemon uses '
                   'this move, the target cannot avoid the attack, even if the '
                   'target is in the middle of a two-turn move.',
           'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
           'id': 'toxic',
           'isViable': True,
           'name': 'Toxic',
           'num': 92,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': "Badly poisons the target. Poison types can't miss.",
           'status': 'tox',
           'target': 'normal',
           'type': 'Poison',
           'zMoveBoost': {'def': 1}},
 'toxicspikes': {'accuracy': True,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': 'Sets up a hazard on the opposing side of the field, '
                         'poisoning each opposing Pokemon that switches in, '
                         'unless it is a Flying-type Pokemon or has the '
                         'Levitate Ability. Can be used up to two times before '
                         'failing. Opposing Pokemon become poisoned with one '
                         'layer and badly poisoned with two layers. Can be '
                         'removed from the opposing side if any opposing '
                         'Pokemon uses Rapid Spin or Defog successfully, is '
                         'hit by Defog, or a grounded Poison-type Pokemon '
                         'switches in. Safeguard prevents the opposing party '
                         'from being poisoned on switch-in, but a substitute '
                         'does not.',
                 'effect': {'onRestart': toxicspikes.onRestart,
                            'onStart': toxicspikes.onStart,
                            'onSwitchIn': toxicspikes.onSwitchIn},
                 'flags': {'nonsky': 1, 'reflectable': 1},
                 'id': 'toxicspikes',
                 'isViable': True,
                 'name': 'Toxic Spikes',
                 'num': 390,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Poisons grounded foes on switch-in. Max 2 '
                              'layers.',
                 'sideCondition': 'toxicspikes',
                 'target': 'foeSide',
                 'type': 'Poison',
                 'zMoveBoost': {'def': 1}},
 'toxicthread': {'accuracy': 100,
                 'basePower': 0,
                 'boosts': {'spe': -1},
                 'category': 'Status',
                 'contestType': 'Tough',
                 'desc': "Lowers the target's Speed by 1 stage and poisons it.",
                 'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                 'id': 'toxicthread',
                 'isViable': True,
                 'name': 'Toxic Thread',
                 'num': 672,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': "Lowers the target's Speed by 1 and poisons it.",
                 'status': 'psn',
                 'target': 'normal',
                 'type': 'Poison',
                 'zMoveBoost': {'spe': 1}},
 'transform': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "The user transforms into the target. The target's "
                       'current stats, stat stages, types, moves, Ability, '
                       "weight, gender, and sprite are copied. The user's "
                       'level and HP remain the same and each copied move '
                       'receives only 5 PP, with a maximum of 5 PP each. The '
                       'user can no longer change formes if it would have the '
                       'ability to do so. This move fails if it hits a '
                       'substitute, if either the user or the target is '
                       'already transformed, or if either is behind an '
                       'Illusion.',
               'flags': {'mystery': 1},
               'id': 'transform',
               'name': 'Transform',
               'num': 144,
               'onHit': transform.onHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "Copies target's stats, moves, types, and Ability.",
               'target': 'normal',
               'type': 'Normal',
               'zMoveEffect': 'heal'},
 'triattack': {'accuracy': 100,
               'basePower': 80,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Has a 20% chance to either burn, freeze, or paralyze '
                       'the target.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'triattack',
               'isViable': True,
               'name': 'Tri Attack',
               'num': 161,
               'pp': 10,
               'priority': 0,
               'secondary': {'chance': 20,
                             'onHit': triattack.onHit},
               'shortDesc': '20% chance to paralyze or burn or freeze target.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 160},
 'trick': {'accuracy': 100,
           'basePower': 0,
           'category': 'Status',
           'contestType': 'Clever',
           'desc': "The user swaps its held item with the target's held item. "
                   'Fails if either the user or the target is holding a Mail '
                   'or Z-Crystal, if neither is holding an item, if the user '
                   'is trying to give or take a Mega Stone to or from the '
                   'species that can Mega Evolve with it, or if the user is '
                   'trying to give or take a Blue Orb, a Red Orb, a Griseous '
                   'Orb, a Plate, a Drive, or a Memory to or from a Kyogre, a '
                   'Groudon, a Giratina, an Arceus, a Genesect, or a Silvally, '
                   'respectively. The target is immune to this move if it has '
                   'the Sticky Hold Ability.',
           'flags': {'mirror': 1, 'mystery': 1, 'protect': 1},
           'id': 'trick',
           'isViable': True,
           'name': 'Trick',
           'num': 271,
           'onHit': trick.onHit,
           'onTryHit': trick.onTryHit,
           'pp': 10,
           'priority': 0,
           'secondary': {},
           'shortDesc': "User switches its held item with the target's.",
           'target': 'normal',
           'type': 'Psychic',
           'zMoveBoost': {'spe': 2}},
 'trickortreat': {'accuracy': 100,
                  'basePower': 0,
                  'category': 'Status',
                  'contestType': 'Cute',
                  'desc': 'Causes the Ghost type to be added to the target, '
                          'effectively making it have two or three types. '
                          'Fails if the target is already a Ghost type. If '
                          "Forest's Curse adds a type to the target, it "
                          'replaces the type added by this move and vice '
                          'versa.',
                  'flags': {'mirror': 1,
                            'mystery': 1,
                            'protect': 1,
                            'reflectable': 1},
                  'id': 'trickortreat',
                  'name': 'Trick-or-Treat',
                  'num': 567,
                  'onHit': trickortreat.onHit,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Adds Ghost to the target's type(s).",
                  'target': 'normal',
                  'type': 'Ghost',
                  'zMoveBoost': {'atk': 1,
                                 'def': 1,
                                 'spa': 1,
                                 'spd': 1,
                                 'spe': 1}},
 'trickroom': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'For 5 turns, the Speed of every Pokemon is '
                       'recalculated for the purposes of determining turn '
                       "order. During the effect, each Pokemon's Speed is "
                       'considered to be (10000 - its normal Speed), and if '
                       'this value is greater than 8191, 8192 is subtracted '
                       'from it. If this move is used during the effect, the '
                       'effect ends.',
               'effect': {'duration': 5,
                          'durationCallback': trickroom.durationCallback,
                          'onEnd': trickroom.onEnd,
                          'onResidualOrder': 23,
                          'onRestart': trickroom.onRestart,
                          'onStart': trickroom.onStart},
               'flags': {'mirror': 1},
               'id': 'trickroom',
               'name': 'Trick Room',
               'num': 433,
               'pp': 5,
               'priority': -7,
               'pseudoWeather': 'trickroom',
               'secondary': {},
               'shortDesc': 'For 5 turns, slower Pokemon move first.',
               'target': 'all',
               'type': 'Psychic',
               'zMoveBoost': {'accuracy': 1}},
 'triplekick': {'accuracy': 90,
                'basePower': 10,
                'basePowerCallback': triplekick.basePowerCallback,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Hits three times. Power increases to 20 for the '
                        'second hit and 30 for the third. This move checks '
                        'accuracy for each hit, and the attack ends if the '
                        'target avoids a hit. If one of the hits breaks the '
                        "target's substitute, it will take damage for the "
                        'remaining hits. If the user has the Skill Link '
                        'Ability, this move will always hit three times.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'triplekick',
                'multiaccuracy': True,
                'multihit': 3,
                'name': 'Triple Kick',
                'num': 167,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Hits 3 times. Each hit can miss, but power '
                             'rises.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 120},
 'tropkick': {'accuracy': 100,
              'basePower': 70,
              'category': 'Physical',
              'contestType': 'Cute',
              'desc': "Has a 100% chance to lower the target's Attack by 1 "
                      'stage.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'tropkick',
              'name': 'Trop Kick',
              'num': 688,
              'pp': 15,
              'priority': 0,
              'secondary': {'boosts': {'atk': -1}, 'chance': 100},
              'shortDesc': "100% chance to lower the target's Attack by 1.",
              'target': 'normal',
              'type': 'Grass',
              'zMovePower': 140},
 'trumpcard': {'accuracy': True,
               'basePower': 0,
               'basePowerCallback': trumpcard.basePowerCallback,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': 'The power of this move is based on the amount of PP '
                       'remaining after normal PP reduction and the Pressure '
                       'Ability resolve. 200 power for 0 PP, 80 power for 1 '
                       'PP, 60 power for 2 PP, 50 power for 3 PP, and 40 power '
                       'for 4 or more PP.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'trumpcard',
               'name': 'Trump Card',
               'noPPBoosts': True,
               'num': 376,
               'pp': 5,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'More power the fewer PP this move has left.',
               'target': 'normal',
               'type': 'Normal',
               'zMovePower': 160},
 'twineedle': {'accuracy': 100,
               'basePower': 25,
               'category': 'Physical',
               'contestType': 'Cool',
               'desc': 'Hits twice, with each hit having a 20% chance to '
                       'poison the target. If the first hit breaks the '
                       "target's substitute, it will take damage for the "
                       'second hit.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'twineedle',
               'multihit': 2,
               'name': 'Twineedle',
               'num': 41,
               'pp': 20,
               'priority': 0,
               'secondary': {'chance': 20, 'status': 'psn'},
               'shortDesc': 'Hits 2 times. Each hit has 20% chance to poison.',
               'target': 'normal',
               'type': 'Bug',
               'zMovePower': 100},
 'twinkletackle': {'accuracy': True,
                   'basePower': 1,
                   'category': 'Physical',
                   'contestType': 'Cool',
                   'flags': {},
                   'id': 'twinkletackle',
                   'isViable': True,
                   'isZ': 'fairiumz',
                   'name': 'Twinkle Tackle',
                   'num': 656,
                   'pp': 1,
                   'priority': 0,
                   'secondary': {},
                   'shortDesc': "Power is equal to the base move's Z-Power.",
                   'target': 'normal',
                   'type': 'Fairy'},
 'twister': {'accuracy': 100,
             'basePower': 40,
             'category': 'Special',
             'contestType': 'Cool',
             'desc': 'Has a 20% chance to flinch the target. Power doubles if '
                     'the target is using Bounce, Fly, or Sky Drop, or is '
                     'under the effect of Sky Drop.',
             'flags': {'mirror': 1, 'protect': 1},
             'id': 'twister',
             'name': 'Twister',
             'num': 239,
             'pp': 20,
             'priority': 0,
             'secondary': {'chance': 20, 'volatileStatus': 'flinch'},
             'shortDesc': '20% chance to flinch the foe(s).',
             'target': 'allAdjacentFoes',
             'type': 'Dragon',
             'zMovePower': 100},
 'uproar': {'accuracy': 100,
            'basePower': 90,
            'category': 'Special',
            'contestType': 'Cute',
            'desc': 'The user spends three turns locked into this move. This '
                    'move targets an opponent at random on each turn. On the '
                    'first of the three turns, all sleeping active Pokemon '
                    'wake up. During the three turns, no active Pokemon can '
                    'fall asleep by any means, and Pokemon switched in during '
                    'the effect do not wake up. If the user is prevented from '
                    'moving or the attack is not successful against the target '
                    'during one of the turns, the effect ends.',
            'effect': {'duration': 3,
                       'onAnySetStatus': uproar.onAnySetStatus,
                       'onEnd': uproar.onEnd,
                       'onLockMove': 'uproar',
                       'onResidual': uproar.onResidual,
                       'onStart': uproar.onStart},
            'flags': {'authentic': 1, 'mirror': 1, 'protect': 1, 'sound': 1},
            'id': 'uproar',
            'name': 'Uproar',
            'num': 253,
            'onTryHit': uproar.onTryHit,
            'pp': 10,
            'priority': 0,
            'secondary': {},
            'self': {'volatileStatus': 'uproar'},
            'shortDesc': 'Lasts 3 turns. Active Pokemon cannot fall asleep.',
            'target': 'randomNormal',
            'type': 'Normal',
            'zMovePower': 175},
 'uturn': {'accuracy': 100,
           'basePower': 70,
           'category': 'Physical',
           'contestType': 'Cute',
           'desc': 'If this move is successful and the user has not fainted, '
                   'the user switches out even if it is trapped and is '
                   'replaced immediately by a selected party member. The user '
                   'does not switch out if there are no unfainted party '
                   'members, or if the target switched out using an Eject '
                   'Button or through the effect of the Emergency Exit or Wimp '
                   'Out Abilities.',
           'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
           'id': 'uturn',
           'isViable': True,
           'name': 'U-turn',
           'num': 369,
           'pp': 20,
           'priority': 0,
           'secondary': {},
           'selfSwitch': True,
           'shortDesc': 'User switches out after damaging the target.',
           'target': 'normal',
           'type': 'Bug',
           'zMovePower': 140},
 'vacuumwave': {'accuracy': 100,
                'basePower': 40,
                'category': 'Special',
                'contestType': 'Cool',
                'desc': 'No additional effect.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'vacuumwave',
                'name': 'Vacuum Wave',
                'num': 410,
                'pp': 30,
                'priority': 1,
                'secondary': {},
                'shortDesc': 'Usually goes first.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 100},
 'vcreate': {'accuracy': 95,
             'basePower': 180,
             'category': 'Physical',
             'contestType': 'Cool',
             'desc': "Lowers the user's Speed, Defense, and Special Defense by "
                     '1 stage.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'vcreate',
             'isViable': True,
             'name': 'V-create',
             'num': 557,
             'pp': 5,
             'priority': 0,
             'secondary': {},
             'self': {'boosts': {'def': -1, 'spd': -1, 'spe': -1}},
             'shortDesc': "Lowers the user's Defense, Sp. Def, Speed by 1.",
             'target': 'normal',
             'type': 'Fire',
             'zMovePower': 220},
 'veeveevolley': {'accuracy': True,
                  'basePower': 0,
                  'basePowerCallback': veeveevolley.basePowerCallback,
                  'category': 'Physical',
                  'contestType': 'Cute',
                  'desc': "Power is equal to the greater of (user's Happiness "
                          '* 2/5), rounded down, or 1.',
                  'flags': {'contact': 1, 'protect': 1},
                  'id': 'veeveevolley',
                  'isNonstandard': True,
                  'isUnreleased': True,
                  'isViable': True,
                  'name': 'Veevee Volley',
                  'num': 741,
                  'pp': 20,
                  'priority': 0,
                  'secondary': {},
                  'shortDesc': "Max happiness: 102 power. Can't miss.",
                  'target': 'normal',
                  'type': 'Normal'},
 'venomdrench': {'accuracy': 100,
                 'basePower': 0,
                 'category': 'Status',
                 'contestType': 'Clever',
                 'desc': "Lowers the target's Attack, Special Attack, and "
                         'Speed by 1 stage if the target is poisoned. Fails if '
                         'the target is not poisoned.',
                 'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
                 'id': 'venomdrench',
                 'name': 'Venom Drench',
                 'num': 599,
                 'onHit': venomdrench.onHit,
                 'pp': 20,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Lowers Atk/Sp. Atk/Speed of poisoned foes by 1.',
                 'target': 'allAdjacentFoes',
                 'type': 'Poison',
                 'zMoveBoost': {'def': 1}},
 'venoshock': {'accuracy': 100,
               'basePower': 65,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Power doubles if the target is poisoned.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'venoshock',
               'name': 'Venoshock',
               'num': 474,
               'onBasePower': venoshock.onBasePower,
               'onBasePowerPriority': 4,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Power doubles if the target is poisoned.',
               'target': 'normal',
               'type': 'Poison',
               'zMovePower': 120},
 'vicegrip': {'accuracy': 100,
              'basePower': 55,
              'category': 'Physical',
              'contestType': 'Tough',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'vicegrip',
              'name': 'Vice Grip',
              'num': 11,
              'pp': 30,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 100},
 'vinewhip': {'accuracy': 100,
              'basePower': 45,
              'category': 'Physical',
              'contestType': 'Cool',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'vinewhip',
              'name': 'Vine Whip',
              'num': 22,
              'pp': 25,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Grass',
              'zMovePower': 100},
 'vitalthrow': {'accuracy': True,
                'basePower': 70,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'This move does not check accuracy.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'vitalthrow',
                'name': 'Vital Throw',
                'num': 233,
                'pp': 10,
                'priority': -1,
                'secondary': {},
                'shortDesc': 'This move does not check accuracy. Goes last.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 140},
 'voltswitch': {'accuracy': 100,
                'basePower': 70,
                'category': 'Special',
                'contestType': 'Cool',
                'desc': 'If this move is successful and the user has not '
                        'fainted, the user switches out even if it is trapped '
                        'and is replaced immediately by a selected party '
                        'member. The user does not switch out if there are no '
                        'unfainted party members, or if the target switched '
                        'out using an Eject Button or through the effect of '
                        'the Emergency Exit or Wimp Out Abilities.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'voltswitch',
                'isViable': True,
                'name': 'Volt Switch',
                'num': 521,
                'pp': 20,
                'priority': 0,
                'secondary': {},
                'selfSwitch': True,
                'shortDesc': 'User switches out after damaging the target.',
                'target': 'normal',
                'type': 'Electric',
                'zMovePower': 140},
 'volttackle': {'accuracy': 100,
                'basePower': 120,
                'category': 'Physical',
                'contestType': 'Cool',
                'desc': 'Has a 10% chance to paralyze the target. If the '
                        'target lost HP, the user takes recoil damage equal to '
                        '33% the HP lost by the target, rounded half up, but '
                        'not less than 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'volttackle',
                'isViable': True,
                'name': 'Volt Tackle',
                'num': 344,
                'pp': 15,
                'priority': 0,
                'recoil': {'0': 33, '1': 100},
                'secondary': {'chance': 10, 'status': 'par'},
                'shortDesc': 'Has 33% recoil. 10% chance to paralyze target.',
                'target': 'normal',
                'type': 'Electric',
                'zMovePower': 190},
 'wakeupslap': {'accuracy': 100,
                'basePower': 70,
                'basePowerCallback': wakeupslap.basePowerCallback,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'Power doubles if the target is asleep. If the user '
                        'has not fainted, the target wakes up.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'wakeupslap',
                'name': 'Wake-Up Slap',
                'num': 358,
                'onHit': wakeupslap.onHit,
                'pp': 10,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'Power doubles if target is asleep, and wakes it.',
                'target': 'normal',
                'type': 'Fighting',
                'zMovePower': 140},
 'waterfall': {'accuracy': 100,
               'basePower': 80,
               'category': 'Physical',
               'contestType': 'Tough',
               'desc': 'Has a 20% chance to flinch the target.',
               'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
               'id': 'waterfall',
               'isViable': True,
               'name': 'Waterfall',
               'num': 127,
               'pp': 15,
               'priority': 0,
               'secondary': {'chance': 20, 'volatileStatus': 'flinch'},
               'shortDesc': '20% chance to flinch the target.',
               'target': 'normal',
               'type': 'Water',
               'zMovePower': 160},
 'watergun': {'accuracy': 100,
              'basePower': 40,
              'category': 'Special',
              'contestType': 'Cute',
              'flags': {'mirror': 1, 'protect': 1},
              'id': 'watergun',
              'name': 'Water Gun',
              'num': 55,
              'pp': 25,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Water',
              'zMovePower': 100},
 'waterpledge': {'accuracy': 100,
                 'basePower': 80,
                 'basePowerCallback': waterpledge.basePowerCallback,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': "If one of the user's allies chose to use Fire Pledge "
                         'or Grass Pledge this turn and has not moved yet, it '
                         'takes its turn immediately after the user and the '
                         "user's move does nothing. If combined with Fire "
                         'Pledge, the ally uses Water Pledge with 150 power '
                         "and a rainbow appears on the user's side for 4 "
                         'turns, which doubles secondary effect chances but '
                         'does not stack with the Serene Grace Ability. If '
                         'combined with Grass Pledge, the ally uses Grass '
                         'Pledge with 150 power and a swamp appears on the '
                         "target's side for 4 turns, which quarters the Speed "
                         'of each Pokemon on that side. When used as a '
                         'combined move, this move gains STAB no matter what '
                         "the user's type is. This move does not consume the "
                         "user's Water Gem, and cannot be redirected by the "
                         'Storm Drain Ability.',
                 'effect': {'duration': 4,
                            'onEnd': waterpledge.onEnd,
                            'onModifyMove': waterpledge.onModifyMove,
                            'onStart': waterpledge.onStart},
                 'flags': {'mirror': 1, 'nonsky': 1, 'protect': 1},
                 'id': 'waterpledge',
                 'name': 'Water Pledge',
                 'num': 518,
                 'onHit': waterpledge.onHit,
                 'onModifyMove': waterpledge.onModifyMove,
                 'onPrepareHit': waterpledge.onPrepareHit,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Use with Grass or Fire Pledge for added effect.',
                 'target': 'normal',
                 'type': 'Water',
                 'zMovePower': 160},
 'waterpulse': {'accuracy': 100,
                'basePower': 60,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': 'Has a 20% chance to confuse the target.',
                'flags': {'distance': 1, 'mirror': 1, 'protect': 1, 'pulse': 1},
                'id': 'waterpulse',
                'name': 'Water Pulse',
                'num': 352,
                'pp': 20,
                'priority': 0,
                'secondary': {'chance': 20, 'volatileStatus': 'confusion'},
                'shortDesc': '20% chance to confuse the target.',
                'target': 'any',
                'type': 'Water',
                'zMovePower': 120},
 'watershuriken': {'accuracy': 100,
                   'basePower': 15,
                   'basePowerCallback': watershuriken.basePowerCallback,
                   'category': 'Special',
                   'contestType': 'Cool',
                   'desc': 'Hits two to five times. Has a 1/3 chance to hit '
                           'two or three times, and a 1/6 chance to hit four '
                           'or five times. If one of the hits breaks the '
                           "target's substitute, it will take damage for the "
                           'remaining hits. If the user has the Skill Link '
                           'Ability, this move will always hit five times. If '
                           'the user is an Ash-Greninja with the Battle Bond '
                           'Ability, this move has a power of 20 and always '
                           'hits three times.',
                   'flags': {'mirror': 1, 'protect': 1},
                   'id': 'watershuriken',
                   'isViable': True,
                   'multihit': {'0': 2, '1': 5},
                   'name': 'Water Shuriken',
                   'num': 594,
                   'pp': 20,
                   'priority': 1,
                   'secondary': {},
                   'shortDesc': 'Usually goes first. Hits 2-5 times in one '
                                'turn.',
                   'target': 'normal',
                   'type': 'Water',
                   'zMovePower': 100},
 'watersport': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Cute',
                'desc': 'For 5 turns, all Fire-type attacks used by any active '
                        'Pokemon have their power multiplied by 0.33. Fails if '
                        'this effect is already active.',
                'effect': {'duration': 5,
                           'onBasePower': watersport.onBasePower,
                           'onBasePowerPriority': 1,
                           'onEnd': watersport.onEnd,
                           'onResidualOrder': 21,
                           'onStart': watersport.onStart},
                'flags': {'nonsky': 1},
                'id': 'watersport',
                'name': 'Water Sport',
                'num': 346,
                'pp': 15,
                'priority': 0,
                'pseudoWeather': 'watersport',
                'secondary': {},
                'shortDesc': 'For 5 turns, Fire-type attacks have 1/3 power.',
                'target': 'all',
                'type': 'Water',
                'zMoveBoost': {'spd': 1}},
 'waterspout': {'accuracy': 100,
                'basePower': 150,
                'basePowerCallback': waterspout.basePowerCallback,
                'category': 'Special',
                'contestType': 'Beautiful',
                'desc': "Power is equal to (user's current HP * 150 / user's "
                        'maximum HP), rounded down, but not less than 1.',
                'flags': {'mirror': 1, 'protect': 1},
                'id': 'waterspout',
                'isViable': True,
                'name': 'Water Spout',
                'num': 323,
                'pp': 5,
                'priority': 0,
                'secondary': {},
                'shortDesc': "Less power as user's HP decreases. Hits foe(s).",
                'target': 'allAdjacentFoes',
                'type': 'Water',
                'zMovePower': 200},
 'weatherball': {'accuracy': 100,
                 'basePower': 50,
                 'category': 'Special',
                 'contestType': 'Beautiful',
                 'desc': 'Power doubles if a weather condition other than '
                         "Delta Stream is active, and this move's type changes "
                         'to match. Ice type during Hail, Water type during '
                         'Primordial Sea or Rain Dance, Rock type during '
                         'Sandstorm, and Fire type during Desolate Land or '
                         'Sunny Day.',
                 'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
                 'id': 'weatherball',
                 'name': 'Weather Ball',
                 'num': 311,
                 'onModifyMove': weatherball.onModifyMove,
                 'pp': 10,
                 'priority': 0,
                 'secondary': {},
                 'shortDesc': 'Power doubles and type varies in each weather.',
                 'target': 'normal',
                 'type': 'Normal',
                 'zMovePower': 160},
 'whirlpool': {'accuracy': 85,
               'basePower': 35,
               'category': 'Special',
               'contestType': 'Beautiful',
               'desc': 'Prevents the target from switching for four or five '
                       'turns (seven turns if the user is holding Grip Claw). '
                       'Causes damage to the target equal to 1/8 of its '
                       'maximum HP (1/6 if the user is holding Binding Band), '
                       'rounded down, at the end of each turn during effect. '
                       'The target can still switch out if it is holding Shed '
                       'Shell or uses Baton Pass, Parting Shot, U-turn, or '
                       'Volt Switch. The effect ends if either the user or the '
                       'target leaves the field, or if the target uses Rapid '
                       'Spin or Substitute successfully. This effect is not '
                       'stackable or reset by using this or another binding '
                       'move.',
               'flags': {'mirror': 1, 'protect': 1},
               'id': 'whirlpool',
               'name': 'Whirlpool',
               'num': 250,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Traps and damages the target for 4-5 turns.',
               'target': 'normal',
               'type': 'Water',
               'volatileStatus': 'partiallytrapped',
               'zMovePower': 100},
 'whirlwind': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': 'The target is forced to switch out and be replaced '
                       'with a random unfainted ally. Fails if the target is '
                       'the last unfainted Pokemon in its party, or if the '
                       'target used Ingrain previously or has the Suction Cups '
                       'Ability.',
               'flags': {'authentic': 1,
                         'mirror': 1,
                         'mystery': 1,
                         'reflectable': 1},
               'forceSwitch': True,
               'id': 'whirlwind',
               'isViable': True,
               'name': 'Whirlwind',
               'num': 18,
               'pp': 20,
               'priority': -6,
               'secondary': {},
               'shortDesc': 'Forces the target to switch to a random ally.',
               'target': 'normal',
               'type': 'Normal',
               'zMoveBoost': {'spd': 1}},
 'wideguard': {'accuracy': True,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Tough',
               'desc': 'The user and its party members are protected from '
                       'moves made by other Pokemon, including allies, during '
                       'this turn that target all adjacent foes or all '
                       'adjacent Pokemon. This move modifies the same 1/X '
                       'chance of being successful used by other protection '
                       'moves, where X starts at 1 and triples each time this '
                       'move is successfully used, but does not use the chance '
                       'to check for failure. X resets to 1 if this move '
                       "fails, if the user's last move used is not Baneful "
                       "Bunker, Detect, Endure, King's Shield, Protect, Quick "
                       'Guard, Spiky Shield, or Wide Guard, or if it was one '
                       "of those moves and the user's protection was broken. "
                       'Fails if the user moves last this turn or if this move '
                       "is already in effect for the user's side.",
               'effect': {'duration': 1,
                          'onStart': wideguard.onStart,
                          'onTryHit': wideguard.onTryHit,
                          'onTryHitPriority': 4},
               'flags': {'snatch': 1},
               'id': 'wideguard',
               'name': 'Wide Guard',
               'num': 469,
               'onHitSide': wideguard.onHitSide,
               'onTryHitSide': wideguard.onTryHitSide,
               'pp': 10,
               'priority': 3,
               'secondary': {},
               'shortDesc': 'Protects allies from multi-target moves this '
                            'turn.',
               'sideCondition': 'wideguard',
               'target': 'allySide',
               'type': 'Rock',
               'zMoveBoost': {'def': 1}},
 'wildcharge': {'accuracy': 100,
                'basePower': 90,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'If the target lost HP, the user takes recoil damage '
                        'equal to 1/4 the HP lost by the target, rounded half '
                        'up, but not less than 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'wildcharge',
                'isViable': True,
                'name': 'Wild Charge',
                'num': 528,
                'pp': 15,
                'priority': 0,
                'recoil': {'0': 1, '1': 4},
                'secondary': {},
                'shortDesc': 'Has 1/4 recoil.',
                'target': 'normal',
                'type': 'Electric',
                'zMovePower': 175},
 'willowisp': {'accuracy': 85,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Beautiful',
               'desc': 'Burns the target.',
               'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
               'id': 'willowisp',
               'isViable': True,
               'name': 'Will-O-Wisp',
               'num': 261,
               'pp': 15,
               'priority': 0,
               'secondary': {},
               'shortDesc': 'Burns the target.',
               'status': 'brn',
               'target': 'normal',
               'type': 'Fire',
               'zMoveBoost': {'atk': 1}},
 'wingattack': {'accuracy': 100,
                'basePower': 60,
                'category': 'Physical',
                'contestType': 'Cool',
                'flags': {'contact': 1,
                          'distance': 1,
                          'mirror': 1,
                          'protect': 1},
                'id': 'wingattack',
                'name': 'Wing Attack',
                'num': 17,
                'pp': 35,
                'priority': 0,
                'secondary': {},
                'shortDesc': 'No additional effect.',
                'target': 'any',
                'type': 'Flying',
                'zMovePower': 120},
 'wish': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Cute',
          'desc': "At the end of the next turn, the Pokemon at the user's "
                  "position has 1/2 of the user's maximum HP restored to it, "
                  'rounded half up. Fails if this move is already in effect '
                  "for the user's position.",
          'effect': {'duration': 2,
                     'onEnd': wish.onEnd,
                     'onResidualOrder': 4,
                     'onStart': wish.onStart},
          'flags': {'heal': 1, 'snatch': 1},
          'id': 'wish',
          'isViable': True,
          'name': 'Wish',
          'num': 273,
          'pp': 10,
          'priority': 0,
          'secondary': {},
          'shortDesc': "Next turn, 50% of the user's max HP is restored.",
          'sideCondition': 'Wish',
          'target': 'self',
          'type': 'Normal',
          'zMoveBoost': {'spd': 1}},
 'withdraw': {'accuracy': True,
              'basePower': 0,
              'boosts': {'def': 1},
              'category': 'Status',
              'contestType': 'Cute',
              'desc': "Raises the user's Defense by 1 stage.",
              'flags': {'snatch': 1},
              'id': 'withdraw',
              'name': 'Withdraw',
              'num': 110,
              'pp': 40,
              'priority': 0,
              'secondary': {},
              'shortDesc': "Raises the user's Defense by 1.",
              'target': 'self',
              'type': 'Water',
              'zMoveBoost': {'def': 1}},
 'wonderroom': {'accuracy': True,
                'basePower': 0,
                'category': 'Status',
                'contestType': 'Clever',
                'desc': 'For 5 turns, all active Pokemon have their Defense '
                        'and Special Defense stats swapped. Stat stage changes '
                        'are unaffected. If this move is used during the '
                        'effect, the effect ends.',
                'effect': {'duration': 5,
                           'durationCallback': wonderroom.durationCallback,
                           'onEnd': wonderroom.onEnd,
                           'onResidualOrder': 24,
                           'onRestart': wonderroom.onRestart,
                           'onStart': wonderroom.onStart},
                'flags': {'mirror': 1},
                'id': 'wonderroom',
                'name': 'Wonder Room',
                'num': 472,
                'pp': 10,
                'priority': 0,
                'pseudoWeather': 'wonderroom',
                'secondary': {},
                'shortDesc': 'For 5 turns, all Defense and Sp. Def stats '
                             'switch.',
                'target': 'all',
                'type': 'Psychic',
                'zMoveBoost': {'spd': 1}},
 'woodhammer': {'accuracy': 100,
                'basePower': 120,
                'category': 'Physical',
                'contestType': 'Tough',
                'desc': 'If the target lost HP, the user takes recoil damage '
                        'equal to 33% the HP lost by the target, rounded half '
                        'up, but not less than 1 HP.',
                'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                'id': 'woodhammer',
                'isViable': True,
                'name': 'Wood Hammer',
                'num': 452,
                'pp': 15,
                'priority': 0,
                'recoil': {'0': 33, '1': 100},
                'secondary': {},
                'shortDesc': 'Has 33% recoil.',
                'target': 'normal',
                'type': 'Grass',
                'zMovePower': 190},
 'workup': {'accuracy': True,
            'basePower': 0,
            'boosts': {'atk': 1, 'spa': 1},
            'category': 'Status',
            'contestType': 'Tough',
            'desc': "Raises the user's Attack and Special Attack by 1 stage.",
            'flags': {'snatch': 1},
            'id': 'workup',
            'name': 'Work Up',
            'num': 526,
            'pp': 30,
            'priority': 0,
            'secondary': {},
            'shortDesc': "Raises the user's Attack and Sp. Atk by 1.",
            'target': 'self',
            'type': 'Normal',
            'zMoveBoost': {'atk': 1}},
 'worryseed': {'accuracy': 100,
               'basePower': 0,
               'category': 'Status',
               'contestType': 'Clever',
               'desc': "Causes the target's Ability to become Insomnia. Fails "
                       "if the target's Ability is Battle Bond, Comatose, "
                       'Disguise, Insomnia, Multitype, Power Construct, RKS '
                       'System, Schooling, Shields Down, Stance Change, or '
                       'Truant.',
               'flags': {'mirror': 1,
                         'mystery': 1,
                         'protect': 1,
                         'reflectable': 1},
               'id': 'worryseed',
               'name': 'Worry Seed',
               'num': 388,
               'onHit': worryseed.onHit,
               'onTryHit': worryseed.onTryHit,
               'pp': 10,
               'priority': 0,
               'secondary': {},
               'shortDesc': "The target's Ability becomes Insomnia.",
               'target': 'normal',
               'type': 'Grass',
               'zMoveBoost': {'spe': 1}},
 'wrap': {'accuracy': 90,
          'basePower': 15,
          'category': 'Physical',
          'contestType': 'Tough',
          'desc': 'Prevents the target from switching for four or five turns '
                  '(seven turns if the user is holding Grip Claw). Causes '
                  'damage to the target equal to 1/8 of its maximum HP (1/6 if '
                  'the user is holding Binding Band), rounded down, at the end '
                  'of each turn during effect. The target can still switch out '
                  'if it is holding Shed Shell or uses Baton Pass, Parting '
                  'Shot, U-turn, or Volt Switch. The effect ends if either the '
                  'user or the target leaves the field, or if the target uses '
                  'Rapid Spin or Substitute successfully. This effect is not '
                  'stackable or reset by using this or another binding move.',
          'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
          'id': 'wrap',
          'name': 'Wrap',
          'num': 35,
          'pp': 20,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Traps and damages the target for 4-5 turns.',
          'target': 'normal',
          'type': 'Normal',
          'volatileStatus': 'partiallytrapped',
          'zMovePower': 100},
 'wringout': {'accuracy': 100,
              'basePower': 0,
              'basePowerCallback': wringout.basePowerCallback,
              'category': 'Special',
              'contestType': 'Tough',
              'desc': "Power is equal to 120 * (target's current HP / target's "
                      'maximum HP), rounded half down, but not less than 1.',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'wringout',
              'name': 'Wring Out',
              'num': 378,
              'pp': 5,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'More power the more HP the target has left.',
              'target': 'normal',
              'type': 'Normal',
              'zMovePower': 190},
 'xscissor': {'accuracy': 100,
              'basePower': 80,
              'category': 'Physical',
              'contestType': 'Cool',
              'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
              'id': 'xscissor',
              'isViable': True,
              'name': 'X-Scissor',
              'num': 404,
              'pp': 15,
              'priority': 0,
              'secondary': {},
              'shortDesc': 'No additional effect.',
              'target': 'normal',
              'type': 'Bug',
              'zMovePower': 160},
 'yawn': {'accuracy': True,
          'basePower': 0,
          'category': 'Status',
          'contestType': 'Cute',
          'desc': 'Causes the target to fall asleep at the end of the next '
                  'turn. Fails when used if the target cannot fall asleep or '
                  'if it already has a major status condition. At the end of '
                  'the next turn, if the target is still active, does not have '
                  'a major status condition, and can fall asleep, it falls '
                  'asleep. If the target becomes affected, this effect cannot '
                  'be prevented by Safeguard or a substitute, or by falling '
                  'asleep and waking up during the effect.',
          'effect': {'duration': 2,
                     'noCopy': True,
                     'onEnd': yawn.onEnd,
                     'onStart': yawn.onStart},
          'flags': {'mirror': 1, 'protect': 1, 'reflectable': 1},
          'id': 'yawn',
          'name': 'Yawn',
          'num': 281,
          'onTryHit': yawn.onTryHit,
          'pp': 10,
          'priority': 0,
          'secondary': {},
          'shortDesc': 'Puts the target to sleep after 1 turn.',
          'target': 'normal',
          'type': 'Normal',
          'volatileStatus': 'yawn',
          'zMoveBoost': {'spe': 1}},
 'zapcannon': {'accuracy': 50,
               'basePower': 120,
               'category': 'Special',
               'contestType': 'Cool',
               'desc': 'Has a 100% chance to paralyze the target.',
               'flags': {'bullet': 1, 'mirror': 1, 'protect': 1},
               'id': 'zapcannon',
               'name': 'Zap Cannon',
               'num': 192,
               'pp': 5,
               'priority': 0,
               'secondary': {'chance': 100, 'status': 'par'},
               'shortDesc': '100% chance to paralyze the target.',
               'target': 'normal',
               'type': 'Electric',
               'zMovePower': 190},
 'zenheadbutt': {'accuracy': 90,
                 'basePower': 80,
                 'category': 'Physical',
                 'contestType': 'Clever',
                 'desc': 'Has a 20% chance to flinch the target.',
                 'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
                 'id': 'zenheadbutt',
                 'isViable': True,
                 'name': 'Zen Headbutt',
                 'num': 428,
                 'pp': 15,
                 'priority': 0,
                 'secondary': {'chance': 20, 'volatileStatus': 'flinch'},
                 'shortDesc': '20% chance to flinch the target.',
                 'target': 'normal',
                 'type': 'Psychic',
                 'zMovePower': 160},
 'zingzap': {'accuracy': 100,
             'basePower': 80,
             'category': 'Physical',
             'contestType': 'Cool',
             'desc': 'Has a 30% chance to flinch the target.',
             'flags': {'contact': 1, 'mirror': 1, 'protect': 1},
             'id': 'zingzap',
             'isViable': True,
             'name': 'Zing Zap',
             'num': 716,
             'pp': 10,
             'priority': 0,
             'secondary': {'chance': 30, 'volatileStatus': 'flinch'},
             'shortDesc': '30% chance to flinch the target.',
             'target': 'normal',
             'type': 'Electric',
             'zMovePower': 160},
 'zippyzap': {'accuracy': 100,
              'basePower': 50,
              'category': 'Physical',
              'contestType': 'Cool',
              'desc': 'Will always result in a critical hit.',
              'flags': {'contact': 1, 'protect': 1},
              'id': 'zippyzap',
              'isNonstandard': True,
              'isUnreleased': True,
              'isViable': True,
              'name': 'Zippy Zap',
              'num': 729,
              'pp': 15,
              'priority': 2,
              'secondary': {},
              'shortDesc': 'Nearly always goes first. Always crits.',
              'target': 'normal',
              'type': 'Electric',
              'willCrit': True}}
